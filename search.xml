<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CORS学习、实战内网测试和外网更新</title>
    <url>/2018/10/08/CORS%E5%86%85%E7%BD%91%E6%B5%8B%E8%AF%95%E5%92%8C%E5%A4%96%E7%BD%91%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="解释CORS的定义"><a href="#解释CORS的定义" class="headerlink" title="解释CORS的定义"></a>解释CORS的定义</h5><p>CORS （Cross-origin resource sharing）跨域资源共享问题，是W3C的标准。    </p>
<blockquote>
<p>当某一资源在自己的资源服务器上的不同域或者端口请求另一个资源时，那么该资源会发起一次跨域请求. (Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin. A web application makes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, and port) than its own origin.)    </p>
</blockquote>
<h5 id="CORS请求介绍"><a href="#CORS请求介绍" class="headerlink" title="CORS请求介绍"></a>CORS请求介绍</h5><p>CORS请求是指当前请求出现和源站不一样的请求协议、域名(含二级域名)、端口。<br><a href="https://segmentfault.com/a/1190000007326671" target="_blank" rel="noopener">详细介绍哪些情况会出现跨域的情况列链接</a>并前端的角度该如何解决问题。</p>
<a id="more"></a>

<h4 id="CORS请求拦截"><a href="#CORS请求拦截" class="headerlink" title="CORS请求拦截"></a>CORS请求拦截</h4><p>我遇到的HTTPS在CHROME浏览器出现跨域字体无法显示,在safari和HTTP的情况没有出现。<br>浏览器限制了发起跨站请求，存在可能是跨站请求可以正常发起，但是返回结果不包含Access-Control-Allow-Origin等符合信息就被浏览器拦截了。<br>目前一般很少出现浏览器主动限制CORS请求呢。</p>
<h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>对于简单请求，浏览器直接发出 CORS 请求。具体来说，就是由浏览器自动在头信息中增加一个 Origin 字段。然后只需要在返回的相应上加上Access-Control-Allow-Origin:[Origin]|* 。<br><a href="https://zoctan.github.io/2018/07/21/%E5%AD%A6%E4%B9%A0/%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%20CORS%20%E8%AF%A6%E8%A7%A3%EF%BC%88%E8%BD%AC%EF%BC%89/" target="_blank" rel="noopener">前端详细介绍了解</a></p>
<h5 id="接下来详细讲实际解决的情况"><a href="#接下来详细讲实际解决的情况" class="headerlink" title="接下来详细讲实际解决的情况"></a>接下来详细讲实际解决的情况</h5><ul>
<li>需要让内网出现线上的情况</li>
<li>按照网上解决方案去解决</li>
<li>线上CDN资源需要让其失效</li>
</ul>
<h6 id="内网配置出线上环境"><a href="#内网配置出线上环境" class="headerlink" title="内网配置出线上环境"></a>内网配置出线上环境</h6><p>我们内网是http协议，不支持https的协议，没有出现线上的情况。</p>
<ul>
<li>先需要将线上的证书下载到本地，在上传到内网指定位置。</li>
<li>先将内网的nginx的配置文本上加上https的443的端口访问处理。(/opt/nginx/conf/conf.d)</li>
<li>证书和域名是一一对应，所有配置文件的server-name 为证书上的域名。<blockquote>
<pre><code>server {
  listen 443;
  server_name #证书上的域名即线上的网址
  access_log  #日志地址
  ssl    on;
  ssl_certificate   #证书地址
  ssl_certificate_key    #证书地址
  location ~ / {
          proxy_http_version 1.1;
          proxy_set_header Connection &quot;&quot;;
          proxy_set_header  X-Real-IP  $remote_addr;
          proxy_set_header  FORWARDED-FOR  $remote_addr;
          proxy_pass #代理到Tomcat的服务器的域名+端口
          include conf.d/proxy_params;}}</code></pre></blockquote>
</li>
</ul>
<p>1.遇到问题只能通过线上域名访问，但是无法访问到内网的资源。<br>2.<a href="https://www.jianshu.com/p/4394aaf97492" target="_blank" rel="noopener">DNS 服务详细了解</a></p>
<blockquote>
<p>先了解客户端进行域名解析的流程：<br>先查hosts文件<br>若没有，查本地DNS缓存<br>若没有，再查DNS服务器：<br>先查DNS服务器的本地DNS缓存<br>若没有，再查DNS服务器的解析库<br>都没有，那DNS向根域发起请求，开始迭代查询<br>如果缓存的有效期为1天的话，能极大减轻DNS服务器的压力，所以对于DNS的架构，“缓存”是很重要的。</p>
</blockquote>
<p>3.在/etc/hosts文件加上ip和域名的强制映射(内网ip（nginx） 线上域名）。我们的nginx和tomcat服务器是在同一个服务器上。 接下来线上域名的访问都会转接到内网资源的访问。（另一个办法：通过Charles进行代理实现）<br>4.详细分析后，字体是加载进来的js代码发起的静态资源访问（CORS的访问，二级域名不一样）。折腾好久才想起来的，但是静态资源的访问是通过不同内外网环境进行变化的，内网静态资源都在内网服务器上，外网的静态资源在CDN缓存上和静态资源服务器上。<br>5.将加载js的代码写死，变成直接访问外网的静态资源。（与线上保持一致）<br>6.静态资源访问需要变成内网资源的访问。同样，先在hosts文件加上ip和静态资源的域名的强制映射（内网ip  线上域名）。<br>内网静态资源nginx配置         </p>
<blockquote>
<pre><code>server {
           listen 443;
           server_name #静态资源服务器
           gzip on;
   ssl    on;
   ssl_certificate    /data/config/ssl/star.enjoymeet.com.chained;
   ssl_certificate_key    #证书地址
   access_log  #证书地址
   location ~* \.(eot|ttf|woff|woff2)$ {
          add_header  Access-Control-Allow-Origin * ;
          add_header Access-Control-Allow-Methods GET;
          proxy_pass #代理到Tomcat的服务器的域名+端口
   }
 }</code></pre></blockquote>
<p>基本上实现在内网测试。<br>参考资料：在nginx上解决问题<br><a href="http://www.yunweipai.com/archives/9381.html" target="_blank" rel="noopener">Nginx通过CORS实现跨域1</a><br><a href="https://hk.saowen.com/a/bcc2bf629fad4037006703f159ec7927ef4cca06a0d7a2cf6d8932584754fa28" target="_blank" rel="noopener">Nginx通過CORS實現跨域2</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noopener">HTTP访问控制（CORS）
</a><br><a href="https://serverfault.com/questions/162429/how-do-i-add-access-control-allow-origin-in-nginx" target="_blank" rel="noopener">How do I add Access-Control-Allow-Origin in NGINX?</a></p>
<h6 id="线上处理"><a href="#线上处理" class="headerlink" title="线上处理"></a>线上处理</h6><ul>
<li>CDN 回源，我们回源的访问80端口欧，HTTP协议。</li>
<li>CDN的资源让线上的资源失效。</li>
</ul>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP大文件上传思路和总结、HTTP大文件上传学习、服务器集群实现大文件上传</title>
    <url>/2019/06/01/HTTP%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%80%9D%E8%B7%AF%E5%92%8C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="HTTP大文件上传思路和总结"><a href="#HTTP大文件上传思路和总结" class="headerlink" title="HTTP大文件上传思路和总结"></a>HTTP大文件上传思路和总结</h5><h5 id="无法http大文件一次性上传的原因"><a href="#无法http大文件一次性上传的原因" class="headerlink" title="无法http大文件一次性上传的原因"></a>无法http大文件一次性上传的原因</h5><blockquote>
<p>存在文件上传大小的限制</p>
</blockquote>
<ol>
<li>默认一般nginx和tomcat都会对上传文件大小进行限制<br>nginx的配置文件nginx.conf设置 client_max_body_size    20m;   </li>
<li>tomcat默认设置能接收HTTP POST请求的大小最大为2M。如果POST请求传递的数据大于2M,就会报错误。解决方案：修改tomcat的配置server.xml中<connector>标签,在该标签中添 加”maxPostSize”属性,将该属性值设置成你想要的最大值,单位是字节,或者把这个值设置为 0(maxPostSize=”0”)。    </connector></li>
<li><a href="https://www.jianshu.com/p/285ad45f60d1" target="_blank" rel="noopener">Tomcat项目的web配置</a>。工程项目web.xml的配置</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">&lt;multipart-config&gt;</span><br><span class="line">&lt;location&gt;&lt;/location&gt;</span><br><span class="line">&lt;max-file-size&gt;&lt;/max-file-size&gt;</span><br><span class="line">&lt;max-request-size&gt;&lt;/max-request-size&gt;</span><br><span class="line">&lt;file-size-threshold&gt;&lt;/file-size-threshold&gt;</span><br><span class="line">&lt;/multipart-config&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="4">
<li>Spring配置文件限制上传文件的大小    </li>
</ol>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;multipartResolver&quot;</span><br><span class="line">        class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;maxUploadSize&quot; value=&quot;41943040&quot; /&gt; &lt;!-- 40mb --&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure>

<a id="more"></a>
<h6 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h6><p>错误方案1:<br>1、分片上传大文件<br>2、服务端将每片文件存成临时文件，然后在进行合并文件。<br><strong>存在无核实合并文件是否正确的问题</strong></p>
<p>错误方案2:<br><img src="/images/Http%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%81%E7%A8%8B.jpg" alt="http分片上传方案"><br>md5文件摘要，确保合并文件没有问题。<br><strong>存在重复造轮子问题。在分布式服务器中进行分片上传无法控制同一个服务器上</strong></p>
<p>前端选择<a href="http://fex-team.github.io/webuploader/" target="_blank" rel="noopener">WebUploader</a>进行上传。<br>后端没有选择控制nginx路由到指定服务器，而是选择单点文件上传服务thrift。</p>
<blockquote>
<p>单点文件上传服务thrift提供功能</p>
</blockquote>
<ol>
<li>存储分片文件和合并分片文件进行存储</li>
<li>获取文件上传的状态</li>
</ol>
<p>前后端交互流程：</p>
<ul>
<li>前端向服务器获取上传文件的唯一标识。（可以写入数据库获取id标识）</li>
<li>前端将指定文件md5，分片上传 {file,chunk,chunks,md5value,唯一id标识, 额外自定义字段}</li>
<li>服务端检查是否存在唯一id标识，校验参数正确性  <ol>
<li>调用单点文件上传服务，存储指定文件路径夹下（使用 <code>md5Value+userId+唯一id标识</code> 作为唯一文件夹名称）</li>
<li>单点文件上传服务通过对分片文件进行排序统计返回是否可以进行合并文件操作。 | 单点文件上传服务通过对分片文件进行排序统计返回是否正在进行合并操作。</li>
</ol>
</li>
<li>前端收到合并信息停止上传文片文件并调用服务端进行文件合并。</li>
<li>服务端清理相关的文件夹。</li>
<li>当前端接收上传失败的信息，需要调用服务端清理相关文件的操作。</li>
</ul>
<hr>
<h6 id="安卓APK文件上传（不是特别规范，有待以后自己多加研究）"><a href="#安卓APK文件上传（不是特别规范，有待以后自己多加研究）" class="headerlink" title="安卓APK文件上传（不是特别规范，有待以后自己多加研究）"></a>安卓APK文件上传（不是特别规范，有待以后自己多加研究）</h6><blockquote>
<p>前端分片文件 -&gt; 服务端 -&gt; 单点文件服务</p>
</blockquote>
<ul>
<li>单点文件服务是否在合并文件 -&gt; 服务端 -&gt; 前端</li>
</ul>
<p><strong>这一步就是为了让服务端分片不去占用磁盘。降低出错下，产生大量临时文件</strong></p>
<blockquote>
<p>前端删除分片文件 -&gt; 服务端 -&gt; 单点文件服务      </p>
</blockquote>
<ul>
<li>单点文件服务删除分片文件 -&gt; 服务端 -&gt; 前端</li>
</ul>
<p><strong>增加这一步的原因：APK远程上传到CDN上耗时较长，容易超过request时间。改用轮询来处理，让界面不卡死，容易有反馈。</strong></p>
<blockquote>
<p>前端获取APK文件上传状态 -&gt; 服务端 -&gt; 单点文件服务</p>
</blockquote>
<ul>
<li>单点文件服务APK上传状态 -&gt; 服务端 -&gt; 前端</li>
</ul>
<p><img src="/images/APK%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.jpg" alt="APK上传流程"></p>
<p>推荐了解网址:<br><a href="https://my.oschina.net/appnet/blog/1591830" target="_blank" rel="noopener">大文件分步式分片上传和续传</a><br><a href="https://blog.kazaff.me/2014/11/14/%E8%81%8A%E8%81%8A%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/" target="_blank" rel="noopener">聊聊大文件上传</a><br><a href="https://blog.breezelin.cn/scheme-nginx-php-js-upload-process.html" target="_blank" rel="noopener">HTTP文件上传的一个后端完善方案（NginX）</a><br><a href="https://segmafrontend.github.io/2018/09/19/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/" target="_blank" rel="noopener">大文件上传解决方案</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>PERL学习</title>
    <url>/2018/12/05/PERL%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a><br>perl 是脚本语言，在工作部署、编译等一些关于linux服务器上的事情都会跟perl打交道。写下自己学习路程，给自己日后总结。</p>
<h3 id="文档查询"><a href="#文档查询" class="headerlink" title="文档查询"></a>文档查询</h3><p>perldoc -f xxxx</p>
<h3 id="perl数据类型"><a href="#perl数据类型" class="headerlink" title="perl数据类型"></a>perl数据类型</h3><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>定义字符串变量: my $name (my: 定义变量 $: 表示字符串 name: 变量名)<br><strong><em>注意点</em></strong>         </p>
<ul>
<li>内插型字符串<blockquote>
<p>其他变量的数据可以在插入字符串中展示</p>
</blockquote>
</li>
</ul>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my $name = &quot;Inigo MOntoya&quot;;</span><br><span class="line">print &quot;My name is $name&quot;;</span><br></pre></td></tr></table></figure>

<ul>
<li>非内插型字符串<blockquote>
<p>无论什么字符都直接展示</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print &apos;You may have won $1,000,000&apos;;</span><br></pre></td></tr></table></figure>

<ul>
<li>转义字符<blockquote>
<p>有些特殊字符需要转义才能正输出</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my $email = &quot;andy@foo.com&quot;;</span><br><span class="line">print $email;</span><br><span class="line"># Prints &quot;andy.com&quot;</span><br><span class="line">解决方案:</span><br><span class="line">my $email = &quot;andy\@foo.com&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="字符串操作函数"><a href="#字符串操作函数" class="headerlink" title="字符串操作函数"></a>字符串操作函数</h4><ul>
<li>length() 获取字符串长度</li>
<li>subStr() 能够截取字符串</li>
</ul>
<h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><ul>
<li><p>创建</p>
</li>
<li><p>访问 $stooges[1]</p>
</li>
<li><p>数组长度 @stooges  scalar @stooges</p>
</li>
<li><p>数组特性</p>
<ul>
<li>数组没有边界</li>
<li>数组合并会平展元素</li>
</ul>
</li>
<li><p>数组操作方法</p>
<ul>
<li>shift 从数组开头移除元素</li>
<li>unshift 将元素添加到数组开头</li>
<li>push 将元素添加到数组的结尾</li>
<li>pop 从数组的结尾移除元素</li>
</ul>
</li>
<li><p>数组高级用法</p>
<ul>
<li><p>提取数组的部分元素</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my @a = &apos;a&apos;..&apos;z&apos;;</span><br><span class="line">my @vowels = @a[0, 4, 8, 14, 20];</span><br></pre></td></tr></table></figure>
</li>
<li><p>分配数组块 使用splice</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用场景 数组拼接</span><br><span class="line">my @a = qw(Steve Stu Stan);</span><br><span class="line">$a[1] = [&apos;Stewart&apos;, &apos;Zane&apos;];</span><br><span class="line"># @a = (&apos;Steve&apos;, ARRAY(0x841214c), &apos;Stan&apos;)</span><br><span class="line"></span><br><span class="line">my @a = qw(Steve Stu Stan);</span><br><span class="line">splice @a 1, 1, &apos;Stewart&apos;, &apos;Zane&apos;;</span><br><span class="line">#@a = (&apos;Steve&apos;, &apos;Stewart&apos;, &apos;Zane&apos;, &apos;Stan&apos;)</span><br></pre></td></tr></table></figure>

<ul>
<li>利用map处理数组 (<strong>map 本质上是返回列表的foreach 循环</strong>)map</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my @ARRAY = (1, 2, 3, 4, 5);</span><br><span class="line">my %hash = map &#123;$_ =&gt; $_ * 9&#125; @ARRAY;</span><br><span class="line"># %hash = (1 =&gt; 9, 2 =&gt; 18, 3 =&gt; 27, 4 =&gt; 36, 5 =&gt; 45)</span><br></pre></td></tr></table></figure>

<ul>
<li>grep从数组中选择项目 (<strong>grep 本质上返回列表foreach循环</strong>)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my @ARRAY = (1, 2, 3, 4, 5);</span><br><span class="line">my @NEWARRAY = grep &#123;$_ * 9&#125; @ARRAY</span><br><span class="line">&#123;&#125; 包含表达式的意思</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h4 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h4><p>哈希就是键值对</p>
<ul>
<li>创建</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.方法一</span><br><span class="line">my %stooges = (</span><br><span class="line">  &apos;Moe&apos;, &apos;Howard&apos;,</span><br><span class="line">  &apos;Larry&apos;, &apos;Fine&apos;,</span><br><span class="line">  );</span><br><span class="line">2. 方法二</span><br><span class="line">my %stooges = (</span><br><span class="line">  Moe =&gt; &apos;Howard&apos;,</span><br><span class="line">  Larry =&gt; &apos;Fine&apos;,</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<ul>
<li>哈希转数组</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my @hash_array = %stooges;</span><br><span class="line"># Contains (&apos;Moe&apos;, &apos;Howard&apos;, &apos;Larry&apos;, &apos;Fine&apos;);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>使用{}操作哈希<br>输出哈希值 更改哈希值 删除哈希条目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print $stooges&#123;&apos;Moe&apos;&#125;;</span><br><span class="line">#Prints &quot;Howard&quot;;</span><br><span class="line">$stooges&#123;&apos;Moe&apos;&#125; = &apos;NiHao&apos;;</span><br><span class="line">delete $stooges&#123;&apos;Moe&apos;&#125;;</span><br><span class="line">unlink $stooges&#123;&apos;Moe&apos;&#125;;</span><br><span class="line">delete 不会删除文件 unlink 为删除文件</span><br></pre></td></tr></table></figure>
</li>
<li><p>哈希的键/值数组</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my @key = keys %stooges;</span><br><span class="line">my @value = values %stooges;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>哈希特点</p>
<ul>
<li>哈希是无序的</li>
<li>无法排序</li>
</ul>
</li>
<li><p>哈希define exist的差异</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>perl</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac os thrift旧版本安装爬坑指南、Mac thrift安装指南、thrift安装学习、thrift安装爬坑</title>
    <url>/2019/06/01/MacOS%20thrift%E6%97%A7%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E7%88%AC%E5%9D%91%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="Mac-os-thrift旧版本安装爬坑指南"><a href="#Mac-os-thrift旧版本安装爬坑指南" class="headerlink" title="Mac os thrift旧版本安装爬坑指南"></a>Mac os thrift旧版本安装爬坑指南</h5><p>喜欢使用brew来进行一键安装:</p>
<blockquote>
<p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew官网</a><br><a href="https://github.com/Homebrew/homebrew-core" target="_blank" rel="noopener">homebrew-core github网址</a></p>
</blockquote>
<ul>
<li><p>对于安装最新新版本thrift,我们可以直接是用brew install thrift     </p>
</li>
<li><p>使用brew search thrift;查看不同版本的thrift。然后brew install <a href="mailto:thrift@0.9.0" target="_blank" rel="noopener">thrift@0.9.0</a></p>
</li>
<li><p>使用复杂brew方案进行安装。思路同时通过找到旧版本的thrift.rb。</p>
<ol>
<li>将homebrew-core的git文件下载到本地。</li>
<li>通过查看Formula/thrift.rb的history。   </li>
</ol>
<a id="more"></a>
<p><code>git log 234b34ab1418bd42b14e73dbeea179f40ef1bec2 -- Formula/thrift.rb</code></p>
<ol start="3">
<li><p>找到旧版本的commit。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  commit 9d524e4850651cfedd64bc0740f1379b533f607d</span><br><span class="line">Author: BrewTestBot &lt;brew-test-bot@googlegroups.com&gt;</span><br><span class="line">Date:   Thu Dec 29 18:54:26 2016 +0000</span><br><span class="line"></span><br><span class="line">    thrift: update 0.9.3 bottle.</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后将链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://github.com/Homebrew/homebrew-core/blob/&#123;commit_id&#125;/Formula/thrift.rb</span><br><span class="line">即:</span><br><span class="line">https://github.com/Homebrew/homebrew-core/blob/9d524e4850651cfedd64bc0740f1379b533f607d/Formula/thrift.rb</span><br></pre></td></tr></table></figure>
</li>
<li><p>点击页面上按钮“Raw”,获取文件内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/Homebrew/homebrew-core/&#123;commit_id&#125;/Formula/thrift.rb</span><br><span class="line">即:</span><br><span class="line">https://raw.githubusercontent.com/Homebrew/homebrew-core/9d524e4850651cfedd64bc0740f1379b533f607d/Formula/thrift.rb</span><br></pre></td></tr></table></figure>
</li>
<li><p>在命令行上 brew install <a href="https://raw.githubusercontent.com/Homebrew/homebrew-core/9d524e4850651cfedd64bc0740f1379b533f607d/Formula/thrift.rb" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/homebrew-core/9d524e4850651cfedd64bc0740f1379b533f607d/Formula/thrift.rb</a><br>即可。<br>安装成功。</p>
</li>
</ol>
<p>参考网址:<br><a href="https://apple.stackexchange.com/questions/352477/install-older-removed-brew-formula-version" target="_blank" rel="noopener">Install older removed brew formula version</a></p>
</li>
</ul>
<h5 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h5><blockquote>
<p><a href="https://thrift.apache.org/" target="_blank" rel="noopener">thrift快速指南</a></p>
</blockquote>
<ul>
<li><a href="https://github.com/apache/thrift/releases" target="_blank" rel="noopener">下载旧版本</a></li>
<li><a href="https://thrift.apache.org/docs/install/" target="_blank" rel="noopener">安装下载thrift要求的其他工具|插件</a></li>
<li><a href="https://thrift.apache.org/docs/BuildingFromSource" target="_blank" rel="noopener">配置、编译、安装</a></li>
</ul>
<hr>
<h5 id="开始爬坑"><a href="#开始爬坑" class="headerlink" title="开始爬坑"></a>开始爬坑</h5><ul>
<li><p>安装前要求工具 可以使用brew install 进行安装</p>
<blockquote>
<p><a href="https://thrift.apache.org/docs/install/os_x" target="_blank" rel="noopener">https://thrift.apache.org/docs/install/os_x</a><br>boost<br>libevent<br>openssl<br>bison 2.5  </p>
</blockquote>
</li>
<li><p>下载thrift文件安装包</p>
<blockquote>
<p><a href="https://github.com/apache/thrift/releases/tag/0.9.3" target="_blank" rel="noopener">https://github.com/apache/thrift/releases/tag/0.9.3</a><br>tar -zxvf 解压</p>
</blockquote>
</li>
<li><p>编译流程</p>
<blockquote>
<p>./configure –prefix=/usr/local/ –disable-static –without-python –without-csharp –without-ruby –without-perl –without-php –without-haskell –without-erlang<br><a href="https://thrift.apache.org/docs/BuildingFromSource" target="_blank" rel="noopener">https://thrift.apache.org/docs/BuildingFromSource</a><br>出现bison版本低:  <a href="https://stackoverflow.com/questions/31805431/how-to-install-bison-on-mac-osx" target="_blank" rel="noopener">https://stackoverflow.com/questions/31805431/how-to-install-bison-on-mac-osx</a><br>注意需要source  .base_profile</p>
</blockquote>
</li>
<li><p>出现问题：</p>
<blockquote>
<p>src/thrift/transport/TSSLSocket.cpp:33:10: fatal error: ‘openssl/err.h’ file not found  #include &lt;openssl/err.h&gt;<br><a href="https://www.jianshu.com/p/f7380139afdd" target="_blank" rel="noopener">https://www.jianshu.com/p/f7380139afdd</a></p>
</blockquote>
</li>
</ul>
<p>推荐阅读:<br><a href="http://www.ruanyifeng.com/blog/2014/11/compiler.html" target="_blank" rel="noopener">编译器的工作过程</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>ganglia安装使用</title>
    <url>/2020/07/26/ganglia%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="ganglia"><a href="#ganglia" class="headerlink" title="ganglia"></a>ganglia</h3><h4 id="Ganglia简介"><a href="#Ganglia简介" class="headerlink" title="Ganglia简介"></a>Ganglia简介</h4><p><a href="http://ganglia.info/" target="_blank" rel="noopener">ganglia官网</a>     <a href="https://zhuanlan.zhihu.com/p/48597372" target="_blank" rel="noopener">监控软件对比</a><br>&emsp;&emsp; Ganglia是一个可扩展的分布式监视系统，用于高性能计算系统，例如集群和网格。它利用了广泛使用的技术，例如XML用于数据表示，XDR用于紧凑，便携式数据传输以及RRDtool用于数据存储和可视化。它使用精心设计的数据结构和算法来实现非常低的每节点开销和高并发性。它已用于链接大学校园和全球范围内的集群，并且可以扩展以处理具有2000个节点的集群。</p>
<p>伯克利大学的开源服务器监控软件。</p>
<h4 id="ganglia模块结构"><a href="#ganglia模块结构" class="headerlink" title="ganglia模块结构"></a>ganglia模块结构</h4><p>ganglia 分为gmond、gmetad、gweb</p>
<h4 id="Centos-安装与使用"><a href="#Centos-安装与使用" class="headerlink" title="Centos 安装与使用"></a>Centos 安装与使用</h4><h5 id="PHP-nginx-gweb的安装与使用"><a href="#PHP-nginx-gweb的安装与使用" class="headerlink" title="PHP+nginx+gweb的安装与使用"></a>PHP+nginx+gweb的安装与使用</h5><h6 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h6><p>安装并启动gmetad:</p>
<blockquote>
<p>gmetad展示收集到cpu等服务器性能数据。gmetad通过TCP拉取gmond信息</p>
</blockquote>
<ul>
<li><p><code>yum install ganglia-gmetad</code>   gmetad拉取其他集群或者服务器的rrd数据</p>
</li>
<li><p>自定义设置/etc/ganglia/gmetad.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data_source &quot;dev&quot; localhost   #自定义集群数据源为dev,localhost是指集群数据来自于本机</span><br><span class="line">gridname &quot;Dev&quot;   #自定义表格为Dev</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="/images/gmetad%E9%85%8D%E7%BD%AE%E5%BD%B1%E5%93%8D%E5%85%83%E7%B4%A0.png" alt="gmetad配置影响元素"></p>
<ul>
<li><code>chkconfig gmetad on</code>     centos6开启开机自动启动</li>
<li><code>service gmetad start</code>    启动gmetad程序</li>
</ul>
<a id="more"></a>
<p><strong><em>安装并启动gweb:</em></strong>  </p>
<p><strong>两种方式安装:</strong>   </p>
<ol>
<li>第一种方式自定义编译安装(当时因为担心yum提供的不太完整，所以采用源码ganglia-web包编译安装):</li>
</ol>
<ul>
<li>下载安装ganglia-web包</li>
<li><ul>
<li>下载最新ganglia-web最新安装包 <a href="https://sourceforge.net/projects/ganglia/files/ganglia-web/" target="_blank" rel="noopener">下载地址</a></li>
</ul>
</li>
<li><ul>
<li>解压ganglia-web的压缩包</li>
</ul>
</li>
<li><ul>
<li>创建www-data的用户  <code>useradd www-data</code></li>
</ul>
</li>
<li><ul>
<li>切换至ganglia-web的解压缩包路径下执行： <code>make install</code>  编译安装ganglia-web</li>
</ul>
</li>
</ul>
<ol start="2">
<li>第二种方式安装:  </li>
</ol>
<ul>
<li><p>yum install ganglia-web</p>
</li>
<li><p><code>/var/lib/ganglia-web/dwoo/compiled</code>、<code>/var/lib/ganglia-web/dwoo/cache</code>文件夹写入权限用户组，需要看php-fpm启动用户(默认为:apache)</p>
</li>
<li><ul>
<li><code>chown -R apache:apache ./</code></li>
</ul>
</li>
</ul>
<p><strong>安装nginx代理访问ganglia-web的应用</strong>   </p>
<ul>
<li>下载安装启动nginx <a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/" target="_blank" rel="noopener">nginx官网安装教程</a></li>
<li>nginx配置gweb</li>
</ul>
<ol>
<li>创建了一个nginx的 ganglia.conf,并将这个文件 <code>include conf.d/aloha_ganglia.conf;</code>到nginx.conf中。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ganglia.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line"></span><br><span class="line">    access_log  /data/log/nginx/access_ganglia_http.log main;</span><br><span class="line">    gzip  on;</span><br><span class="line"></span><br><span class="line">    # root指向/usr/share/ganglia-webfrontend</span><br><span class="line">    root /usr/share/ganglia-webfrontend;</span><br><span class="line">    index index.php;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">      fastcgi_pass  localhost:9000;</span><br><span class="line">      include fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><p><code>yum install php-fpm</code>    php-fpm(FastCGI Process Manager)安装php的fastcgi进程管理包</p>
</li>
<li><p><code>chkconfig php-fpm on</code>  centos6开启开机自动启动</p>
</li>
<li><p><code>service php-fpm start</code>   启动php-fpm</p>
</li>
</ul>
<h6 id="Client-Node"><a href="#Client-Node" class="headerlink" title="Client/Node"></a>Client/Node</h6><blockquote>
<p>定义单广播地址、端口和群播的端口，定义gmetad拉取数据端口。<br>需要配置集群主节点、子节点。子节点负责发送数据到主节点、主节点收集子节点数据，同时开放端口共gmetab提取数据。</p>
</blockquote>
<ul>
<li><p><code>yum install ganglia-gmond</code>  使用yum安装 ganglia-gmond</p>
</li>
<li><p><code>chkconfig gmond on</code>     centos6开启开机自动启动</p>
</li>
<li><p><code>service gmond start</code>     启动gmond</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster &#123;</span><br><span class="line">  name = &quot;dev&quot;  #指定data_source的名称，集群名称</span><br><span class="line">  owner = &quot;unspecified&quot;</span><br><span class="line">  latlong = &quot;unspecified&quot;</span><br><span class="line">  url = &quot;unspecified&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">udp_send_channel &#123; #udp包的发送通道</span><br><span class="line">  #bind_hostname = yes # Highly recommended, soon to be default.</span><br><span class="line">                       # This option tells gmond to use a source address</span><br><span class="line">                       # that resolves to the machine&apos;s hostname.  Without</span><br><span class="line">                       # this, the metrics may appear to come from any</span><br><span class="line">                       # interface and the DNS names associated with</span><br><span class="line">                       # those IPs will be used to create the RRDs.</span><br><span class="line">  #mcast_join = 239.2.11.71  </span><br><span class="line">  host = 192.168.0.2     # 单播地址</span><br><span class="line">  port = 8649   # 单播端口</span><br><span class="line">  ttl = 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">udp_recv_channel &#123; #接收udp包配置</span><br><span class="line">  #mcast_join = 239.2.11.71</span><br><span class="line">  port = 8649     #gmond收到广播端口</span><br><span class="line">  #bind = 239.2.11.71</span><br><span class="line">  retry_bind = true</span><br><span class="line">  # Size of the UDP buffer. If you are handling lots of metrics you really</span><br><span class="line">  # should bump it up to e.g. 10MB or even higher.</span><br><span class="line">  # buffer = 10485760</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tcp_accept_channel &#123;</span><br><span class="line">  port = 8649   #开放gmetad的端口，常用于集群主节点</span><br><span class="line">  # If you want to gzip XML output</span><br><span class="line">  gzip_output = no</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">send_metadata_interval 30  #改成30秒，一定要改，否则子节点数据不会提交</span><br></pre></td></tr></table></figure>

<h6 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h6><table>
<thead>
<tr>
<th align="center">应用</th>
<th align="center">配置文件</th>
<th align="center">数据文件</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ganglia-gmetad</td>
<td align="center">/etc/ganglia/gmetad.conf</td>
<td align="center"></td>
<td align="center">service gmetab start、chkconfig gmetab on</td>
</tr>
<tr>
<td align="center">ganglia-gmond</td>
<td align="center">/etc/ganglia/gmond.conf</td>
<td align="center"></td>
<td align="center">service gmond start、chkconfig gmond on</td>
</tr>
<tr>
<td align="center">ganglia-web</td>
<td align="center"></td>
<td align="center">/var/lib/ganglia-web/dwoo/compiled、/var/lib/ganglia-web/dwoo/cache、/usr/share/ganglia-webfrontend</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">rrdtool</td>
<td align="center"></td>
<td align="center">/var/lib/ganglia/rrds</td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="http://legendtkl.com/2017/08/12/understanding-ganglia-1/" target="_blank" rel="noopener">深入理解 Ganglia 之 Overview</a><br><a href="https://wiki.archlinux.org/index.php/Ganglia" target="_blank" rel="noopener">nginx 配置ganglia参考</a><br><a href="https://www.dazhuanlan.com/2019/08/21/5d5d10f64d4ed/" target="_blank" rel="noopener">Ganglia部署实战</a><br><a href="https://github.com/ganglia/monitor-core/wiki/Ganglia-Quick-Start" target="_blank" rel="noopener">Ganglia Quick Start</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOX安装JMagick、Jmagick安装学习、Jmagick爬坑指南</title>
    <url>/2019/01/29/MacOX%E5%AE%89%E8%A3%85JMagick/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="MacOX安装JMgick原因和使用JMagick执行流程"><a href="#MacOX安装JMgick原因和使用JMagick执行流程" class="headerlink" title="MacOX安装JMgick原因和使用JMagick执行流程"></a>MacOX安装JMgick原因和使用JMagick执行流程</h5><blockquote>
<p>目前对于图片处理，很少采用java去处理图片，性能不是很好。目前我们公司采用ImageMagick图片处理，有些采用Process执行cmd命令，有些采用jmagick的java接口进行处理。</p>
</blockquote>
<p><a href="https://www.imagemagick.org/index.php" target="_blank" rel="noopener">ImageMagick官网</a><br>通过jmagick调用native方法来调用JMagick的方法, 再由JMagick调用ImageMagick的方法。jmagick使用Java代码写的。JMagick使用C语言写的，含有java JNI生成的头文件。ImageMagick使用C语言写的，没有含有java JNI生成的头文件。 <a href="https://elf8848.iteye.com/blog/455675" target="_blank" rel="noopener">ImageMagick介绍和执行流程原因解释</a>         </p>
<ul>
<li>执行流程:                     </li>
<li>jmagick（java） –&gt; JMagick(C) –&gt; ImageMagick(C)</li>
</ul>
<a id="more"></a>
<h5 id="本地MacOX执行遇到问题"><a href="#本地MacOX执行遇到问题" class="headerlink" title="本地MacOX执行遇到问题"></a>本地MacOX执行遇到问题</h5><p>new MagickInfo(“”); 调用时出现无法加载MagickLoader，实际无法加载资源JMagick；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ClassLoader.getSystemClassLoader().loadClass(&quot;magick.MagickLoader&quot;).newInstance();</span><br><span class="line">public class MagickLoader &#123;</span><br><span class="line">    static &#123;      </span><br><span class="line">        System.loadLibrary(&quot;JMagick&quot;);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为jmagick的接口都是本地调用，需要加载JNI的JMagick动态库。因此，接下来我们的主要任务是生成JMagick的动态库。<br>通过Brew install ImageMagick直接安装使用。但是JMagick只用源码包，需要进行编译安装。尽量将ImageMagick和JMagick安装在同一路径下。</p>
<h6 id="Brew-install-ImageMagick-开始编译JMagick，生成JMagick动态库。"><a href="#Brew-install-ImageMagick-开始编译JMagick，生成JMagick动态库。" class="headerlink" title="Brew install ImageMagick,开始编译JMagick，生成JMagick动态库。"></a>Brew install ImageMagick,开始编译JMagick，生成JMagick动态库。</h6><ul>
<li>遇到JMagick出现找不到api.h文件(实际上在ImageMagick-7是没有这个api.h文件，在ImageMagick-6是有api.h文件):<br>checking magick/api.h usability… no<br>checking magick/api.h presence… no<br>checking for magick/api.h… no<br>configure: error: ‘Unable to find ImageMagick header files’。</li>
</ul>
<p>出现这种情况通过pkg-config、修改configure的参数、查看configure源码，根据报错来修改文件路径，让其能够找到header files等等方法。这些方法都没有解决问题。    </p>
<ul>
<li><a href="http://promiselove.github.io/2017/11/30/Mac%E5%AE%89%E8%A3%85Imagemagick%E5%92%8CJMagick/" target="_blank" rel="noopener">该文章找到原因</a></li>
</ul>
<p>主要是因为JMagick版本老(最新版本是2013更新的)，无法跟上ImageMagick的节奏。ImageMagick的文件位置都发生了很大的变化。(注.看configure源码，可以看到一些文件路径不在了)。</p>
<ul>
<li><p>我们需要做的是：ImageMagick不要安装最新版本，安装旧版ImageMaick6相关版本，并且下载JMagick6.4.0版本。</p>
</li>
<li><p>根据configure的部分源码</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Check whether --with-magick-home was given.</span><br><span class="line">if test &quot;$&#123;with_magick_home+set&#125;&quot; = set; then</span><br><span class="line">  withval=$with_magick_home; MAGICK_HOME=$&#123;withval&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for MPATH in /usr /usr/local /usr/local/ImageMagick /usr/local/ImageMagick-$&#123;VER_MAJOR&#125;.$&#123;VER_MINOR&#125;.$&#123;VER_MICRO&#125; $&#123;MAGICK_HOME&#125; ; do</span><br><span class="line">        # Location before IM 6.3.8.something</span><br><span class="line">        if  test -f $&#123;MPATH&#125;/include/magick/api.h  ; then</span><br><span class="line">                MAGICK_LIB_PATH=$&#123;MPATH&#125;/lib</span><br><span class="line">                MAGICK_LIBS=&quot;-L$&#123;MPATH&#125;/lib -lMagick&quot;</span><br><span class="line">                MAGICK_INCLUDES=-I$&#123;MPATH&#125;/include</span><br><span class="line">                MAGICK_REALHOME=$&#123;MPATH&#125;</span><br><span class="line">        fi</span><br><span class="line">        # Location after IM 6.3.8.something</span><br><span class="line">        if  test -f $&#123;MPATH&#125;/include/ImageMagick/magick/api.h  ; then</span><br><span class="line">                MAGICK_LIB_PATH=$&#123;MPATH&#125;/lib</span><br><span class="line">                MAGICK_LIBS=&quot;-L$&#123;MPATH&#125;/lib -lMagick&quot;</span><br><span class="line">                MAGICK_INCLUDES=-I$&#123;MPATH&#125;/include/ImageMagick</span><br><span class="line">                MAGICK_REALHOME=$&#123;MPATH&#125;</span><br><span class="line">        fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>因为编译的该文件的<code>${MPATH}/include/magick/api.h</code>。由于目前include路径下存放的文件多了一层Imagemagick-6，我们要将Imagemagick-6里的所有文件ln -s到include目录下。<br>eg:我的configure命令：</p>
<ul>
<li><p><code>JAVA_HOME=&quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/&quot; CFLAGS=&quot;-I/Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/include/ -I/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/include/darwin&quot;  ./configure --with-magick-inc-dir=-I/usr/local/Cellar/imagemagick/6.9.10-14/include/ --with-magick-lib-dir=-L/usr/local/Cellar/imagemagick/6.9.10-14/lib/</code></p>
</li>
<li><p><code>./configure --with-java-home=</code>/usr/libexec/java_home<code>--with-java-includes=/System/Library/Frameworks/JavaVM.framework/Headers --with-magick-inc-dir=/usr/local/Cellar/imagemagick@6/6.9.10-14/include/ --with-magick-lib-dir=/usr/local/Cellar/imagemagick@6/6.9.10-14/lib/</code></p>
</li>
</ul>
<p>接下来有些问题下面链接可以解决一部分由<br><a href="https://www.zybuluo.com/yibo/note/125940" target="_blank" rel="noopener">Mac OS X 安装JMagick</a>来解决我们configure的问题。<br>因为还有编译文件中的<code>withval=$with_magick_home; MAGICK_HOME=${withval}</code>,因此我们可以通过增加 – with_magick_home参数，解决某些问题。</p>
<p>make过程中ERROR ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make[1]: Entering directory `/usr/local/Cellar/jmagick-6.4.0/6.4.0/src&apos;</span><br><span class="line">make[2]: Entering directory `/usr/local/Cellar/jmagick-6.4.0/6.4.0/src/magick&apos;</span><br><span class="line">make[2]: *** No rule to make target `/usr/local/Cellar/imagemagick/6.9.10-14/include/magick/api.h&apos;, needed by `/usr/local/Cellar/jmagick-6.4.0/6.4.0/obj/magick/magick_PixelPacket.lo&apos;.  Stop.</span><br><span class="line">make[2]: Leaving directory `/usr/local/Cellar/jmagick-6.4.0/6.4.0/src/magick&apos;</span><br><span class="line">make[1]: *** [dir_target] Error 2</span><br><span class="line">make[1]: Leaving directory `/usr/local/Cellar/jmagick-6.4.0/6.4.0/src&apos;</span><br><span class="line">make: *** [dir_target] Error 2</span><br></pre></td></tr></table></figure>

<p>因为api.h的路径不对，可以通过ln -s 下。eg: cd /usr/local/Cellar/ &amp;&amp; ln -s ./imagemagick@6/ imagemagick</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make[1]: Entering directory `/Users/yibo/Downloads/6.4.0/src&apos;</span><br><span class="line">make[2]: Entering directory `/Users/yibo/Downloads/6.4.0/src/magick&apos;</span><br><span class="line">../../Make.rules:175: *** missing separator.  Stop.</span><br><span class="line">make[2]: Leaving directory `/Users/yibo/Downloads/6.4.0/src/magick&apos;</span><br><span class="line">make[1]: *** [dir_target] Error 2</span><br><span class="line">make[1]: Leaving directory `/Users/yibo/Downloads/6.4.0/src&apos;</span><br><span class="line">make: *** [dir_target] Error 2</span><br></pre></td></tr></table></figure>

<p>修改Make.rules, 175,176 四个空格换成tab，参见: <a href="http://stackoverflow.com/a/15880079/3368344" target="_blank" rel="noopener">http://stackoverflow.com/a/15880079/3368344</a></p>
<h6 id="make-make-install-成功之后"><a href="#make-make-install-成功之后" class="headerlink" title="make make install 成功之后"></a>make make install 成功之后</h6><p>在/usr/local/lib会生成三个文件</p>
<ul>
<li>jmagick-6.4.0.jar</li>
<li>libJMagick-6.4.0.so</li>
<li>libJMagick.so -&gt; ./libJMagick-6.4.0.so<br>在动态链接库在不同平台的形式：</li>
<li>windows .dll</li>
<li>linux .so</li>
<li>macos .dylib (最新的动态链接库) .jnilib (以前的动态链接库)<br>需要在mac上使用动态链接库，需要使用dylib的后缀的名称。<br>cp libJMagick.so libJMagick.dylib</li>
</ul>
<h5 id="测试使用"><a href="#测试使用" class="headerlink" title="测试使用"></a>测试使用</h5><p>IDEA的单元测试没有问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">      String property = System.getProperty(&quot;java.library.path&quot;);</span><br><span class="line">      System.out.println(property);  // 输出/usr/local/lib</span><br><span class="line">      // System.setProperty(&quot;java.library.path&quot;, &quot;/usr/local/lib&quot;);</span><br><span class="line">      // System.loadLibrary(&quot;JMagick&quot;);</span><br><span class="line">      System.out.println(&quot;success&quot;);</span><br><span class="line">      MagickInfo magickInfo = new MagickInfo(&quot;myImage&quot;);</span><br><span class="line">    &#125; catch (MagickException e) &#123;</span><br><span class="line">      System.out.println(e);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>IDEA的Tomcat需要额外处理：<br>tomcat的VM options增加：<br>-Djmagick.systemclassloader=no -Djava.library.path=/usr/local/lib</p>
<p>参考资料：<br><a href="https://www.zybuluo.com/yibo/note/125940" target="_blank" rel="noopener">Mac OS X 安装JMagick</a><br><a href="http://promiselove.github.io/2017/11/30/Mac%E5%AE%89%E8%A3%85Imagemagick%E5%92%8CJMagick/" target="_blank" rel="noopener">Mac安装Imagemagick和JMagick</a><br><a href="http://noahsnail.com/2016/12/12/2016-12-12-Linux%E7%9A%84pkg-config%E5%91%BD%E4%BB%A4/" target="_blank" rel="noopener">Linux的pkg-config命令</a><br><a href="https://elf8848.iteye.com/blog/455675" target="_blank" rel="noopener">ImageMagick +Jmagick安装</a>   </p>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>通过nginx控制http转https、http转https请求实现、http变成https请求</title>
    <url>/2019/06/01/nginx%E6%8E%A7%E5%88%B6http%E8%BD%AChttps/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="通过nginx控制http转https"><a href="#通过nginx控制http转https" class="headerlink" title="通过nginx控制http转https"></a>通过nginx控制http转https</h5><blockquote>
<p>现在越来越多的公司选择https的协议。<br>我司的做法: nginx上进行https的认证，在请求在交给tomcat进行处理。而tomcat处理的是http的请求。因为当进行tomcat应用程进行重定向时直接使用http的请求在处理。</p>
</blockquote>
<p>为了保证整个请求都是https请求。我们需要将返回的请求进行重定向为https的。</p>
<p>通过proxy-redirect修改Location中的url。</p>
<ol>
<li>将 conf/conf.d/proxy_params文件中 <code>proxy_redirect off;</code> 注释掉</li>
<li>将<br>proxy_redirect <a href="http://www.xxxxx.com/" target="_blank" rel="noopener">http://www.xxxxx.com/</a> <a href="https://www.xxxxx.com/" target="_blank" rel="noopener">https://www.xxxxx.com/</a>;<br>proxy_redirect <a href="http://xxxxx.com/" target="_blank" rel="noopener">http://xxxxx.com/</a> <a href="https://xxxx.com/" target="_blank" rel="noopener">https://xxxx.com/</a>;<br>放入到server {}块中。</li>
</ol>
<p>如果一直使用http的协议，容易出现网页中有代码注入广告的现象。运营商就经常将小广告注入到网页中，一般是网页的右下角有个摆动的小图标。使用https的协议，能够降低这一现象。不过一山更比一山高，https的也会有网页代码注入的现象，不过特别隐蔽。我遇到表现是打开应用的中网页时会启动其他应用程序如京东、淘宝。<a href="https://www.zhihu.com/question/35720092/answer/523563873" target="_blank" rel="noopener">对这一现象的说明和解决方案</a></p>
<p>参考资料:<br><a href="http://info.siven.net/posts/d925bb5d.html" target="_blank" rel="noopener">Nginx SSL 结合Tomcat 重定向URL变成HTTP的问题</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>phantomjs截图文字不显示、phantmjs文字不显示、phantomJS学习了解</title>
    <url>/2018/12/18/phantomjs%E6%88%AA%E5%9B%BE%E6%96%87%E5%AD%97%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="PhantomJS-基于-webkit-内核的无界面浏览器"><a href="#PhantomJS-基于-webkit-内核的无界面浏览器" class="headerlink" title="PhantomJS  基于 webkit 内核的无界面浏览器"></a>PhantomJS  基于 webkit 内核的无界面浏览器</h4><blockquote>
<p>webkit:<br>webkit tutorial : <a href="https://www.paulirish.com/2013/webkit-for-developers/" target="_blank" rel="noopener">https://www.paulirish.com/2013/webkit-for-developers/</a><br>中文了解:<br><a href="https://www.jianshu.com/p/a129b05e2216" target="_blank" rel="noopener">https://www.jianshu.com/p/a129b05e2216</a></p>
</blockquote>
<h4 id="学习缘由"><a href="#学习缘由" class="headerlink" title="学习缘由"></a>学习缘由</h4><p>运营活动需要将用户这一年的数据展示出来，用户是可以截图的。<br>当时方案好几个:</p>
<ol>
<li>用户自己手动截图，但是一个用户截图效果有可能会不太好，也太麻烦，最无奈的方案。</li>
<li>通过前端来完成给用户截图的功能。（后续被前端废弃。）</li>
<li>服务端对网页进行截图，然后用户直接下载。（推荐使用PhantomJS）<a id="more"></a>
<h4 id="使用过程和了解"><a href="#使用过程和了解" class="headerlink" title="使用过程和了解"></a>使用过程和了解</h4><a href="http://phantomjs.org/" target="_blank" rel="noopener">phantomjs官网</a><br>下载包分为源码代码包和二进制代码包。<blockquote>
<p>（因为之前不明白centos RPM 包含源码代码包和二进制代码包，碰到了一些麻烦。）</p>
</blockquote>
</li>
</ol>
<p>phantmjs分平台的软件是二进制包，下载就可以使用。<br>但是值得注意的是mac和linux的平台上，有个细节linux需要依赖fonts。<br>一开始我们没有注意这个问题，才有今天的文章。在mac上截图很正常，但是centos服务器截图就是没有文字。</p>
<blockquote>
<p><strong>分析:</strong><br>当时出现在服务器没有显示文字，不明白。</p>
</blockquote>
<ol>
<li>开始怀疑是字体颜色的问题，修改后发现没有效果。</li>
<li>再次认为是JS的原因，通过对请求生成的html进行输出和截图，发现有可能不是html的问题。</li>
<li>最后查阅相关资料，浏览器查找结果有些展示说是字体的问题（因为与字体有关，操作麻烦，直接放弃。想找简单的方法处理），最后没有办法才尝试，字体相关操作。</li>
</ol>
<p><a href="https://bingozb.github.io/51.html" target="_blank" rel="noopener">phantomjs实现服务端屏幕截图</a><br>这篇博客对linux服务端phantomJS截图的做了很深刻的讲解。但是字体使用是微软雅黑。按照这篇博客讲解操作，我们服务器这边截图的字体样式有点难看，太纤细了。</p>
<p>因此将字体变得好看成为重中之重。    </p>
<ol>
<li>查询当前MAC浏览器的字体是什么类型？？ (WhatFont)查询字体 结果：PingFang SC                    </li>
<li>前端指定字体样式:font-family {} 没有效果         </li>
<li>前端@font-face 下载字体 考虑网速的问题，需要压缩字体。没有执行</li>
<li>服务端寻找字体，放到服务器使用。 {最终解决方案} 首选字体PingFang SC</li>
</ol>
<p><a href="http://jser.me/2016/05/31/phantomjs%E5%9C%A8linux%E4%B8%8B%E6%88%AA%E5%9B%BE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98.html" target="_blank" rel="noopener">phantomjs在linux下截图中文字体问题</a><br>给我们很好的思路，尝试拷贝字体。</p>
<ol>
<li>直接mac 命令行拷贝 没有权限失败。</li>
<li>通过mac 命令行 (open /) 打开系统文件，进行/System/Library/Fonts的PingFang.ttc 拖拽拷贝成功。</li>
<li>将PingFang.ttc 放置到linux指定位置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> mkdir /usr/share/fonts/custom</span><br><span class="line">cp *.ttf  /usr/share/fonts/custom</span><br><span class="line">fc-cache -fv</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>经过后续实操经验证明，其实Linux是能够接受ttc格式字体，而且经过压缩后ttf格式字体，存在大量字体丢失情况。<br><del>需要将PingFang.ttc的格式转换为linux可用ttf格式。上面博客推荐的转换地址发现，超过了上传文件最大限度。</del><br><del>1. <a href="https://www.files-conversion.com/font-converter.php" target="_blank" rel="noopener">Convert Font Files</a> 这个网址转换成功。</del></p>
<p>但是新的问题：浏览器上使用的是PingFang SC字体。linux服务器使用的PingFang字体，导致看到和截图字体样式不一致。</p>
<p>linux 建立字体索引 更新缓存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkfontscale</span><br><span class="line">mkfontdir</span><br><span class="line">fc-cache</span><br></pre></td></tr></table></figure>

<h4 id="附赠代码"><a href="#附赠代码" class="headerlink" title="附赠代码"></a>附赠代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; renderImage.js phantomJS 的执行js代码</span><br><span class="line"></span><br><span class="line">&quot;use strict&quot;;</span><br><span class="line">var page = require(&apos;webpage&apos;).create();</span><br><span class="line">var system = require(&apos;system&apos;), pageWidth, pageHeight, pageUrl, format, quality, imagePath;</span><br><span class="line">if (system.args.length != 7) &#123;</span><br><span class="line">    console.log(&apos;Usage: renderImage.js &lt;pageWidth pageHeight pageUrl format quality imagePath&gt;&apos;);</span><br><span class="line">    phantom.exit(1);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">        pageWidth = system.args[1]</span><br><span class="line">        pageHeight = system.args[2];</span><br><span class="line">        pageUrl = system.args[3];</span><br><span class="line">        format = system.args[4];</span><br><span class="line">        quality = system.args[5];</span><br><span class="line">        imagePath = system.args[6];</span><br><span class="line">&#125;</span><br><span class="line">page.viewportSize = &#123; width: pageWidth, height: pageHeight &#125;;</span><br><span class="line">page.open(pageUrl, function start(status) &#123;</span><br><span class="line">  page.render(imagePath, &#123;format: format, quality: quality&#125;);</span><br><span class="line">  phantom.exit();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; java 执行phantomJS的代码</span><br><span class="line">  /**</span><br><span class="line">    * 将网页渲染成图片</span><br><span class="line">    * format 图片格式 quality 图片质量（0~100）</span><br><span class="line">    * pageWidth 网页宽度 pageHeight 网页高度</span><br><span class="line">    */</span><br><span class="line">   public static void renderImage(String phantomJSPath, String renderImageJSPath, int pageWidth, int pageHeight, String renderUrl, String format, int quality, String outPutImagePath) &#123;</span><br><span class="line">       // 执行命令参数</span><br><span class="line">       List&lt;String&gt; params = Arrays.asList(phantomJSPath, renderImageJSPath, pageWidth + &quot;&quot;, pageHeight + &quot;&quot;, renderUrl, format, quality + &quot;&quot;, outPutImagePath);</span><br><span class="line"></span><br><span class="line">       ProcessBuilder processBuilder = new ProcessBuilder()</span><br><span class="line">               .command(params);</span><br><span class="line">       try &#123;</span><br><span class="line">           processBuilder.redirectError();</span><br><span class="line">           Process process = processBuilder.start();</span><br><span class="line">           InputStream processIS = process.getInputStream();</span><br><span class="line">           String output = IOUtils.toString(processIS);</span><br><span class="line">           logger.info(&quot;渲染成图片: &#123;&#125; -&gt; &#123;&#125;&quot;, processBuilder.command(), output);</span><br><span class="line">           IOUtils.closeQuietly(processIS);</span><br><span class="line">           int result = process.waitFor();</span><br><span class="line">           if (result != 0) &#123;</span><br><span class="line">               logger.warn(&quot;执行失败: &#123;&#125; -&gt; &#123;&#125;&quot;, processBuilder.command(), output);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; catch (InterruptedException | IOException e) &#123;</span><br><span class="line">           logger.warn(&quot;执行失败: &#123;&#125; -&gt; &#123;&#125;&quot;, processBuilder.command(), e);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>参考资料：<br><a href="https://bingozb.github.io/51.html" target="_blank" rel="noopener">phantomjs实现服务端屏幕截图</a><br><a href="http://jser.me/2016/05/31/phantomjs%E5%9C%A8linux%E4%B8%8B%E6%88%AA%E5%9B%BE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98.html" target="_blank" rel="noopener">phantomjs在linux下截图中文字体问题</a><br><a href="http://phantomjs.org/download.html" target="_blank" rel="noopener">phantmjs下载地址</a><br><a href="https://www.jianshu.com/p/e599ae0c7680" target="_blank" rel="noopener">PingFang sc字体的使用</a><br><a href="http://phantomjs.org/api/webpage/method/open.html" target="_blank" rel="noopener">phantomJS API</a>       </p>
]]></content>
      <tags>
        <tag>phantomjs</tag>
      </tags>
  </entry>
  <entry>
    <title>influxdb+grafana+telegraf服务器统计</title>
    <url>/2020/08/06/influxdb-grafana-telegraf%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h2 id="influxdb-grafana-telegraf服务器统计"><a href="#influxdb-grafana-telegraf服务器统计" class="headerlink" title="influxdb+grafana+telegraf服务器统计"></a>influxdb+grafana+telegraf服务器统计</h2><h3 id="influxdb"><a href="#influxdb" class="headerlink" title="influxdb"></a>influxdb</h3><blockquote>
<p>类似mysql数据库,时序图的数据库<br> <a href="https://docs.influxdata.com/influxdb/v1.8/introduction/install/" target="_blank" rel="noopener">开源Influxdb安装指引</a></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">应用</th>
<th align="center">配置文件</th>
<th align="center">数据文件</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">influx</td>
<td align="center">/etc/influxdb/influxdb.conf<br>设置meta、data、wal数据存放地址</td>
<td align="center">/var/lib/influxdb/…</td>
<td align="center">influxd config: 输出influxdb的配置文件</td>
</tr>
</tbody></table>
<p>备注：</p>
<ul>
<li>当前启动influxdb失败，可能存在meta、data、wal数据存放地址用户组没有访问权限导致的。<code>chown -R influxdb:influxdb [meta、data、wal数据存放地址]</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 第一步 设置influxdb的仓库源</span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/influxdb.repo</span><br><span class="line">[influxdb]</span><br><span class="line">name = InfluxDB Repository - RHEL \$releasever</span><br><span class="line">baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 1</span><br><span class="line">gpgkey = https://repos.influxdata.com/influxdb.key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 第二步 启动influxdb和设置开机自启动服务</span><br><span class="line">sudo yum install influxdb</span><br><span class="line">sudo service influxdb start</span><br><span class="line">sudo chkconfig influxdb on</span><br><span class="line"></span><br><span class="line">//////////</span><br><span class="line">sudo yum install influxdb</span><br><span class="line">sudo systemctl start influxdb</span><br><span class="line">sudo systemctl enable influxdb</span><br></pre></td></tr></table></figure>

<a id="more"></a>
<p><strong>influxdb连接与操作</strong></p>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">操作</th>
</tr>
</thead>
<tbody><tr>
<td align="center">influx</td>
<td align="center">连接influxdb的server</td>
</tr>
<tr>
<td align="center">influx -precision rfc3339</td>
<td align="center">以rfc3339协议格式连接influxdb的server</td>
</tr>
<tr>
<td align="center">show databases</td>
<td align="center">显示所有数据库</td>
</tr>
<tr>
<td align="center">use [xxx]</td>
<td align="center">进入[xxx]数据库</td>
</tr>
<tr>
<td align="center">show measurements</td>
<td align="center">显示[xxx]数据库中的表</td>
</tr>
<tr>
<td align="center">其他命令跟mysql命令差不多</td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>http访问influxdb</strong><br>默认端口 8086<br>eg: 192.168.100.100:8086</p>
<h3 id="grafana"><a href="#grafana" class="headerlink" title="grafana"></a>grafana</h3><blockquote>
<p>展示influxdb时序数据的Web应用<br><a href="https://grafana.com/docs/grafana/latest/installation/rpm/" target="_blank" rel="noopener">grafana centos 安装</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 第一步 设置grafana的仓库源</span><br><span class="line">vi /ect/yum.repos.d/grafana.repo</span><br><span class="line"></span><br><span class="line">[grafana]</span><br><span class="line">name=grafana</span><br><span class="line">baseurl=https://packages.grafana.com/oss/rpm</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.grafana.com/gpg.key</span><br><span class="line">sslverify=1</span><br><span class="line">sslcacert=/etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line"></span><br><span class="line"># 第二步 启动grafana和设置开机自启动服务</span><br><span class="line">sudo yum install grafana</span><br><span class="line">sudo service grafana-server start</span><br><span class="line">sudo chkconfig --add grafana-server</span><br></pre></td></tr></table></figure>

<h4 id="配置grafana访问和数据源"><a href="#配置grafana访问和数据源" class="headerlink" title="配置grafana访问和数据源"></a>配置grafana访问和数据源</h4><blockquote>
<p><a href="https://grafana.com/docs/grafana/latest/administration/configuration/" target="_blank" rel="noopener">grafana config配置</a><br><a href="https://grafana.com/docs/grafana/latest/features/datasources/add-a-data-source/" target="_blank" rel="noopener">grafana Web配置数据源</a></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">应用</th>
<th align="center">配置文件</th>
<th align="center">数据文件</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">grafana</td>
<td align="center">/etc/grafana/grafana.ini</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>修改访问grafana网页端口</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># The HTTP port  to use</span><br><span class="line">;http_port = 3000</span><br></pre></td></tr></table></figure>

<p>默认管理员: admin  admin<br>eg:<br>访问地址: 192.168.100.100:3000</p>
<p><img src="/images/grafanaWeb%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE.png" alt="grafanaWeb数据源配置"></p>
<h3 id="telegraf"><a href="#telegraf" class="headerlink" title="telegraf"></a>telegraf</h3><blockquote>
<p>服务器性能数据cpu等性能统计<br><a href="https://docs.influxdata.com/telegraf/v1.12/introduction/installation/" target="_blank" rel="noopener">telegraf 安装</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 第一步 设置telegraf的仓库源</span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/influxdb.repo</span><br><span class="line">  [influxdb]</span><br><span class="line">  name = InfluxDB Repository - RHEL \$releasever</span><br><span class="line">  baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable</span><br><span class="line">  enabled = 1</span><br><span class="line">  gpgcheck = 1</span><br><span class="line">  gpgkey = https://repos.influxdata.com/influxdb.key</span><br><span class="line">  EOF</span><br><span class="line"></span><br><span class="line"># 第二步 启动telegraf和设置开机自启动服务</span><br><span class="line">sudo yum install telegraf</span><br><span class="line">sudo service telegraf start</span><br><span class="line">sudo chkconfig telegraf on</span><br><span class="line"></span><br><span class="line">//////////</span><br><span class="line">sudo yum install telegraf</span><br><span class="line">sudo systemctl start telegraf</span><br><span class="line">sudo systemctl enable telegraf</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">应用</th>
<th align="center">配置文件</th>
<th align="center">数据文件</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">telegraf</td>
<td align="center">/etc/telegraf/telegraf.conf</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>修改config</strong></p>
<blockquote>
<p>设置指定influxdb数据源、数据库名称、当前服务器hostname</p>
</blockquote>
<p>urls = [“<a href="http://192.168.100.100:8086&quot;]" target="_blank" rel="noopener">http://192.168.100.100:8086&quot;]</a><br>database = “telegraf”<br>hostname = “172.18.0.x”  # (可以用开机脚本修改)</p>
<p><strong>配置开机时自动修改hostname</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi /etc/rc.local</span><br><span class="line"></span><br><span class="line"># centos6:</span><br><span class="line">IP=$(/sbin/ifconfig | /bin/awk &apos;/inet addr/&#123;print substr($2,6)&#125;&apos;|grep 172.16) &amp;&amp; /bin/sed -i -E &quot;s/hostname\s*=\s*\&quot;.*?\&quot;/hostname=\&quot;$IP\&quot;/&quot; /etc/telegraf/telegraf.conf</span><br><span class="line"></span><br><span class="line"># centos7:</span><br><span class="line">IP=$(/sbin/ifconfig | /bin/awk &apos;/inet /&#123;print substr($2,1)&#125;&apos;|grep 172.16) &amp;&amp; /bin/sed -i -E &quot;s/hostname\s*=\s*\&quot;.*?\&quot;/hostname=\&quot;$IP\&quot;/&quot; /etc/telegraf/telegraf.conf</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>后端</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>raspberry-system-install</title>
    <url>/2020/05/24/raspberry-system-install/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="树莓派4B系统"><a href="#树莓派4B系统" class="headerlink" title="树莓派4B系统"></a>树莓派4B系统</h4><blockquote>
<p><a href="https://www.raspberrypi.org/products/raspberry-pi-4-model-b/" target="_blank" rel="noopener">官网树莓派4B系统介绍</a><br>在安装其他Linux系统时需要注意下，树莓派CPU架构ARM，64位</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@raspberrypi:/etc/systemd/network# hostnamectl status</span><br><span class="line">   Static hostname: raspberrypi</span><br><span class="line">         Icon name: computer</span><br><span class="line">        Machine ID: 9321879165344d29ba552214ae2aca07</span><br><span class="line">           Boot ID: 67c2e9c17ee74d049301e40c99c70b58</span><br><span class="line">  Operating System: Raspbian GNU/Linux 10 (buster)</span><br><span class="line">            Kernel: Linux 4.19.97-v7l+</span><br><span class="line">      Architecture: arm</span><br></pre></td></tr></table></figure>

<p><img src="/images/pi4-labelled@2x.webp" alt="树莓派集成板"></p>
<h5 id="最基础硬件配置"><a href="#最基础硬件配置" class="headerlink" title="最基础硬件配置"></a>最基础硬件配置</h5><p><strong>必选配置</strong></p>
<ol>
<li>读卡器</li>
</ol>
<ul>
<li>和SD存储卡配合使用。应用于其他电脑将树莓派系统烧录到SD存储卡上</li>
</ul>
<ol start="2">
<li>8G以上microSD(T-Flash)存储卡</li>
</ol>
<ul>
<li>存储树莓派系统</li>
<li>存储文件使用</li>
</ul>
<ol start="3">
<li>树莓派4B集成板</li>
<li>5V-3A的Type-C的充电器</li>
</ol>
<hr>
<p><strong>可选配置</strong><br>5. 树莓派集成板散热贴片<br>6. 树莓派塑料外壳或者金属外壳<br>7. 小型散热风扇<br>8. micro-hdmi连接线</p>
<ul>
<li>用于输出页面到显示器上</li>
</ul>
<ol start="9">
<li>等等</li>
</ol>
<a id="more"></a>
<h5 id="下载、烧录树莓派系统"><a href="#下载、烧录树莓派系统" class="headerlink" title="下载、烧录树莓派系统"></a>下载、烧录树莓派系统</h5><blockquote>
<p>Raspbian系统是用Debian专门为ARM卡片式计算机树莓派定制的版本。</p>
</blockquote>
<p><a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">官网系统下载地址</a></p>
<ul>
<li>树莓派桌面版和预装软件系统（Raspbian Buster with desktop and recommended software）</li>
<li>树莓派桌面版(不含预装软件)系统 （Raspbian Buster with desktop）</li>
<li>树莓派(不含桌面、不含预装软件)精简版 （Raspbian Buster Lite）</li>
</ul>
<p><a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">推荐烧录SD软件Etcher</a><br>不合适使用Etcher，也可以使用树莓派自带烧录<a href="https://www.raspberrypi.org/downloads/noobs/" target="_blank" rel="noopener">NOOBS</a></p>
<ol>
<li>下载Raspbian树莓派系统</li>
</ol>
<ul>
<li>一般下载的是压缩包（如:zip）,需要进行解压，获取.img的镜像</li>
</ul>
<ol start="2">
<li>将SD卡数据先清空，适当可以直接进行格式化</li>
<li>使用Etcher或者NOOBS或者SDFormater进行烧录</li>
<li>烧录完成，再次查看SD卡会发现boot命名存储卡</li>
</ol>
<ul>
<li>diskutil list</li>
</ul>
<h5 id="启动、访问树莓派系统方案"><a href="#启动、访问树莓派系统方案" class="headerlink" title="启动、访问树莓派系统方案"></a>启动、访问树莓派系统方案</h5><blockquote>
<p><a href="https://www.raspberrypi.org/documentation/remote-access/" target="_blank" rel="noopener">官网连接树莓派4B系统方案</a><br>树莓派raspbian:<br><code>系统用户名为:pi   密码:raspberry</code><br><code>root用户权限密码: raspberry</code></p>
</blockquote>
<ul>
<li>使用HDMI(<strong>High-Definition Multimedia Interface</strong>)显示器、鼠标、键盘进行访问系统</li>
<li>通过SSH(<strong>Secure SHell</strong>))访问树莓派</li>
<li>通过VNC(<strong>Virtual Network Computing</strong>)服务远程登录树莓派<a href="https://www.realvnc.com/en/connect/download/viewer/raspberrypi/" target="_blank" rel="noopener">VNC 客户端下载</a>。树莓派系统命令输入<code>vncserver -geometry 1422x800</code>启动vnc服务。<strong>注意设置好界面展示大小才能正常显示，不然为报·vnc cannot currently show the desktop·错误</strong></li>
</ul>
<p>桌面访问可以在命令行输入:<code>sudo raspi-cofig</code>进入树莓派系统配置界面。选择<code>5 Interfacing Options</code>进行配置默认启动应用程序SSH、VNC等</p>
<h6 id="SSH-访问接入网线rapibian系统"><a href="#SSH-访问接入网线rapibian系统" class="headerlink" title="SSH 访问接入网线rapibian系统"></a>SSH 访问接入网线rapibian系统</h6><ol>
<li>进入SD卡名称为<code>boot</code>文件夹</li>
</ol>
<ul>
<li>mac上: cd /Volumes/boot/</li>
</ul>
<ol start="2">
<li><code>touch ssh</code>  生成一个ssh命名的文件</li>
<li>使用网线连接树莓派，查找树莓派的IP地址</li>
</ol>
<ul>
<li><p>命令输入: <code>ping raspberrypi.local</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart Downloads % ping raspberrypi.local</span><br><span class="line">PING raspberrypi.local (192.168.1.6): 56 data bytes</span><br><span class="line">64 bytes from 192.168.1.6: icmp_seq=0 ttl=64 time=1.618 ms</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用<a href="https://angryip.org/" target="_blank" rel="noopener">IP Scanner</a>软件进行扫描，找到对应树莓派IP地址</p>
</li>
</ul>
<ol start="4">
<li>ssh <a href="mailto:pi@xxx.xxx.xxx.xx" target="_blank" rel="noopener">pi@xxx.xxx.xxx.xx</a></li>
</ol>
<h6 id="SSH-访问接入WIFI的rapibian系统"><a href="#SSH-访问接入WIFI的rapibian系统" class="headerlink" title="SSH 访问接入WIFI的rapibian系统"></a>SSH 访问接入WIFI的rapibian系统</h6><ol>
<li>进入SD卡名称为<code>boot</code>文件夹</li>
</ol>
<ul>
<li>mac上: cd /Volumes/boot/</li>
</ul>
<ol start="2">
<li><p><code>touch ssh</code>  生成一个ssh命名的文件</p>
</li>
<li><p>新建wpa_supplicant.conf 文件，写入无限相关配置<br>如果无限网没有密码或者采用WEP加密方式的话，key_mgmt应设为NONE,密码字段由psk改成wep_key0即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">  ssid=&quot;wifi 名称&quot;</span><br><span class="line">  psk=&quot;wifi 密码&quot;</span><br><span class="line">  key_mgmt=WPA-PSK</span><br><span class="line">&#125;</span><br><span class="line">Network=&#123;</span><br><span class="line">  ssid=&quot;wifi 名称&quot;</span><br><span class="line">  psk=&quot;wifi 密码&quot;</span><br><span class="line">  key_mgmt=NONE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>树莓派自动连接WIFI，查找树莓派的IP地址</p>
</li>
</ol>
<ul>
<li>命令输入: <code>ping raspberrypi.local</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart Downloads % ping raspberrypi.local</span><br><span class="line">PING raspberrypi.local (192.168.1.6): 56 data bytes</span><br><span class="line">64 bytes from 192.168.1.6: icmp_seq=0 ttl=64 time=1.618 ms</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="5">
<li>ssh <a href="mailto:pi@xxx.xxx.xxx.xx" target="_blank" rel="noopener">pi@xxx.xxx.xxx.xx</a></li>
</ol>
<h5 id="修改pi账号密码和开启root账号"><a href="#修改pi账号密码和开启root账号" class="headerlink" title="修改pi账号密码和开启root账号"></a>修改pi账号密码和开启root账号</h5><p>&emsp;&emsp;修改pi账号的密码可以在之前的rasp-config中修改，也可以在pi用户登录之后在命令行终端输入password pi即可。<br>&emsp;&emsp;当需要root权限时，由默认账户经由sudo执行，Rassberry pi系统中的Raspbian默认用户是pi，密码为raspberry重新开启账号，可由pi用户登录后，在命令行下执行<br><code>sudo passwd root</code><br>&emsp;&emsp;执行此命令系统会提示输入两遍的root密码，输入你想设的密码即可，然后执行<br><code>sudo passwd --unlock root</code><br>这样root用户解锁成功。</p>
<h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul>
<li><p>查看树莓CPU温度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 方法一</span><br><span class="line">pi@RaspberryPi:~ $ /opt/vc/bin/vcgencmd measure_temp</span><br><span class="line">temp=51.5&apos;C</span><br><span class="line"># 方法二</span><br><span class="line">pi@RaspberryPi:~ $ cat /sys/class/thermal/thermal_zone0/temp</span><br><span class="line">50464  #输出值除以1000，单位是℃。</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看CPU详情</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看CPU硬件架构</p>
<blockquote>
<p>在Linux中使用命令arch可以初步查看出当前系统所识别出来的机器CPU类型，如”i386”, “i486”,”i586”, “alpha”, “sparc”, “arm”, “m68k”,”mips”,”ppc”,”ia64”,”x86_64”等；ia64和x86_64就说明这台机器是64位的；</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@db ~]# arch</span><br><span class="line">i686</span><br><span class="line">[root@svr-db-test ~]# uname -m</span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读:"></a>推荐阅读:</h4><p><a href="https://zhuanlan.zhihu.com/p/59027897" target="_blank" rel="noopener">如何给树莓派安装操作系统</a></p>
]]></content>
      <tags>
        <tag>树莓派4B</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义程序朗读单词文本</title>
    <url>/2018/10/06/speackEnglishWord/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="自定义程序朗读单词文本意思"><a href="#自定义程序朗读单词文本意思" class="headerlink" title="自定义程序朗读单词文本意思"></a>自定义程序朗读单词文本意思</h4><p>其核心内容是围绕Mac Terminal终端say命令展开的
让学习英语就像听歌一样简单</p>

<h4 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h4><h5 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h5><ul>
<li>简单使用say去读一小段的文本 say Hello World;</li>
<li>学习使用say去读文件 say -f …/…/hello_world.txt|.csv</li>
<li>详细使用可以输入命令 man say</li>
</ul>
<h5 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h5><ul>
<li>寻找合适单词翻译网站 通过复制粘贴的形式到文件中</li>
<li>目前我使用的是<a href="https://www.shanbay.com/" target="_blank" rel="noopener">扇贝网站</a>的单词学习<a id="more"></a>
<h5 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h5></li>
<li>编写自己的程序</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/perl</span><br><span class="line">use strict;</span><br><span class="line">use warnings;</span><br><span class="line"></span><br><span class="line">use Time::HiRes qw(usleep nanosleep);</span><br><span class="line"></span><br><span class="line"># 获取文件参数</span><br><span class="line">my $file = $ARGV[0] or die &quot;Need to get CSV file on the command line\n&quot;;</span><br><span class="line"># 打开文件</span><br><span class="line">open(my $data, &apos;&lt;&apos;, $file) or die &quot;Could not open &apos;$file&apos; $!\n&quot;;</span><br><span class="line"># 一行一行的读文件</span><br><span class="line">while (my $line = &lt;$data&gt;) &#123;</span><br><span class="line">  usleep(500);</span><br><span class="line">  # 去除回车键</span><br><span class="line">  chomp $line;</span><br><span class="line">  # 一行文本按照空格符的进行分割成组</span><br><span class="line">  my @strWord = split(/[\s+]/, $line);</span><br><span class="line">  foreach(@strWord)&#123;</span><br><span class="line">     if($_  !~ /\./)&#123;</span><br><span class="line">     `say &quot;$_&quot;`;</span><br><span class="line">      if($_ =~ /\w+/)&#123;</span><br><span class="line">          my $size = length($_);</span><br><span class="line">         my $strIndex = 0;</span><br><span class="line">         my $strEnd = $strIndex + 1;</span><br><span class="line">          while($strIndex &lt; $size)&#123;</span><br><span class="line">          my $subWord = substr($_, $strIndex, 1);</span><br><span class="line">          `say &quot;$subWord&quot;`;</span><br><span class="line">         $strIndex = $strIndex + 1;</span><br><span class="line">         &#125;</span><br><span class="line">       usleep(500);</span><br><span class="line">      # say 单词和单词的释义</span><br><span class="line">       `say &quot;$_&quot;`;</span><br><span class="line">      &#125;</span><br><span class="line">      print &quot;$_  &quot;;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  print &quot;\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>通过perl命令执行程序 eg: perl readCSV.pl /Users/useheart/学习资料/英语单词学习.csv</li>
</ul>
]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派安装Centos7</title>
    <url>/2020/05/24/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Centos7/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="树莓派安装Centos7"><a href="#树莓派安装Centos7" class="headerlink" title="树莓派安装Centos7"></a>树莓派安装Centos7</h4><h5 id="树莓派Centos选择下载"><a href="#树莓派Centos选择下载" class="headerlink" title="树莓派Centos选择下载"></a>树莓派Centos选择下载</h5><blockquote>
<p>简单描述下Centos分为release发版和stream不稳定发版。release迭代较慢，安全。stream迭代较慢，不稳定。</p>
</blockquote>
<p><strong>Centos7 下载</strong>   </p>
<ul>
<li><a href="http://isoredirect.centos.org/altarch/7/isos/armhfp/" target="_blank" rel="noopener">Arm架构Centos下载</a>  </li>
</ul>
<p>目前笔者购买是关于树莓派4B-4G,选择安装包为University <a href="https://mirrors.bfsu.edu.cn/centos-altarch/7.8.2003/isos/armhfp/CentOS-Userland-7-armv7hl-RaspberryPI-Minimal-2003-sda.raw.xz" target="_blank" rel="noopener">CentOS-Userland-7-armv7hl-RaspberryPI-Minimal-4-2003-sda .raw.xz</a>。<br>然后下载Centos包使用对应工具[Balena Etcher]烧录到SD卡上。</p>
<p><strong>树莓派Centos连接</strong></p>
<ul>
<li>先将树莓派连接网线，并启动</li>
<li>连接的电脑也需要连接WIFI网络上（让电脑和树莓派保持在同一个局域网内）</li>
<li>使用<a href="https://angryip.org/" target="_blank" rel="noopener">IP Scanner</a>软件进行扫描 ,找到新增ip<br><img src="images/%E6%A0%91%E8%8E%93%E6%B4%BEIPScanner.png" alt="树莓派IPScanner"></li>
<li>ssh <a href="mailto:root@xxx.xxx.xxx.xxx" target="_blank" rel="noopener">root@xxx.xxx.xxx.xxx</a>  默认密码centos</li>
</ul>
<p><strong>Centos7 拓展主分区</strong></p>
<blockquote>
<p>由于系统默认的映像把根分区的空间设定得很小，因此我们需要手动扩展根分区。 详情参考<a href="https://zhuanlan.zhihu.com/p/33030757" target="_blank" rel="noopener">为树莓派装上 CentOS 7 系统</a></p>
</blockquote>
<p>首次连接树莓派，会发现主分区没有可用的空间。<br>存储卡硬盘 <code>/dev/mmcblk0</code> 分成3个分区(mmcblk0p1/mmcblk0p2/mmcblk0p3),mmcblk0p3的主分区没有被挂载上。</p>
<a id="more"></a>
<p><em>执行步骤</em></p>
<ul>
<li>执行 <code>rootfs-expand</code></li>
<li>检查硬盘分区拓展情况 <code>df -lh</code></li>
</ul>
<hr>
<p>没有效果则只能将mmcblk0重新进行分区，然后重启</p>
<blockquote>
<p>核心操作就是将第三个主分区删除，重新分区。</p>
</blockquote>
<ul>
<li>执行分区命令 <code>fdisk /dev/mmcblk0</code></li>
<li>删除第三个主分区回车 <code>d</code></li>
<li>新增第三个主分区回车 <code>n</code></li>
<li>选择新增第三个主分区回车 <code>p</code></li>
<li>开始设置分区开始扇区和结束扇区，需要注意设定的开始扇区和结尾扇区，从第二块主分区结尾扇区 + 1开始。不然默认是使用第一块主分区前面的扇区，存储空间很小。</li>
<li>将树莓派重新启动，<code>reboot</code></li>
<li>启动后，直接再次执行 <code>rootfs-expand</code>或者<code>resize2fs /dev/mmcblk0p3</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/mmcblk0p1   *        8192      593919      292864    c  W95 FAT32 (LBA)</span><br><span class="line">/dev/mmcblk0p2          593920     1593343      499712   82  Linux swap / Solaris</span><br><span class="line">/dev/mmcblk0p3         1593344    31116287    14761472   83  Linux</span><br><span class="line">### 执行前效果</span><br><span class="line">[root@localhost ~]# df -lh</span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/root       1.7G  1.7G     0  100% /</span><br><span class="line">devtmpfs        1.9G     0  1.9G    0% /dev</span><br><span class="line">tmpfs           1.9G     0  1.9G    0% /dev/shm</span><br><span class="line">tmpfs           1.9G  8.4M  1.9G    1% /run</span><br><span class="line">tmpfs           1.9G     0  1.9G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mmcblk0p1  286M   53M  233M   19% /boot</span><br><span class="line">tmpfs           383M     0  383M    0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ll /dev | grep mmcb</span><br><span class="line">brw-rw----. 1 root disk    179,   0 1月   1 00:00 mmcblk0</span><br><span class="line">brw-rw----. 1 root disk    179,   1 1月   1 00:00 mmcblk0p1</span><br><span class="line">brw-rw----. 1 root disk    179,   2 1月   1 00:00 mmcblk0p2</span><br><span class="line">brw-rw----. 1 root disk    179,   3 1月   1 00:04 mmcblk0p3</span><br><span class="line"></span><br><span class="line">### 执行后效果</span><br><span class="line">[root@localhost ~]# df -lh</span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/root        14G  1.7G   13G   13% /</span><br><span class="line">devtmpfs        1.9G     0  1.9G    0% /dev</span><br><span class="line">tmpfs           1.9G     0  1.9G    0% /dev/shm</span><br><span class="line">tmpfs           1.9G  8.4M  1.9G    1% /run</span><br><span class="line">tmpfs           1.9G     0  1.9G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mmcblk0p1  286M   53M  233M   19% /boot</span><br><span class="line">tmpfs           383M     0  383M    0% /run/user/0</span><br></pre></td></tr></table></figure>

<h5 id="主机名、网络、时区、语言、键盘配置"><a href="#主机名、网络、时区、语言、键盘配置" class="headerlink" title="主机名、网络、时区、语言、键盘配置"></a>主机名、网络、时区、语言、键盘配置</h5><hr>
<h6 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h6><p><code>hostnamectl status</code><br><code>hostnamectl set-hostname xxxx主机名名称</code></p>
<hr>
<h6 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h6><p><code>nmtui</code><br><code>nmcli  d</code><br><code>nmcli  d  wifi</code><br><code>nmcli d wifi connect xxxWiFi名称 password &#39;xxxWiFi密码&#39;</code><br><code>cat /etc/resolv.conf</code><br>网络连接文件夹： <code>cd /etc/sysconfig/network-scripts</code>  <code>cat ifcfg-网络名称</code><br>设置网络连接开机自启动 <code>systemctl enable NetworkManager.service</code></p>
<hr>
<h6 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h6><p><code>localectl</code><br><code>localectl set-locale LANG=zh_CN.UTF-8</code><br><code>locale</code><br><code>update-locale LANG=LANG=zh_CN.UTF-8 LANGUAGE</code><br><code>cat /etc/locale.conf</code></p>
<hr>
<h6 id="时区配置"><a href="#时区配置" class="headerlink" title="时区配置"></a>时区配置</h6><p><code>date -R</code>   </p>
<ul>
<li>方案一：<br><code>tzselect</code><br>按照步骤使用命令<code>tzselect</code>选择国家时区<br>执行TZ=’Asia/Shanghai’; export TZ 并将这行命令添加到.bash_profile中，然后退出并重新登录。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You can make this change permanent for yourself by appending the line</span><br><span class="line"></span><br><span class="line">to the file &apos;.profile&apos; in your home directory; then log out and log in again.</span><br><span class="line"></span><br><span class="line">Here is that TZ value again, this time on standard output so that you</span><br><span class="line">can use the /usr/bin/tzselect command in shell scripts:</span><br><span class="line">Asia/Shanghai</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line">* 方案二：    </span><br><span class="line">`timedatectl`   </span><br><span class="line">直接设置中国-上海时区 `timedatectl set-timezone Asia/Shanghai`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------</span><br><span class="line">###### 键盘配置   </span><br><span class="line">`localectl set-keymap us`</span><br><span class="line"></span><br><span class="line">##### 高级配置</span><br><span class="line">###### 切换软件源</span><br><span class="line">&gt; [详情切花软件源网址](https://www.jianshu.com/p/541c737bc947)</span><br><span class="line"></span><br><span class="line">* 将软件源替换为阿里源   </span><br><span class="line">* 先进入源的目录   </span><br><span class="line">`cd /etc/yum.repos.d`</span><br><span class="line">* 备份一下官方源   </span><br><span class="line">`mv CentOS-Base.repo CentOS-Base.repo.bak`</span><br><span class="line">* 将阿里源文件下载下来  </span><br><span class="line">`wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo`</span><br><span class="line">* 重建源数据缓存  </span><br><span class="line">`yum clean all`</span><br><span class="line">`yum makecache`</span><br><span class="line"></span><br><span class="line">###### 设置域名解析地址</span><br><span class="line">&gt; [国内常用公共DNS服务器地址有哪些？](https://zhuanlan.zhihu.com/p/39406412)</span><br></pre></td></tr></table></figure>

<p>[root@localhost ~]# cat /etc/resolv.conf</p>
<h1 id="Generated-by-NetworkManager"><a href="#Generated-by-NetworkManager" class="headerlink" title="Generated by NetworkManager"></a>Generated by NetworkManager</h1><p>nameserver 114.114.114.114<br>nameserver 8.8.8.8</p>
<pre><code>

###### 更改语言包

##### 其他
私有内网的linux获取出口公网地址命令  

`curl ifconfig.me`    
`curl ipinfo.io`

#### 挂载移动硬盘
* 只需要在修改/etc/fstab文件后执行该命令`mount -a` ，即可在不重启的情况下挂载fstab！
* `blkid` 打印块设备属性
* `lsblk` 块设备列表
* `mkfs`  格式化硬盘分区 ext4主流centos7文件系统
* `/etc/fstab` 设置`default,nofail`可以让硬盘不存在启动

[/etc/fstab](http://einverne.github.io/post/2019/02/fstab-file.html)


##### 学习
[SSH 安全加固](https://zzz.buzz/zh/2016/04/18/hardening-sshd/)   
[centos 时区设置](https://www.jianshu.com/p/adefed4862a2)   
[centos 时钟同步](https://cloud.tencent.com/developer/article/1444268)    
[Linux系统扩展硬盘空间](https://www.jianshu.com/p/ba7090b1ef38)
[Linux Kickstart 自动安装讲述anaconda-ks.cfg文件](http://liaoph.com/linux-kickstart/)
[神技能 | 手把手教您把CentOS7服务器变成上网路由器](https://cloud.tencent.com/developer/article/1115169)

#### 参考资料
[树莓派4B 安装CentOS](https://www.cnblogs.com/Evan-fanfan/p/11520170.html)   
[树莓派安装centos系统，并连接WiFi](https://blog.csdn.net/liuzhe465/article/details/76691345)     
[为树莓派装上 CentOS 7 系统](https://zhuanlan.zhihu.com/p/33030757)   
[SpecialInterestGroupAltArcharmhfp](https://wiki.centos.org/SpecialInterestGroup/AltArch/armhfp)     </code></pre>]]></content>
      <tags>
        <tag>树莓派4B</tag>
      </tags>
  </entry>
  <entry>
    <title>Java命令系列-javac</title>
    <url>/2020/05/16/Java%E5%91%BD%E4%BB%A4%E7%B3%BB%E5%88%97-javac/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="javac-命令详解"><a href="#javac-命令详解" class="headerlink" title="javac 命令详解"></a>javac 命令详解</h4><blockquote>
<p>javac (java compiler)(java源码编译器)，将源码代码(.java)编译成字节码文件(.class)。</p>
</blockquote>
<p><em>备注:</em><br><code>在MyClass中的MyInerClass内部类,编译后生成MyClass$MyInnerClass.class</code></p>
<h4 id="javac-命令使用"><a href="#javac-命令使用" class="headerlink" title="javac 命令使用"></a>javac 命令使用</h4><p>javac [<code>命令参数</code>] [<code>单个源码文件</code>] [<code>多个源码文件(空格分隔,eg: MyClassA.java  MyClassB.java</code>)] [<code>多个源码文件路径组成的文件(eg: @recordSourceFile</code>)]</p>
<p>javac命令执行会自动识别当前路径。</p>
<h5 id="使用javac样例"><a href="#使用javac样例" class="headerlink" title="使用javac样例"></a>使用javac样例</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 编译一个类</span><br><span class="line">useheart@useheart JavaCompiler % javac src/main/java/multi/TestMainOne.java</span><br><span class="line">// 编译多个类</span><br><span class="line">useheart@useheart JavaCompiler % javac src/main/java/multi/TestMainOne.java src/main/java/multi/TestMainTwo.java src/main/java/multi/TestMainThree.java</span><br><span class="line">// 显示编译后class,自动放入在被编译文件路径下</span><br><span class="line">useheart@useheart JavaCompiler % cd src/main/java/multi</span><br><span class="line">useheart@useheart multi % ll</span><br><span class="line">total 48</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 18:18 TestMainOne.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  203  5 17 18:02 TestMainOne.java</span><br><span class="line">-rw-r--r--  1 useheart  staff  436  5 17 18:18 TestMainThree.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  207  5 17 18:02 TestMainThree.java</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 18:18 TestMainTwo.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  203  5 17 18:02 TestMainTwo.java</span><br><span class="line">useheart@useheart multi %</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 显示Java路径文件</span><br><span class="line">useheart@useheart compile % cat javaPaths</span><br><span class="line">../src/main/java/multi/TestMainOne.java</span><br><span class="line">../src/main/java/multi/TestMainTwo.java</span><br><span class="line">../src/main/java/multi/TestMainThree.java</span><br><span class="line">// 编译文件里面的java类</span><br><span class="line">useheart@useheart compile % javac @javaPaths</span><br><span class="line">// 显示编译后的class文件</span><br><span class="line">useheart@useheart compile % cd ../src/main/java/multi</span><br><span class="line">useheart@useheart multi % ll</span><br><span class="line">total 48</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 18:29 TestMainOne.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  203  5 17 18:02 TestMainOne.java</span><br><span class="line">-rw-r--r--  1 useheart  staff  436  5 17 18:29 TestMainThree.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  207  5 17 18:02 TestMainThree.java</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 18:29 TestMainTwo.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  203  5 17 18:02 TestMainTwo.java</span><br></pre></td></tr></table></figure>

<h5 id="javac-常用的命令参数"><a href="#javac-常用的命令参数" class="headerlink" title="javac 常用的命令参数"></a>javac 常用的命令参数</h5><p>使用案例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 参数 -d</span><br><span class="line">useheart@useheart JavaCompiler % javac -d compile/classes  src/main/java/multi/*.java</span><br><span class="line"></span><br><span class="line">useheart@useheart JavaCompiler % ll compile/classes/multi</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 19:02 TestMainOne.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  436  5 17 19:02 TestMainThree.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  430  5 17 19:02 TestMainTwo.class</span><br></pre></td></tr></table></figure>

<h6 id="sourcepath-和-classpath-的使用"><a href="#sourcepath-和-classpath-的使用" class="headerlink" title="sourcepath 和 classpath 的使用"></a>sourcepath 和 classpath 的使用</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//JarCompileBootstrap编译时需要使用其他文件Java类文件compile.ExternalUseClass和第三方class文件jar(commons-lang3-3.9.jar)</span><br><span class="line">useheart@useheart JarCompiler % javac -sourcepath ./src/main/java  -classpath /Users/useheart/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar  src/main/java/JarCompileBootstrap.java</span><br><span class="line"></span><br><span class="line">useheart@useheart JarCompiler % ll src/main/java</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r--  1 useheart  staff  677  5 17 19:25 JarCompileBootstrap.class</span><br><span class="line">-rw-r--r--  1 useheart  staff  502  5 17 17:51 JarCompileBootstrap.java</span><br><span class="line">drwxr-xr-x  4 useheart  staff  128  5 17 19:25 compile</span><br></pre></td></tr></table></figure>

<h6 id="源码发行版-和-虚拟机使用目标发行版"><a href="#源码发行版-和-虚拟机使用目标发行版" class="headerlink" title="源码发行版 和 虚拟机使用目标发行版"></a>源码发行版 和 虚拟机使用目标发行版</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart JavaCompiler % javac -d compile/classes -target 1.8 -source 1.8 -encoding utf-8 -version  src/main/java/multi/*.java</span><br><span class="line">javac 1.8.0_211</span><br></pre></td></tr></table></figure>

<h6 id="parameters"><a href="#parameters" class="headerlink" title="-parameters"></a>-parameters</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart JarCompiler % javac -parameters  -sourcepath ./src/main/java  -classpath /Users/useheart/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar  src/main/java/JarCompileBootstrap.java</span><br><span class="line"></span><br><span class="line">// 反编译结果</span><br><span class="line">import compile.ExternalUseClass;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line">public class JarCompileBootstrap &#123;</span><br><span class="line">    public JarCompileBootstrap() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //-parameters 使用参数名args保持原样，没有是-parameters，参数名会是var0.</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(StringUtils.trim(&quot;引入commons-lang3 编译使用&quot;));</span><br><span class="line">        ExternalUseClass var1 = new ExternalUseClass();</span><br><span class="line">        var1.external();</span><br><span class="line">        System.out.println(&quot;Bootstrap 启动&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="verbose"><a href="#verbose" class="headerlink" title="-verbose"></a>-verbose</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart JavaCompiler % javac -verbose  src/main/java/multi/TestMainOne.java</span><br><span class="line">[解析开始时间 RegularFileObject[src/main/java/multi/TestMainOne.java]]</span><br><span class="line">[解析已完成, 用时 14 毫秒]</span><br><span class="line">[源文件的搜索路径: /opt/apache-jmeter-5.2.1/lib/ext/ApacheJMeter_core.jar,/opt/apache-jmeter-5.2.1/lib/jorphan.jar,/opt/apache-jmeter-5.2.1/lib/logkit-2.0.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/tools.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/dt.jar,.]</span><br><span class="line">[类文件的搜索路径: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/resources.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/rt.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/sunrsasign.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/jsse.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/jce.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/charsets.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/jfr.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/classes,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/sunec.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/nashorn.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/cldrdata.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/jfxrt.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/dnsns.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/localedata.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/jaccess.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/jre/lib/ext/zipfs.jar,/System/Library/Java/Extensions/MRJToolkit.jar,/opt/apache-jmeter-5.2.1/lib/ext/ApacheJMeter_core.jar,/opt/apache-jmeter-5.2.1/lib/jorphan.jar,/opt/apache-jmeter-5.2.1/lib/logkit-2.0.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/tools.jar,/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/dt.jar,.]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class)]]</span><br><span class="line">[正在检查multi.TestMainOne]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Byte.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Short.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Float.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Void.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class)]]</span><br><span class="line">[正在加载ZipFileIndexFileObject[/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class)]]</span><br><span class="line">[已写入RegularFileObject[src/main/java/multi/TestMainOne.class]]</span><br><span class="line">[共 161 毫秒]</span><br><span class="line">useheart@useheart JavaCompiler %</span><br></pre></td></tr></table></figure>

<h4 id="javac-help-文档输出"><a href="#javac-help-文档输出" class="headerlink" title="javac  help 文档输出"></a>javac  help 文档输出</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useheart@useheart multi % javac -help</span><br><span class="line">用法: javac &lt;options&gt; &lt;source files&gt;</span><br><span class="line">  -g                         生成所有调试信息</span><br><span class="line">  -nowarn                    不生成任何警告</span><br><span class="line">  -verbose                   输出有关编译器正在执行的操作的消息</span><br><span class="line">  -deprecation               输出使用已过时的 API 的源位置</span><br><span class="line">  -classpath &lt;路径&gt;            指定查找用户类文件和注释处理程序的位置</span><br><span class="line">  -cp &lt;路径&gt;                   指定查找用户类文件和注释处理程序的位置</span><br><span class="line">  -sourcepath &lt;路径&gt;           指定查找输入源文件的位置</span><br><span class="line">  -parameters                生成元数据以用于方法参数的反射</span><br><span class="line">  -d &lt;目录&gt;                    指定放置生成的类文件的位置</span><br><span class="line">  -encoding &lt;编码&gt;             指定源文件使用的字符编码</span><br><span class="line">  -source &lt;发行版&gt;             提供与指定发行版的源兼容性</span><br><span class="line">  -target &lt;发行版&gt;             生成特定 VM 版本的类文件</span><br><span class="line">  -version                   版本信息</span><br><span class="line">  -help                      输出标准选项的提要</span><br><span class="line">  @&lt;文件名&gt;                     从文件读取选项和文件名</span><br></pre></td></tr></table></figure>

<h4 id="执行（man-javac）文档"><a href="#执行（man-javac）文档" class="headerlink" title="执行（man javac）文档"></a>执行（man javac）文档</h4><p><a href="/files/man-javac.txt">javac英文文档</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>Java命令</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式（经典讲解）、正则表达式、正则表达式学习、正则学习了解、正则经验</title>
    <url>/2018/10/21/regular-expression/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="正则表达式-regular-expression（经典讲解）"><a href="#正则表达式-regular-expression（经典讲解）" class="headerlink" title="正则表达式 regular expression（经典讲解）"></a>正则表达式 regular expression（经典讲解）</h4><blockquote>
<p>说明：所谓经典讲解，是作者个人直观感觉。个人以前看过大量“正则表达式”的博客文章，但是始终未能深刻理解正则表达式。但是最近一篇有关linux的书籍（开源旅行手册）提到正则表达式，让我醍醐灌顶。</p>
</blockquote>
<blockquote>
<p>说明：本文内容主要来自《OS WORLD TRIP》又名《开源世界旅行手册》,由<strong>Kardinal</strong>著。该书的源地址：<a href="https://linuxtoy.org/pages/download.html" target="_blank" rel="noopener">下载地址</a> 。正则表达式的内容在部分2:地理的第26章</p>
</blockquote>
<a id="more"></a>
<h4 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h4><h5 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h5><h6 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h6><p>&emsp;&emsp;对于文本内容的处理，通常使用交互方式，手工调整;但如果你对源文本比较了解，则可以采用自动化的批量处理方式，这种方式效率高、迅速快批量处理，要求根据一定规则，匹配源文本中的字符，转换为目标文本，这就要用到正则表达式。<br>最简单的例子，使用 regular 进行匹配，结果如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`regular` expression</span><br></pre></td></tr></table></figure>

<p>正则表达式有许多变种:glob 表达式、基本正则表达式、perl 正则表达式、emacs 正则表达式……      </p>
<h6 id="运算优先级"><a href="#运算优先级" class="headerlink" title="运算优先级"></a>运算优先级</h6><p>&emsp;&emsp;正则表达式与数学表达式的不同在于，数学表达式执行数学运算，而正则表达式执行字符运算;相同的是，它们都按一定的优先级进行运算</p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">操作</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\</td>
<td align="center">转义符</td>
</tr>
<tr>
<td align="center">()</td>
<td align="center">捕获、匹配、断言</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">字符类</td>
</tr>
<tr>
<td align="center">*+?</td>
<td align="center">限定符</td>
</tr>
<tr>
<td align="center">{}</td>
<td align="center">范围</td>
</tr>
<tr>
<td align="center">^$</td>
<td align="center">位置和顺序</td>
</tr>
<tr>
<td align="center">&#124;</td>
<td align="center">或</td>
</tr>
</tbody></table>
<h6 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h6><p>&emsp;&emsp;如果源文本中出现了正则表达式中的运算符，如 ( ，使用 <code>(</code> 无法匹配下列文本中的括弧，这时要使用 <code>\</code> 进行转义。用 <code>\(</code> 匹配。在 Emacs 和 Vim 正则表达式中正好反过来，使用 <code>\(</code> 表示分组，用 <code>(</code> 匹配字符。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`(`regular expression)</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;在文本中匹配“运算优先级”一节中的所有运算符,都要用这种形式:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\运算符</span><br><span class="line">如 \* \+ \- \\的使用</span><br></pre></td></tr></table></figure>

<p>在文本中匹配 <code>\</code> 本身，要用 <code>\\</code>。<br>非运算符前使用 <code>\</code>，则有特殊的意义，例如 <code>\n</code> 匹配一个换行符。常用转义字符:   </p>
<h5 id="常规匹配"><a href="#常规匹配" class="headerlink" title="常规匹配"></a>常规匹配</h5><table>
<thead>
<tr>
<th>转义字符</th>
<th>涵义</th>
</tr>
</thead>
<tbody><tr>
<td>.</td>
<td>匹配除换行符以外的任意字符</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母或数字或下划线或汉字</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任意的空白符</td>
</tr>
<tr>
<td>\d</td>
<td>匹配数字</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词的开始或结束，在字符类里代表退格</td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串的开始，在字符类里表 示”非“</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的结束</td>
</tr>
<tr>
<td>[aeiou]</td>
<td>字符集合,匹配所包含的任意一个字符</td>
</tr>
</tbody></table>
<h5 id="反向匹配"><a href="#反向匹配" class="headerlink" title="反向匹配"></a>反向匹配</h5><table>
<thead>
<tr>
<th>转义字符</th>
<th>涵义</th>
</tr>
</thead>
<tbody><tr>
<td>\W</td>
<td>匹配任意不是字母，数字，下划线，汉字的字符</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意不是空白符的字符</td>
</tr>
<tr>
<td>\D</td>
<td>匹配任意非数字的字符</td>
</tr>
<tr>
<td>\B</td>
<td>匹配不是单词开头或结束的位置</td>
</tr>
<tr>
<td>[^aeiou]</td>
<td>匹配除了aeiou 这几个字母以外的任意字符</td>
</tr>
</tbody></table>
<h5 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h5><table>
<thead>
<tr>
<th>转义字符</th>
<th>涵义</th>
</tr>
</thead>
<tbody><tr>
<td>\a</td>
<td>报警字符(打印它的效果是电脑嘀一 声)</td>
</tr>
<tr>
<td>\t</td>
<td>制表符，Tab</td>
</tr>
<tr>
<td>\r</td>
<td>回车</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>\f</td>
<td>换页符</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\e</td>
<td>Escape</td>
</tr>
<tr>
<td>\0nn</td>
<td>ASCII 代码中八进制代码为 nn 的字符</td>
</tr>
<tr>
<td>\xnn</td>
<td>ASCII 代码中十六进制代码为 nn 的字符</td>
</tr>
<tr>
<td>\unnnn</td>
<td>Unicode 代码中十六进制代码为 nnnn 的字符</td>
</tr>
<tr>
<td>\cN</td>
<td>ASCII 控制字符。比如 \cC 代表 Ctrl+C</td>
</tr>
<tr>
<td>\A</td>
<td>字符串开头(类似^，但不受处理多行 选项的影响)</td>
</tr>
<tr>
<td>\Z</td>
<td>字符串结尾或行尾(不受处理多行选 项的影响)</td>
</tr>
<tr>
<td>\z</td>
<td>字符串结尾(类似$，但不受处理多行 选项的影响)</td>
</tr>
<tr>
<td>\G</td>
<td>当前搜索的开头</td>
</tr>
</tbody></table>
<h5 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h5><p>&emsp;&emsp;要想匹配数字、字母、空白很容易，因为已经有了对应这些字符集合的转义符，但是如果你 想匹配没有预定义的字符集合(比如元音字母 a、e、i、o、u)，应该怎么办?<br>&emsp;&emsp;正则表达式中允许你自定义字符类，在方括号里列出它们就可以了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[aeiou]</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;预定义的字符集合，也可以用字符类表示，如 <code>\d</code> 等价于 [0-9] 有些运算符，在字符类中使用会有另一种意义，例如 ^ 表示“字符串开始”，但在字符类中却<br>表示 “非”，以 <code>expression</code> 为例，使用 [exp] 匹配:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`exp`r`e`ssion</span><br></pre></td></tr></table></figure>

<p>使用 [^exp] 匹配(字符串中非 e、x、p 的字符):    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp`r`e`ssion`</span><br></pre></td></tr></table></figure>

<p>而使用 ^[exp] 匹配(以 e、x 或 p 起始的字符串):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`e`xpression</span><br></pre></td></tr></table></figure>

<h5 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h5><p>&emsp;&emsp;在上一小节中的表格中，我们知道<code>.</code> 可以匹配除换行符以外的任意字符，使用<code>.</code> 匹配下列 文本:  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expression</span><br></pre></td></tr></table></figure>

<p>但是 <code>.</code> 每次只匹配一个字符，如果想一次匹配多个，则要使用限定符。</p>
<table>
<thead>
<tr>
<th>贪婪限定符</th>
<th>惰性限定符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>*?</td>
<td>匹配零次或多次</td>
</tr>
<tr>
<td>+</td>
<td>+?</td>
<td>匹配一次或多次</td>
</tr>
<tr>
<td>?</td>
<td>??</td>
<td>匹配零次或一次</td>
</tr>
<tr>
<td>{3}</td>
<td>{3}?</td>
<td>匹配三次</td>
</tr>
<tr>
<td>{3,5}</td>
<td>{3,5}?</td>
<td>匹配三到五次</td>
</tr>
<tr>
<td>{3,}</td>
<td>{3,}?</td>
<td>匹配三次或以上</td>
</tr>
</tbody></table>
<p>下面通过实例了解限定符的区别。 es 的匹配结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expr`es`sion</span><br></pre></td></tr></table></figure>

<p>es+ 的匹配结果(e，一个或多个 s)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expr`ess`ion</span><br></pre></td></tr></table></figure>

<p>es* 的匹配结果(e，零或多个 s)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`e`xpr`ess`ion</span><br></pre></td></tr></table></figure>

<p>es? 的匹配结果(e，零或一个 s)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`e`xpr`es`sion</span><br></pre></td></tr></table></figure>

<p><strong>贪婪与懒惰</strong><br>&emsp;&emsp;使用限定符进行匹配时，默认匹配尽可能多的字符。无论用 <code>.*</code> 还是 <code>.+</code>匹配下列文本，都会匹配全部</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`expression`</span><br></pre></td></tr></table></figure>

<p>这种方式称为“贪婪模式”。在限定符之后加 <code>?</code> 则匹配尽可能少的字符，称为“懒惰模式”。 (懒惰模式的详解：<code>.+</code> 匹配一个或多个任意字符，在贪婪模式中，它匹配尽可能多的字符;而懒惰模式中(<code>.+?</code>)，则只匹配一个字符; <code>.{3,5}</code> 在贪婪模式中尽可能匹配5个字符，在懒惰模 式中(<code>.{3,5}?</code>)只匹配3个字符; <code>?</code>和 <code>*</code> 这样可以匹配零次的限定符，在懒惰模式下不匹配任何字符( <code>.*?</code>、<code>.??</code> ))。<br>例如，使用贪婪模式 a.+b 匹配:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`aaabab`</span><br></pre></td></tr></table></figure>

<p>使用懒惰模式 a.+?b 匹配:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`aaab`ab</span><br></pre></td></tr></table></figure>

<h5 id="分支条件"><a href="#分支条件" class="headerlink" title="分支条件"></a>分支条件</h5><p><code>|</code> 表示“或”，使用它进行分支选择:<br>例如 <code>[a-z]+|\d+</code> 匹配单词或数字:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expression 123</span><br></pre></td></tr></table></figure>

<h5 id="分组、捕获、不捕获"><a href="#分组、捕获、不捕获" class="headerlink" title="分组、捕获、不捕获"></a>分组、捕获、不捕获</h5><h6 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h6><p>&emsp;&emsp;使用<code>(表达式)</code>对表达式进行分组，即用小括号来指定子表达式叫做分组。例如使用 <code>(\d{3}\.){2}</code> 匹配下面例子中的数字:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">abc`123.456.`def</span><br></pre></td></tr></table></figure>

<p><code>\d{3}</code> 表示三个数字， <code>(\d{3}\.)</code> 表示三个数字加<code>“ . ”</code>为一组，<code>{2}</code> 表示这一组内容重复两次</p>
<h6 id="捕获"><a href="#捕获" class="headerlink" title="捕获"></a>捕获</h6><p>&emsp;&emsp;在对表达式进行分组的时候，会捕获文本到自动命名的组里。可以使用 <code>\1 \2 ......</code> 来反向引用组。例如用 <code>([a-z]*)\s(\d*)</code> 匹配下列文本， <code>([a-z]*)</code> 为 <code>\1</code> 组， <code>(\d*)</code> 为 <code>\2</code> 组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`kardinal 1234567`</span><br></pre></td></tr></table></figure>

<p>使用 <code>\2\s\1</code> 替换 <code>([a-z]*)\s(\d*)</code> ，可以改变两个字符串的顺序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1234567 kardinal</span><br></pre></td></tr></table></figure>

<p>使用<code>([a-z]*)\s(\d*)\1</code>匹配下列文本，<code>([a-z]*)</code> 为 <code>\1</code> 组， <code>(\d*)</code> 为 <code>\2</code>组，<code>([a-z]*)\s(\d*)\1</code>中<code>\1</code>是反向引用组:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`kardinal 1234567kardinal`</span><br></pre></td></tr></table></figure>

<p>如果分组较多，计数可能会不太方便，可以给分组指定名称，例如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?&lt;name&gt;[a-z]*)\s(?&lt;num&gt;\d*)  name、num 是分组的名称</span><br><span class="line">\k&lt;num&gt;\s\k&lt;name&gt; (?#使用“`\k&lt;name&gt;`”反向引用)</span><br></pre></td></tr></table></figure>

<p>使用 <code>(?:表达式)</code> ，则只是分组，而不捕获，下面例子中， <code>(\d*)</code> 为 <code>\1</code> 组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(?:[a-z]*)\s(\d*)</span><br></pre></td></tr></table></figure>

<p>不捕获的典型应用：<br>用使用在或的应用中，使用或需要使用括号即捕获组，但是又不想存在捕获组，则可以使用不捕获。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">l(?:i|o|e)ve</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注明：反向引用提供了标识字符串中的重复字符或子字符串的方便途径。 例如，如果输入字符串包含某任意子字符串的多个匹配项，可以使用捕获组匹配第一个出现的子字符串，然后使用反向引用匹配后面出现的子字符串。捕获文本放入对应的分组是需要消耗内存的。如何后续不反向引用分组，可以采用捕获但是不分组。</p>
</blockquote>
<h6 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h6><p>&emsp;&emsp;目前为止，我们学到的正则表达式匹配，都是有“宽度”的，使用 <code>\w+</code>。 匹配下面文本，会将 <code>。</code> 一同匹配:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regular。</span><br><span class="line">expression。</span><br></pre></td></tr></table></figure>

<p>如果不想匹配符号，只匹配一个位置，就要用到“零宽断言”(匹配宽度为零，满足一定的条件的断言)，零宽断言使用 (?=表达式) 的语法，例如 <code>\w+(?=。)</code> ，其中 <code>(?=。)</code> 表示<code>。</code> 前面的位置(先行断言)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`regular`。</span><br><span class="line">`expression`。</span><br></pre></td></tr></table></figure>

<p>高级应用(关于为什么叫零宽断言)：<br>表达式写法：<code>\w+(?=。)。\w+</code> | <code>\w+(?=。)\w+</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`regular。zero`</span><br></pre></td></tr></table></figure>

<p>如果需要匹配后面的位置，如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">。`regular`</span><br><span class="line">。`expression`</span><br></pre></td></tr></table></figure>

<p>则要用到后发断言 <code>(?&lt;=。)</code> ，使用 <code>(?&lt;=。)\w+</code> 得到上面的匹配结果<br>使用 <code>(?&lt;=&lt;b&gt;).*(?=&lt;/b&gt;)</code> 匹配标签中的内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;b&gt;`粗体`&lt;/b&gt;</span><br></pre></td></tr></table></figure>

<h6 id="负向零宽断言"><a href="#负向零宽断言" class="headerlink" title="负向零宽断言"></a>负向零宽断言</h6><p>&emsp;&emsp;负向零宽断言 <code>(?!表达式)</code> 也是匹配一个零宽度的位置，不过这个位置的“断言”取表达式的反值，例如 <code>(?!表达式)</code> 表示 <code>表达式</code> 前面的位置，如果 <code>表达式</code> 不成立，匹配这个位置;如果 <code>表达式</code> 成立，则不匹配:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`expression`</span><br><span class="line">expression。</span><br><span class="line">`expression`，</span><br><span class="line">`expression`;</span><br></pre></td></tr></table></figure>

<p>以上为使用 <code>.+n(?!。)</code> 的匹配结果。注意与 <code>.+n[^。]</code> 匹配的区别</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">expression</span><br><span class="line">`expression，`</span><br><span class="line">`expression;`</span><br><span class="line">expression。</span><br></pre></td></tr></table></figure>

<p>同样，负向零宽断言也有“先行”和“后发”两种，负向零宽后发断言为 <code>(?&lt;!表达式)</code> 使用 <code>(?&lt;![&lt;/])para(?!&gt;)</code> 匹配下面文本:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;para&gt;`para`表示一个段落&lt;/para&gt;</span><br></pre></td></tr></table></figure>

<p><code>(?&lt;![&lt;/])</code> 表示 para 左边不能为 <code>&lt;</code> 或 <code>/</code> ; <code>(?!&gt;)</code> 表示 para 右边不能为 <code>&gt;</code>。</p>
<h6 id="常用分组语法"><a href="#常用分组语法" class="headerlink" title="常用分组语法"></a>常用分组语法</h6><table>
<thead>
<tr>
<th>分类</th>
<th>代码/语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>捕获</td>
<td>(exp)</td>
<td>匹配exp,并捕获文本到自动命名的组里</td>
</tr>
<tr>
<td></td>
<td>(?exp)</td>
<td>匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)</td>
</tr>
<tr>
<td></td>
<td>(?:exp)</td>
<td>匹配exp,不捕获匹配的文本，也不给此分组分配组号</td>
</tr>
<tr>
<td>零宽断言</td>
<td>(?=exp)</td>
<td>匹配exp前面的位置</td>
</tr>
<tr>
<td></td>
<td>(?&lt;=exp)</td>
<td>匹配exp后面的位置</td>
</tr>
<tr>
<td></td>
<td>(?!exp)</td>
<td>匹配后面跟的不是exp的位置</td>
</tr>
<tr>
<td></td>
<td>(?&lt;!exp)</td>
<td>匹配前面不是exp的位置</td>
</tr>
<tr>
<td>注释</td>
<td>(?#comment)</td>
<td>这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</td>
</tr>
</tbody></table>
<h5 id="正则表达式特殊用法"><a href="#正则表达式特殊用法" class="headerlink" title="正则表达式特殊用法"></a>正则表达式特殊用法</h5><blockquote>
<p><a href="https://www.regular-expressions.info/unicode.html" target="_blank" rel="noopener">Unicode Regular Expressions</a>   </p>
</blockquote>
<p>\p{script=Han} 识别汉字<br>\p{javaWhitespace} 匹配空字符</p>
<h5 id="推荐其他网址"><a href="#推荐其他网址" class="headerlink" title="推荐其他网址"></a>推荐其他网址</h5><p><a href="http://tool.oschina.net/uploads/apidocs/jquery/regexp.html" target="_blank" rel="noopener">正则表达式全集</a><br><a href="https://www.kancloud.cn/thinkphp/regex-guide/43534" target="_blank" rel="noopener">正则表达式简明参考</a> (重点在分组和反向引用)<br><a href="https://luke0922.gitbooks.io/learnregularexpressionin30minutes/content/chapter3.html" target="_blank" rel="noopener">正则表达式30分钟教程</a> (常用分组语法的总结)<br><a href="http://blog.51cto.com/cnn237111/749047" target="_blank" rel="noopener">正则表达式的先行断言(lookahead)和后行断言(lookbehind)</a></p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>公司基础知识了解文档</title>
    <url>/2020/04/19/%E5%85%AC%E5%8F%B8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%86%E8%A7%A3%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h1 id="公司"><a href="#公司" class="headerlink" title="公司"></a>公司</h1><p>公司是企业法人，有独立的法人财产，享有法人财产。公司以其全部财产对公司的债务承担责任。<br>公司是指以营利为目的，从事商业经营活动或达到某些目的而成立的组织。</p>
<h2 id="公司类型"><a href="#公司类型" class="headerlink" title="公司类型"></a>公司类型</h2><h3 id="有限责任公司"><a href="#有限责任公司" class="headerlink" title="有限责任公司"></a>有限责任公司</h3><p>有限责任公司的股东以其认缴的出资额为限对公司承担责任。</p>
<h3 id="股份有限公司"><a href="#股份有限公司" class="headerlink" title="股份有限公司"></a>股份有限公司</h3><p>股份有限公司的股东以其认购的股份为限对公司承担责任。</p>
<h2 id="许可证"><a href="#许可证" class="headerlink" title="许可证"></a>许可证</h2><h3 id="营业执照"><a href="#营业执照" class="headerlink" title="营业执照"></a>营业执照</h3><p>营业执照签发日期为公司成立日期。<br>公司营业执照应当载明公司的名称、住所、注册资本、经营范围、法定代表人姓名等事项。</p>
<h3 id="互联网企业"><a href="#互联网企业" class="headerlink" title="互联网企业"></a>互联网企业</h3><p>参考:<a href="https://zhuanlan.zhihu.com/p/30892634" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30892634</a></p>
<ul>
<li>网络文化经营许可证</li>
<li>增值电信业务经营许可证（简称ICP）</li>
</ul>
<a id="more"></a>

<h2 id="公司章程"><a href="#公司章程" class="headerlink" title="公司章程"></a>公司章程</h2><p>公司章程对公司、股东、董事、监事、高级管理人员具有约束力。</p>
<h3 id="公司名称和住所"><a href="#公司名称和住所" class="headerlink" title="公司名称和住所"></a>公司名称和住所</h3><h3 id="公司经营范围"><a href="#公司经营范围" class="headerlink" title="公司经营范围"></a>公司经营范围</h3><h3 id="公司注册资本"><a href="#公司注册资本" class="headerlink" title="公司注册资本"></a>公司注册资本</h3><ul>
<li>认缴机制</li>
<li>有限责任公司破产清算，股东最高赔本资金</li>
</ul>
<h3 id="股东姓名或者名称"><a href="#股东姓名或者名称" class="headerlink" title="股东姓名或者名称"></a>股东姓名或者名称</h3><h3 id="股东的出资方式、出资额和出资时间"><a href="#股东的出资方式、出资额和出资时间" class="headerlink" title="股东的出资方式、出资额和出资时间"></a>股东的出资方式、出资额和出资时间</h3><h3 id="公司的机构及其产生办法、职权、议事规则"><a href="#公司的机构及其产生办法、职权、议事规则" class="headerlink" title="公司的机构及其产生办法、职权、议事规则"></a>公司的机构及其产生办法、职权、议事规则</h3><h3 id="法定代表人"><a href="#法定代表人" class="headerlink" title="法定代表人"></a>法定代表人</h3><h3 id="股东会会议认为需要规定的其他事项"><a href="#股东会会议认为需要规定的其他事项" class="headerlink" title="股东会会议认为需要规定的其他事项"></a>股东会会议认为需要规定的其他事项</h3><h2 id="出资证明书"><a href="#出资证明书" class="headerlink" title="出资证明书"></a>出资证明书</h2><p>有限责任公司成立后，应当向股东签发出资证明书</p>
<h3 id="公司名称"><a href="#公司名称" class="headerlink" title="公司名称"></a>公司名称</h3><h3 id="公司成立日期"><a href="#公司成立日期" class="headerlink" title="公司成立日期"></a>公司成立日期</h3><h3 id="公司注册资本-1"><a href="#公司注册资本-1" class="headerlink" title="公司注册资本"></a>公司注册资本</h3><h3 id="股东姓名或者名称、缴纳的出资额和出资日期"><a href="#股东姓名或者名称、缴纳的出资额和出资日期" class="headerlink" title="股东姓名或者名称、缴纳的出资额和出资日期"></a>股东姓名或者名称、缴纳的出资额和出资日期</h3><h3 id="出资证明书的编号和核发日期"><a href="#出资证明书的编号和核发日期" class="headerlink" title="出资证明书的编号和核发日期"></a>出资证明书的编号和核发日期</h3><h2 id="子公司"><a href="#子公司" class="headerlink" title="子公司"></a>子公司</h2><h2 id="公司解散"><a href="#公司解散" class="headerlink" title="公司解散"></a>公司解散</h2><p>公司在经营发展过程中，会因章程约定的经营期限届满、解散事由发生、股东（大）会决议而主动解散；也会因政府机关的责令撤销、关闭、吊销营业执照等行政行为、法院的解散判决而被迫解散，由此进入公司清算。<br>公司解散原因：<br>（一）公司章程规定的营业期限届满或者公司章程规定的其他解散事由出现；（二）股东会或者股东大会决议解散；（三）因公司合并或者分立需要解散；（四）依法被吊销营业执照、责令关闭或者被撤销；<br>（五）人民法院依照本法第一百八十二条的规定予以解散。<br>《公司法》第一百八十二条规定，公司经营管理发生严重困难，继续存续会使股东利益受到重大损失，通过其他途径不能解决的，持有公司全部股东表决权百分之十以上的股东，可以请求人民法院解散公司。<br>参考法律：公司法  公司破产法  劳动法</p>
<h3 id="未及时进行清算危害"><a href="#未及时进行清算危害" class="headerlink" title="未及时进行清算危害"></a>未及时进行清算危害</h3><ul>
<li>不及时清算股东和法人将承担巨大法律责任，股东连带责任</li>
<li>对法定代表人的不利影响</li>
<li>股东及公司的巨大税务风险</li>
</ul>
<h3 id="公司清算"><a href="#公司清算" class="headerlink" title="公司清算"></a>公司清算</h3><p>公司清算是指以解散公司为目的，而清理公司现有债权债务，分配剩余财产，了结公司各类法律关系的程序和制度。<br>参考:<a href="https://zhuanlan.zhihu.com/p/34789930" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/34789930</a></p>
<ul>
<li><p>自行清算</p>
<ul>
<li>公司自行自行成立清算组</li>
</ul>
</li>
<li><p>强制清算</p>
<ul>
<li>债权人向法院申请某公司成立清算组</li>
<li>由法院成立清算组</li>
</ul>
</li>
<li><p>破产清算</p>
<ul>
<li>公司资不抵债</li>
<li>公司协调债权人债务无果</li>
<li>债务人向法院申请破产</li>
</ul>
</li>
</ul>
<h3 id="企业注销"><a href="#企业注销" class="headerlink" title="企业注销"></a>企业注销</h3><ul>
<li>工商注销备案</li>
<li>注销登报公告</li>
<li>注销公司国、地税登记证</li>
<li>工商注销</li>
<li>注销代码证</li>
<li>银行注销</li>
<li><img src="/images/%E4%BC%81%E4%B8%9A%E6%B3%A8%E9%94%80%E6%B5%81%E7%A8%8B.png" alt="企业注销流程"></li>
</ul>
<h2 id="企业行为"><a href="#企业行为" class="headerlink" title="企业行为"></a>企业行为</h2><h3 id="会议"><a href="#会议" class="headerlink" title="会议"></a>会议</h3><ul>
<li>股东大会</li>
<li>董事会</li>
<li>监事会</li>
</ul>
<h3 id="股权融资"><a href="#股权融资" class="headerlink" title="股权融资"></a>股权融资</h3><h3 id="公司债券"><a href="#公司债券" class="headerlink" title="公司债券"></a>公司债券</h3><h3 id="投资"><a href="#投资" class="headerlink" title="投资"></a>投资</h3><p>一般来说，不得成为对所投资企业的债务承担连带责任的出资人。<br>       公司向其他企业投资或者为他人提供担保，依照公司章程的规定，由董事会或者股东会、股东大会决议；公司章程对投资或者担保的总额及单项投资或者担保的数额有限额规定的，不得超过规定的限额。<br>      公司为公司股东或者实际控制人提供担保的，必须经股东会或者股东大会决议。<br>     前款规定的股东或者受前款规定的实际控制人支配的股东，不得参加前款规定事项的表决。该项表决由出席会议的其他股东所持表决权的过半数通过。</p>
<h2 id="人事划分"><a href="#人事划分" class="headerlink" title="人事划分"></a>人事划分</h2><h3 id="创始人"><a href="#创始人" class="headerlink" title="创始人"></a>创始人</h3><h3 id="股东"><a href="#股东" class="headerlink" title="股东"></a>股东</h3><p>公司股东依法享有资产收益、参与重大决策的选择管理等权利</p>
<h3 id="投资人"><a href="#投资人" class="headerlink" title="投资人"></a>投资人</h3><h3 id="法人"><a href="#法人" class="headerlink" title="法人"></a>法人</h3><h3 id="董事"><a href="#董事" class="headerlink" title="董事"></a>董事</h3><ul>
<li>董事长</li>
</ul>
<h3 id="监事"><a href="#监事" class="headerlink" title="监事"></a>监事</h3><ul>
<li>主席</li>
</ul>
<h3 id="经理"><a href="#经理" class="headerlink" title="经理"></a>经理</h3><ul>
<li>总经理</li>
</ul>
<h3 id="高级管理人员"><a href="#高级管理人员" class="headerlink" title="高级管理人员"></a>高级管理人员</h3><h2 id="股权架构"><a href="#股权架构" class="headerlink" title="股权架构"></a>股权架构</h2><p>参考:<a href="http://www.scgslaw.com/2018/clswj_0918/367.html" target="_blank" rel="noopener">http://www.scgslaw.com/2018/clswj_0918/367.html</a></p>
<h3 id="合伙人选择"><a href="#合伙人选择" class="headerlink" title="合伙人选择"></a>合伙人选择</h3><ul>
<li><p>有创业心态</p>
</li>
<li><p>有创业能力</p>
</li>
<li><p>有3-5年全职投入预期</p>
</li>
<li><p>错误选择方式</p>
<ul>
<li>资源承诺者</li>
<li>兼职人员</li>
<li>天使投资人</li>
<li>早期普通员工</li>
</ul>
</li>
</ul>
<h3 id="合伙人股权分配"><a href="#合伙人股权分配" class="headerlink" title="合伙人股权分配"></a>合伙人股权分配</h3><ul>
<li><p>股权分配本质问题</p>
<p>一个是如何利用一个合理的股权结构保证创始人对公司的控制力，<br>一个是通过股权分配帮助公司获取更多资源，包括找到有实力的合伙人和投资人。</p>
<ul>
<li>创始人对公司决定控制力</li>
<li>吸收更多优秀资源</li>
</ul>
</li>
<li><p>股权分配规则尽早落地</p>
</li>
<li><p>股权分配机制</p>
<ul>
<li><p>持股人员</p>
<ul>
<li>公司合伙人</li>
<li>员工</li>
<li>公司外部顾问</li>
<li>投资方</li>
</ul>
</li>
</ul>
</li>
<li><p>合伙人股权代持</p>
</li>
<li><p>股权绑定</p>
</li>
<li><p>早期公司资金紧张，公司欠条兑现合伙人工资，后续补发工资</p>
</li>
</ul>
<h3 id="合伙人股权退出机制"><a href="#合伙人股权退出机制" class="headerlink" title="合伙人股权退出机制"></a>合伙人股权退出机制</h3><ul>
<li>提前约定退出机制，管理好合伙人预期</li>
<li>股东中途退出，股权溢价回购</li>
<li>设定高额违约金条款</li>
</ul>
<h2 id="公司组织"><a href="#公司组织" class="headerlink" title="公司组织"></a>公司组织</h2><h3 id="股东会"><a href="#股东会" class="headerlink" title="股东会"></a>股东会</h3><p>有限责任公司股东会由全体股东组成。股东会是公司的权力机构，依照本法行使职权。<br>股东会行使下列职权：<br> (一)决定公司的经营方针和投资计划；<br> (二)选举和更换非由职工代表担任的董事、监事，决定有关董事、监事的报酬事项；<br> (三)审议批准董事会的报告；<br> (四)审议批准监事会或者监事的报告；<br> (五)审议批准公司的年度财务预算方案、决算方案；<br> (六)审议批准公司的利润分配方案和弥补亏损方案；<br> (七)对公司增加或者减少注册资本作出决议；<br> (八)对发行公司债券作出决议；<br> (九)对公司合并、分立、解散、清算或者变更公司形式作出决议；<br> (十)修改公司章程；<br> (十一)公司章程规定的其他职权。</p>
<ul>
<li>一般股东按照出资比例行使表决权</li>
<li>对公司负责</li>
</ul>
<h3 id="董事会"><a href="#董事会" class="headerlink" title="董事会"></a>董事会</h3><p>董事会对股东会负责，行使下列职权：<br> (一)召集股东会会议，并向股东会报告工作；<br> (二)执行股东会的决议；<br> (三)决定公司的经营计划和投资方案；<br> (四)制订公司的年度财务预算方案、决算方案；<br> (五)制订公司的利润分配方案和弥补亏损方案；<br> (六)制订公司增加或者减少注册资本以及发行公司债券的方案；<br> (七)制订公司合并、分立、解散或者变更公司形式的方案；<br> (八)决定公司内部管理机构的设置；<br> (九)决定聘任或者解聘公司经理及其报酬事项，并根据经理的提名决定聘任或者解聘公司副经理、财务负责人及其报酬事项；<br> (十)制定公司的基本管理制度；<br> (十一)公司章程规定的其他职权。</p>
<ul>
<li>董事会决议的表决，实行一人一票</li>
<li>对股东会负责</li>
<li>可不设立，需要执行董事人员</li>
</ul>
<h3 id="监事会"><a href="#监事会" class="headerlink" title="监事会"></a>监事会</h3><p>监事会、不设监事会的公司的监事行使下列职权：<br> (一)检查公司财务；<br> (二)对董事、高级管理人员执行公司职务的行为进行监督，对违反法律、行政法规、公司章程或者股东会决议的董事、高级管理人员提出罢免的建议；<br> (三)当董事、高级管理人员的行为损害公司的利益时，要求董事、高级管理人员予以纠正；<br> (四)提议召开临时股东会会议，在董事会不履行本法规定的召集和主持股东会会议职责时召集和主持股东会会议；<br> (五)向股东会会议提出提案；<br> (六)依照本法第一百五十一条的规定，对董事、高级管理人员提起诉讼；<br> (七)公司章程规定的其他职权。</p>
<ul>
<li>可不设立，需要监事人员</li>
</ul>
<h3 id="经理-1"><a href="#经理-1" class="headerlink" title="经理"></a>经理</h3><p>有限责任公司可以设经理，由董事会决定聘任或者解聘。经理对董事会负责，行使下列职权：<br> (一)主持公司的生产经营管理工作，组织实施董事会决议；<br> (二)组织实施公司年度经营计划和投资方案；<br> (三)拟订公司内部管理机构设置方案；<br> (四)拟订公司的基本管理制度；<br> (五)制定公司的具体规章；<br> (六)提请聘任或者解聘公司副经理、财务负责人；<br> (七)决定聘任或者解聘除应由董事会决定聘任或者解聘以外的负责管理人员；<br> (八)董事会授予的其他职权。<br> 公司章程对经理职权另有规定的，从其规定。<br> 经理列席董事会会议。</p>
<ul>
<li>对董事会负责</li>
<li>董事会决定聘任或者解聘</li>
</ul>
<h2 id="国家机关"><a href="#国家机关" class="headerlink" title="国家机关"></a>国家机关</h2><h3 id="工商行政管理机关"><a href="#工商行政管理机关" class="headerlink" title="工商行政管理机关"></a>工商行政管理机关</h3><ul>
<li>查名</li>
<li>申请营业执照</li>
</ul>
<h3 id="银行"><a href="#银行" class="headerlink" title="银行"></a>银行</h3><h3 id="质量技术监督部门"><a href="#质量技术监督部门" class="headerlink" title="质量技术监督部门"></a>质量技术监督部门</h3><ul>
<li>申请组织机构代码证</li>
</ul>
<h3 id="税务机关"><a href="#税务机关" class="headerlink" title="税务机关"></a>税务机关</h3><ul>
<li>申请税务登记证</li>
<li>国税</li>
<li>地税</li>
</ul>
<h3 id="文化局（厅）"><a href="#文化局（厅）" class="headerlink" title="文化局（厅）"></a>文化局（厅）</h3><ul>
<li>签发网络文化经营许可证</li>
</ul>
<p><em>XMind - Trial Version</em></p>
]]></content>
      <tags>
        <tag>公司</tag>
      </tags>
  </entry>
  <entry>
    <title>JEPG、PNG、WEBP、GIF、SVG的学习使用、 各种网络图片格式学习-JPEG</title>
    <url>/2020/02/15/%E5%9B%BE%E7%89%87/JEPG%E3%80%81PNG%E3%80%81WEBP%E3%80%81GIF%E3%80%81SVG%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8-JPEG/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="GPEG"><a href="#GPEG" class="headerlink" title="GPEG"></a>GPEG</h5><h6 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h6><p>&ensp; &ensp; JPEG(Joint Photographic Experts Group:联合图像专家小组,1972年)是第一个国际图像压缩标准。JPEG压缩标准描述将图像转换为字节的数据串流(streaming)，没有说明如何将这些字节存储。     </p>
<blockquote>
<p>JPEG算法原理解析(整理像素点，以数学三角函数表示，通过哈夫曼树进行存储)<br><a href="https://thecodeway.com/blog/?p=69" target="_blank" rel="noopener">JPEG算法解密一</a><br><a href="https://thecodeway.com/blog/?p=353" target="_blank" rel="noopener">JPEG算法解密二</a><br><a href="https://thecodeway.com/blog/?p=480" target="_blank" rel="noopener">JPEG算法解密三</a><br><a href="https://thecodeway.com/blog/?p=522" target="_blank" rel="noopener">JPEG算法解密四</a><br><a href="https://thecodeway.com/blog/?p=690" target="_blank" rel="noopener">JPEG算法解密五</a><br><a href="https://blog.csdn.net/shelldon/article/details/54234433" target="_blank" rel="noopener">CSDN-JPEG图像压缩</a></p>
</blockquote>
<p>&ensp; &ensp; .jpeg/.jpg是最常用存储JPEG图像文件格式，是一种有损压缩格式。通常将图像压缩在很小的储存空间并且会将图像中重复或不重要的资料丢弃，因此容易造成图像数据的损伤。一般不建议将JPEG重复压缩会导致数据丢失越来越严重。   </p>
<pre><code>JPEG压缩标准实现开源库：libjpeg、mozjpeg、miniJPEG
[libjpeg](http://libjpeg.sourceforge.net/)    
Libjpeg is a widely used C library for reading and writing JPEG image files. It was developed by Tom Lane and the Independent JPEG Group (IJG) during the 1990’s and it is now maintained by several developers using various services identified in the SourceForge summary.
The latest release is version 6b of 27-Mar-1998. This is a stable and solid foundation for many application’s JPEG support.</code></pre><a id="more"></a>

<p>1、JPEG是有损压缩算法。有损压缩就是为了将图片压缩到更小，利用人眼观察图片的特点改变某些丢弃掉一些人眼不易察觉的原始颜色信息，而这个是不可逆的。<br>2、其压缩算法可以精确控制压缩比，以图像质量换得存储空间。  Photoshop存储JPEG格式图片，提供11级压缩级别，以0—10级表示。其中0级压缩比最高，图像品质最差。即使采用细节几乎无损的10 级质量保存时，压缩比也可达 5：1。<br>3、它不支持透明背景图像，更加适合颜色复杂的图像。<br>4、JPEG存储图片一个像素使用24位表示，属于真彩色图片。</p>
<p>后续针对JPEG第一代压缩标准的改进变化，依次出现了：<br>JPEG2000(2000年、支持有损和无损压缩，支持<a href="https://baike.baidu.com/item/%E6%B8%90%E8%BF%9B%E4%BC%A0%E8%BE%93" target="_blank" rel="noopener">渐进传输</a>、开源库:<a href="http://www.openjpeg.org/" target="_blank" rel="noopener">openJPEG</a>)、JPEG XR(2009年, 增加HDR支持)</p>
<h6 id="JPEG的特性"><a href="#JPEG的特性" class="headerlink" title="JPEG的特性"></a>JPEG的特性</h6><p>1、支持摄影图像或写实图像的高级压缩，并且可利用压缩比例控制图像文件大小。<br>2、有损压缩会使图像数据质量下降，并且在编辑和重新保存JPG格式图像时，这种下降损失会累积。<br>3、JPEG不适用于所含颜色很少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片。<br>4、它并不适合于线条绘图（drawing）和其他文字或图示（iconic）的图形,因为它的压缩方法用在这些图形的型态上,会得到不适当的结果；<br>5、当它处理矢量图形和 Logo 等线条感较强、颜色对比强烈的图像时，人为压缩导致的图片模糊会相当明显。且不支持透明度处理。</p>
<h6 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h6><p>1、大的背景图<br>2、轮播图<br>3、Banner图    </p>
<blockquote>
<p><strong>什么时候应该使用JPEG？</strong><br>&ensp; &ensp; 从上面介绍的JPEG的特性来看，它更适合用来存储具有丰富色彩层次的摄影或写实照片。这是因为色彩层次丰富的图像一般会由于阴影、反光或透视等效果形成明暗、深浅不同的区域，如果我们选择使用PNG8来储存的话，可能一些颜色在调色板上找不到，导致图像上一些数据的丢失，如果使用PNG24的话，它确实可以查找到图像不同层次的颜色，但它会因数据较多增大图片的体积，严重拖慢加载速度，在网站上也容易显示不全。所以，JPEG是最好的选择，它能在尽量压缩文件大小的情况下较好的还原图片的品质。为什么这里不使用SVG呢？SVG有自身的局限性，由于它是点和线精准计算的，一些位图如摄影元素SVG无法实现合适的缩放。<br>引用:<a href="https://www.qifeiye.com/%E6%A8%AA%E5%90%91%E5%AF%B9%E6%AF%94gifjpegpngsvg%EF%BC%8C%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E9%80%89%E6%8B%A9%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8F/" target="_blank" rel="noopener">横向对比GIF/JPEG/PNG/SVG，教你如何合理选择图像格式</a></p>
</blockquote>
<h6 id="基准式JPEG和渐进式JPEG"><a href="#基准式JPEG和渐进式JPEG" class="headerlink" title="基准式JPEG和渐进式JPEG"></a>基准式JPEG和渐进式JPEG</h6><p>基准式JPEG和渐进式JPEG是两种不同编解码方式，还有主要是在网速比较慢的时候，图片加载方式也是不一样的。<br><img src="/images/%E5%9F%BA%E5%87%86%E5%BC%8FJPEG%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F.webp" alt="基准式JPEG"><br>基准式JPEG加载情况<br><img src="/images/%E6%B8%90%E8%BF%9B%E5%BC%8FJPEG%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F.webp" alt="渐进式JPEG"><br>渐进式JPEG加载情况</p>
<h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="https://www.jianshu.com/p/d2817058c901" target="_blank" rel="noopener">使用渐进式 JPEG 来提升用户体验</a><br><a href="http://www.taoweng.site/index.php/archives/264/" target="_blank" rel="noopener">每个前端工程师都应该了解的图片知识</a><br><a href="https://www.jianshu.com/p/f5557c0e689e" target="_blank" rel="noopener">JPEG图片格式详解</a><br><a href="https://www.jianshu.com/p/ab96bf20f90e" target="_blank" rel="noopener">JPG？GIF？PNG？前端如何选择图片格式？</a><br><a href="https://zhuanlan.zhihu.com/p/41498458" target="_blank" rel="noopener">网站建设中使用的png和jpg两种图片格式都有哪些特点和区别</a><br><a href="https://www.qifeiye.com/%E6%A8%AA%E5%90%91%E5%AF%B9%E6%AF%94gifjpegpngsvg%EF%BC%8C%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E5%90%88%E7%90%86%E9%80%89%E6%8B%A9%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8F/" target="_blank" rel="noopener">横向对比GIF/JPEG/PNG/SVG，教你如何合理选择图像格式</a>    </p>
<p><a href="https://blog.csdn.net/cmsbupt/article/details/51178761" target="_blank" rel="noopener">下一代Web图像格式：JPEG、JPEG XR、JPEG2000、WebP、BPG</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>前端</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>JEPG、PNG、WEBP、GIF、SVG的学习使用、 各种网络图片格式学习-PNG</title>
    <url>/2020/02/24/%E5%9B%BE%E7%89%87/JEPG%E3%80%81PNG%E3%80%81WEBP%E3%80%81GIF%E3%80%81SVG%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8-PNG/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>&emsp;&emsp;来自维基百科介绍，便携式网络图形(Portable Network Graphics，PNG)是一种无损压缩位图图形格式，支持索引、灰色、RGB三种颜色方案以及Alpha通道等特性。PNG的开发目标是改善并取代Gif作为适合网络传输的格式而不需专利许可，所以被广泛应用于互联网及其他方面上。</p>
<h4 id="PNG的特性"><a href="#PNG的特性" class="headerlink" title="PNG的特性"></a>PNG的特性</h4><p>1、无损压缩<br>2、支持索引透明和Alpha透明半透明<br>3、支持256色调色板技术(索引颜色)以产生小体积文件<br>4、使用循环冗余码检测损坏文件<br>5、支持渐近显示和流式读写<br>6、最新的PNG标准允许在一个文件内存储多幅图像（APNG）。</p>
<a id="more"></a>

<h4 id="PNG存储实现原理"><a href="#PNG存储实现原理" class="headerlink" title="PNG存储实现原理"></a>PNG存储实现原理</h4><p>这篇文章已经有较好的讲解。<a href="http://www.alloyteam.com/2017/03/the-story-of-png-get-images-and-pixel-content/#%E7%BB%93%E6%9E%84" target="_blank" rel="noopener">PNG存储原理讲解</a></p>
<h4 id="PNG8、PNG24、PNG32差异"><a href="#PNG8、PNG24、PNG32差异" class="headerlink" title="PNG8、PNG24、PNG32差异"></a>PNG8、PNG24、PNG32差异</h4><table>
<thead>
<tr>
<th>格式</th>
<th>简介</th>
<th>最高支持色彩通道</th>
<th>索引色编辑支持</th>
<th>透明支持</th>
</tr>
</thead>
<tbody><tr>
<td>PNG8</td>
<td>8位单通道，最多显示256种颜色</td>
<td>256种索引色</td>
<td>支持</td>
<td>支持设定特定索引色为透明色（布尔透明）<br>支持为索引色附加8位透明度（256阶alpha透明）</td>
</tr>
<tr>
<td>PNG24</td>
<td>24位RGB三通道，真彩色图像</td>
<td>约1600万颜色</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>PNG32</td>
<td>32位RGBA四通道，在原有的PNG24位基础上增加了Alpha通道来描述透明度</td>
<td>约1600万颜色，外加256种半透明色</td>
<td>不支持</td>
<td>支持8位透明度（256阶alphat透明）</td>
</tr>
</tbody></table>
<h4 id="PNG-索引透明和Alpha透明"><a href="#PNG-索引透明和Alpha透明" class="headerlink" title="PNG 索引透明和Alpha透明"></a>PNG 索引透明和Alpha透明</h4><p>索引透明只能表示透明和不透明，产生体积相对较小的，不过容易产生杂边锯齿。<br>Alpha透明是一个8位的灰度通道，该通道用256级灰度来记录图像中的透明度信息，定义透明、不透明和半透明区域，支持全透明和半透明。</p>
<blockquote>
<p>参考：<a href="https://www.cnblogs.com/peunzhang/archive/2013/05/30/3050394.html#png1" target="_blank" rel="noopener">https://www.cnblogs.com/peunzhang/archive/2013/05/30/3050394.html#png1</a></p>
</blockquote>
<h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><p>1、小的LOGO,颜色简单且对比强烈图片和背景<br>2、颜色简单、对比度强的透明小图<br>3、颜色很少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片<br>4、用于页面结构的基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://zh.wikipedia.org/wiki/PNG" target="_blank" rel="noopener">PNG特性、对比JPEG、GIF差异</a><br><a href="https://github.com/ericdum/mujiang.info/issues/4" target="_blank" rel="noopener">png8支持透明通道（一）</a><br><a href="http://www.alloyteam.com/2017/06/the-story-of-png-deinterlacing-algorithm/" target="_blank" rel="noopener">png逐行扫描和隔行扫描说明</a><br><a href="https://gameinstitute.qq.com/community/detail/107564" target="_blank" rel="noopener">深入解析png图片解码技术</a><br><a href="https://zhuanlan.zhihu.com/p/22496580" target="_blank" rel="noopener">图片格式中的小较真</a><br><a href="https://www.jianshu.com/p/ab96bf20f90e" target="_blank" rel="noopener">JPG？GIF？PNG？前端如何选择图片格式？</a><br><a href="https://zhuanlan.zhihu.com/p/41498458" target="_blank" rel="noopener">网站建设中使用的png和jpg两种图片格式都有哪些特点和区别</a>   </p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>前端</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>图片有关工具和网站</title>
    <url>/2020/02/22/%E5%9B%BE%E7%89%87/%E5%9B%BE%E5%83%8F%E6%9C%89%E5%85%B3%E5%B7%A5%E5%85%B7%E5%92%8C%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="压缩网站和软件工具"><a href="#压缩网站和软件工具" class="headerlink" title="压缩网站和软件工具"></a>压缩网站和软件工具</h5><blockquote>
<p>参考: <a href="https://blog.ibireme.com/2015/11/02/mobile_image_benchmark/#png" target="_blank" rel="noopener">https://blog.ibireme.com/2015/11/02/mobile_image_benchmark/#png</a></p>
</blockquote>
<h6 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h6><p><a href="https://pmt.sourceforge.io/pngcrush/" target="_blank" rel="noopener">Xcode自带PNG压缩工具pnycrush</a><br><a href="https://pngquant.org/" target="_blank" rel="noopener">pngquant</a><br><a href="https://tinify.cn/" target="_blank" rel="noopener">智能PNG和JPEG图片压缩</a><br><a href="https://zhitu.isux.us/" target="_blank" rel="noopener">腾讯智图</a><br><a href="http://www.bejson.com/convert/image_to_svg/" target="_blank" rel="noopener">在线jpg,png图片转SVG工具</a><br><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里矢量图标库</a><br><a href="https://www.favicon-generator.org/" target="_blank" rel="noopener">Favicon &amp; App Icon Generator</a><br><a href="http://www.uugai.com/" target="_blank" rel="noopener">完全免费的LOGO在线设计制作工具</a><br><a href="https://github.com/SamHerbert/SVG-Loaders" target="_blank" rel="noopener">SVG进度条</a></p>
<a id="more"></a>

<h6 id="软件工具"><a href="#软件工具" class="headerlink" title="软件工具"></a>软件工具</h6><p><a href="https://imageoptim.com/mac" target="_blank" rel="noopener">ImageOptim</a><br><a href="https://imagemagick.org/index.php" target="_blank" rel="noopener">imagemgick</a><br><a href="https://pmt.sourceforge.io/pngcrush/" target="_blank" rel="noopener">Pngcrush</a><br><a href="https://github.com/sharkdp/hexyl" target="_blank" rel="noopener">查看二进制工具-hexyl</a><br><a href="https://ridiculousfish.com/hexfiend/" target="_blank" rel="noopener">查看二进制工具-HexFiend</a><br><a href="https://sourceforge.net/projects/apngasm/" target="_blank" rel="noopener">创建APNG图片工具</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pngcrush 是 Xcode 自带的 PNG 压缩工具，相对于设计师用 Photoshop 生成的图片来说，它能取得不错的压缩效果。</span><br><span class="line">ImageOptim 则更进一步，对每张图用多种缩算法进行比对，选择压缩比更高的结果，进一步缩小了文件体积。</span><br><span class="line">TinyPNG.com 相对于其他工具来说，压缩比高得不像话。它启用了类似 GIF 那样的颜色索引表对 PNG 进行压缩，所以会导致颜色丰富的图片丢失掉一部分细节。如果使用 TinyPNG 的话，最好在压缩完成后让设计师看一下颜色效果是否可以接受。</span><br></pre></td></tr></table></figure>

<h5 id="其他相关"><a href="#其他相关" class="headerlink" title="其他相关"></a>其他相关</h5><p>1、<a href="https://caniuse.com/" target="_blank" rel="noopener">图片格式浏览器支持情况网站</a>   </p>
<h5 id="书籍"><a href="#书籍" class="headerlink" title="书籍:"></a>书籍:</h5><p>《探索图像文件的奥秘》</p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>前端</tag>
        <tag>图像</tag>
      </tags>
  </entry>
  <entry>
    <title>JEPG、PNG、WEBP、GIF、SVG的学习使用-WEBP等</title>
    <url>/2020/02/24/%E5%9B%BE%E7%89%87/JEPG%E3%80%81PNG%E3%80%81WEBP%E3%80%81GIF%E3%80%81SVG%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8-WEBP%E7%AD%89/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h4 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h4><p>&emsp; &emsp;Gif一个比较古老的图片格式。图片交换格式(GIF， Graphics Interchange Format)是一种位图图形文件格式，采用8位色最多256种索引颜色调色板描绘图像。GIF是一种压缩文档，使用LZW算法压缩算法进行编码，同时也有效减少了图像文件在网络上传输的时间。<br>&emsp; &emsp;近些年动态的表情包的大火，使得Gif图像重新派上用场。其支持多帧图片，从而实现动画效果（即帧动画），同时也可以设置透明色产生透明图片的。&emsp; 但是由于之前专利的原因，Gif的静态图像功能被PNG给替代了，目前Gif常用于颜色简单的动画上。<br>&emsp; &emsp;Gift也是因为最多支持8位256色，无法支持更加丰富色彩图片。Gift存在色阶过渡糟糕，图片具有颗粒感，不支持Alpha透明通道，边缘有杂边。在静态图像优势没有PNG效果好。</p>
<a id="more"></a>

<h4 id="APNG"><a href="#APNG" class="headerlink" title="APNG"></a>APNG</h4><p>&emsp; &emsp;APNG(Animated Portable Network Graphics)格式是PNG位图格式扩展，但未获得PNG组织官方认可。其扩展方式类似GIF 89a,仍对原版PNG保持向下兼容。APNG第一帧为标准PNG图像，剩余的动画和帧速等数据放在PNG扩展数据块上。因此支持原版PNG的软件会正确显示第一帧。<br>&emsp; &emsp;APNG的特点，支持24位真彩色图片，同时也支持 8位Alpha透明通道。其也能向下兼容PNG图像。<br><strong>APNG和GIF对比差异:</strong><br><img src="/images/GIF%E5%92%8CAPNG%E7%9A%84%E5%B7%AE%E5%BC%82.png" alt="GIF和APNG的差异"></p>
<blockquote>
<p>APNG实现原理参考：<a href="https://aotu.io/notes/2016/11/07/apng/index.html#APNG%20%E7%9A%84%E7%BB%84%E6%88%90" target="_blank" rel="noopener">APNG实现组成</a></p>
</blockquote>
<h4 id="WebP"><a href="#WebP" class="headerlink" title="WebP"></a>WebP</h4><p>WebP标准是Google定制的，迄今为止也只有Google发布的libwebp实现了该的编解码。Webp提供了有损压缩与无损压缩（可逆压缩）的图片文件格式,也支持静态模式图像和动态模式图像。其是8位ARGB四通道描绘图像。  </p>
<blockquote>
<p><a href="https://developers.google.com/speed/webp" target="_blank" rel="noopener">官网介绍</a></p>
</blockquote>
<h4 id="BPG"><a href="#BPG" class="headerlink" title="BPG"></a>BPG</h4><p>BPG(Better Portable Graphics) 是一种新的图片格式。其主要目的是为了替代JPEG图像，并且质量和文件大小做得更好。</p>
<blockquote>
<p><a href="https://bellard.org/bpg/" target="_blank" rel="noopener">官网介绍</a></p>
</blockquote>
<h4 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h4><p>&emsp; &emsp;SVG即可缩放矢量图形 (Scalable Vector Graphics)的简称, 是一种用来描述二维矢量图形的XML标记语言. SVG图形不依赖于分辨率, 因此图形不会因为放大而显示出明显的锯齿边缘.<br>&emsp; &emsp;SVG主要用来显示矢量图，例如一些形状、线和点的组合，所以目前很多主流的图标库都提供SVG格式的文件。</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://blog.ibireme.com/2015/11/02/mobile_image_benchmark/" target="_blank" rel="noopener">移动端图片格式调研</a><br><a href="https://aotu.io/notes/2016/11/07/apng/index.html" target="_blank" rel="noopener">APNG及动态图像各类区别</a><br><a href="https://www.jianshu.com/p/261cd13757ce" target="_blank" rel="noopener">图像压缩技术：选择正确的图片格式</a><br><a href="https://www.geekhub.cn/a/1780.html" target="_blank" rel="noopener">动态图片技术 — 历史、格式与性能</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>前端</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建github-bolg总结</title>
    <url>/2020/06/25/%E6%9C%AA%E5%AE%8C%E6%88%90/hexo%E6%90%AD%E5%BB%BAgithub-bolg%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a><br><a href="https://zhuanlan.zhihu.com/p/31411755" target="_blank" rel="noopener">修改hexo sitemap 生成插件中的链接模板</a><br><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/content/" target="_blank" rel="noopener">Markdown - 简单的世界</a></p>
]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Logger的学习与源码解析</title>
    <url>/2020/08/16/%E6%9C%AA%E5%AE%8C%E6%88%90/Logger%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h3><h3 id="slf4j日志门面如何一统天下"><a href="#slf4j日志门面如何一统天下" class="headerlink" title="slf4j日志门面如何一统天下"></a>slf4j日志门面如何一统天下</h3><h3 id="slf4j-框架思考"><a href="#slf4j-框架思考" class="headerlink" title="slf4j 框架思考"></a>slf4j 框架思考</h3><h3 id="slf4j-源码解析"><a href="#slf4j-源码解析" class="headerlink" title="slf4j 源码解析"></a>slf4j 源码解析</h3><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.cnblogs.com/youzhibing/p/6849843.html" target="_blank" rel="noopener">从源码来理解slf4j的绑定，以及logback对配置文件的加载</a><br><a href="https://www.jianshu.com/p/9916de96cb99" target="_blank" rel="noopener">Java 日志框架解析：设计模式、性能</a><br><a href="http://ifeve.com/disruptor/" target="_blank" rel="noopener">并发框架Disruptor译文</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Charles使用细节说明</title>
    <url>/2020/05/17/%E5%B0%8F%E6%8A%80%E5%B7%A7/Charles%E4%BD%BF%E7%94%A8%E7%BB%86%E8%8A%82%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<p>Charles是一款优秀HTTPS/HTTP网络代理工具</p>
<blockquote>
<p><a href="https://www.charlesproxy.com" target="_blank" rel="noopener">Charles官网地址</a><br><a href="https://xclient.info/s/charles.html" target="_blank" rel="noopener">Charles下载地址</a></p>
</blockquote>
<h4 id="Charles-gt-Map-Remote-Setting-gt-Edit-Mapping中preserve-host-in-header-fields的使用"><a href="#Charles-gt-Map-Remote-Setting-gt-Edit-Mapping中preserve-host-in-header-fields的使用" class="headerlink" title="Charles -&gt; Map Remote Setting -&gt; Edit Mapping中preserve host in header fields的使用"></a>Charles -&gt; Map Remote Setting -&gt; Edit Mapping中preserve host in header fields的使用</h4><p><img src="/images/Charles%E4%BF%9D%E6%8A%A4HostHeaderfields%E4%B8%80.png" alt="Charles 不勾选">  </p>
<p><img src="/images/Charles%E4%BF%9D%E6%8A%A4HostHeaderFileds%E4%BA%8C.png" alt="Charles 勾选"></p>
]]></content>
  </entry>
  <entry>
    <title>互联网项目管理实践精粹（一）</title>
    <url>/2020/09/08/%E8%AF%BB%E4%B9%A6/%E4%BA%92%E8%81%94%E7%BD%91%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%AE%9E%E8%B7%B5%E7%B2%BE%E7%B2%B9%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="项目经理"><a href="#项目经理" class="headerlink" title="项目经理"></a>项目经理</h3><blockquote>
<p>项目经理角色是组织战略与项目团队之间联系的纽带，也是确保项目团队工作价值并对项目结果负责和主要负责人。</p>
</blockquote>
<h4 id="核心责任"><a href="#核心责任" class="headerlink" title="核心责任"></a>核心责任</h4><ul>
<li><p>管理维护项目待办事项列表，确保项目团队明晰列表内容及产品需求优先级；</p>
</li>
<li><p>指导和引导项目团队按照标准制度流程，高效地进行项目设计、开发与实现；</p>
</li>
<li><p>多项目的全程项目生命周期管理，确保项目团队各成员了解的信息真实对等；</p>
</li>
<li><p>整合协调公司内外部项目资源，扫清障碍、打通经脉，高效地推动推动项目落地；</p>
</li>
<li><p>参与组织级项目管理体系建设，提升项目管理能力，激发项目团队工作热情；</p>
</li>
<li><p>合理安排项目资源，制订并执行项目计划，管理项目从立项到上线的全部过程；</p>
</li>
<li><p>及时发现项目中可能存在的风险并提前预警，制订项目风险应对和应急方案；</p>
</li>
<li><p>与各职能部门高效沟通，快速推动项目问题和难点的解决，并定期总结汇报；</p>
</li>
<li><p>研究并推广应用先进的互联网项目管理工具，促进项目管理信息化和自动化。</p>
<a id="more"></a>

</li>
</ul>
<h4 id="如何了解某个职位责任？"><a href="#如何了解某个职位责任？" class="headerlink" title="如何了解某个职位责任？"></a>如何了解某个职位责任？</h4><ol>
<li>这个职位具体扮演角色包括哪些核心职责？</li>
<li>如果想要担任这个角色需要哪些认知资格？</li>
<li>公司中其他角色和这个角色有哪些关联和依赖？</li>
<li>这个角色隶属于公司哪个部门，以及该部门是如何运作的？</li>
<li>设立这个角色的公司隶属于哪个行业？通常都是什么规模类型？</li>
<li>这个行业的发展现状和未来前景如何？有哪些比较知名公司</li>
</ol>
]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>CPU架构学习</title>
    <url>/2020/05/27/%E6%9C%AA%E5%AE%8C%E6%88%90/CPU%E6%9E%B6%E6%9E%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<p>对于目前市面CPU架构拆分，命令上理解。i386<br><a href="https://nginx.org/en/linux_packages.html" target="_blank" rel="noopener">https://nginx.org/en/linux_packages.html</a><br><a href="https://github.com/xtaci/kcptun/releases" target="_blank" rel="noopener">https://github.com/xtaci/kcptun/releases</a></p>
<ul>
<li><p><a href="https://zhuanlan.zhihu.com/p/81472964" target="_blank" rel="noopener">CPU架构</a>  arm  x86  x86_64  ppc64</p>
</li>
<li><p><a href="https://wiki.centos.org/SpecialInterestGroup/AltArch/armhfp" target="_blank" rel="noopener">AltarchCentos学习</a></p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>IDEA技巧、IDEA经验分享、IDEA学习、IDEA探索</title>
    <url>/2019/02/12/%E5%B0%8F%E6%8A%80%E5%B7%A7/IDEA%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a><br><strong>* 提供IDEA使用小技巧 *</strong></p>
<blockquote>
<p>推荐一些本人亲身尝试，在实际开发中比较实用的小技巧，可以大大提高开发效率。</p>
</blockquote>
<h5 id="IDEA左侧显示打开代码文件和资源文件"><a href="#IDEA左侧显示打开代码文件和资源文件" class="headerlink" title="IDEA左侧显示打开代码文件和资源文件"></a>IDEA左侧显示打开代码文件和资源文件</h5><blockquote>
<p>应用场景:默认IDEA的代码文件的Tab放在代码区的上方。但是实际开发，我们经常打开很多代码文件，左侧显示整体显示，可以提高管理打开代码文件。</p>
</blockquote>
<h6 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h6><p><img src="/images/IDEA%E5%B7%A6%E4%BE%A7%E6%98%BE%E7%A4%BA%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6%E6%88%AA%E5%9B%BE.jpeg" alt="IDEA左侧显示打开代码文件截图"></p>
<a id="more"></a>
<h6 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤:"></a>操作步骤:</h6><p><img src="/images/IDEA%E5%B7%A6%E4%BE%A7%E6%98%BE%E7%A4%BA%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%88%AA%E5%9B%BE.jpeg" alt="IDEA左侧显示打开代码文件操作截图"></p>
<h5 id="IDEA多个模块同名分支统一切换-（Multi-root-same-name-brances-change）"><a href="#IDEA多个模块同名分支统一切换-（Multi-root-same-name-brances-change）" class="headerlink" title="IDEA多个模块同名分支统一切换 （Multi-root same name brances change）"></a>IDEA多个模块同名分支统一切换 （Multi-root same name brances change）</h5><blockquote>
<p>应用场景:默认IDEA的分支操作:模块分支统一操作(Common Local Branches)和单模块分支操作(Local Branches)。 对于某个模块同名的分支的处理很难处理。 (类似问题:<a href="https://stackoverflow.com/questions/13797331/intellij-switching-between-multiple-git-local-branches" target="_blank" rel="noopener">https://stackoverflow.com/questions/13797331/intellij-switching-between-multiple-git-local-branches</a>)</p>
</blockquote>
<p>灵感来自这篇文章:<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000135790-Task-Management-does-not-respect-Execute-branch-operations-on-all-roots-setting" target="_blank" rel="noopener">Task Management does not respect “Execute branch operations on all roots” setting</a></p>
<h6 id="操作步骤-1"><a href="#操作步骤-1" class="headerlink" title="操作步骤"></a>操作步骤</h6><p>Click “Tools” &gt; “Tasks &amp; Contexts” &gt; “Open Task”</p>
<p><img src="/images/IDEA%E5%BC%80%E5%90%AF%E6%89%80%E6%9C%89%E6%A0%B9%E4%B8%8A%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C.jpeg" alt="IDEA开启所有根上分支操作"></p>
<p><img src="/images/IDEATask%E7%9A%84%E4%BD%8D%E7%BD%AE.jpeg" alt="IDEATask的位置"></p>
<p><img src="/images/IDEA%E7%9A%84Task%E6%93%8D%E4%BD%9C.jpeg" alt="IDEA的Task操作"></p>
<h5 id="IDEA的编辑区不换行操作"><a href="#IDEA的编辑区不换行操作" class="headerlink" title="IDEA的编辑区不换行操作"></a>IDEA的编辑区不换行操作</h5><p><img src="/images/IDEA%E4%B8%8D%E6%8D%A2%E8%A1%8C%E6%93%8D%E4%BD%9C.jpg" alt="IDEA不换行操作"></p>
<h5 id="IDEA的Commit-Changes显示提交的分支操作"><a href="#IDEA的Commit-Changes显示提交的分支操作" class="headerlink" title="IDEA的Commit Changes显示提交的分支操作"></a>IDEA的Commit Changes显示提交的分支操作</h5><p><img src="/images/IDEA%E6%8F%90%E4%BA%A4%E5%8F%98%E5%8C%96%E6%98%BE%E7%A4%BA%E5%88%86%E6%94%AF%E5%90%8D.jpg" alt="IDEA提交改变显示分支名"></p>
<h5 id="IDEA设置serialVersionUID"><a href="#IDEA设置serialVersionUID" class="headerlink" title="IDEA设置serialVersionUID"></a>IDEA设置serialVersionUID</h5><p><img src="/images/IDEA%E7%9A%84%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BAserialVersionUID.jpg" alt="IDEA设置serialVersionUID"></p>
<h5 id="IDEA的翻译插件"><a href="#IDEA的翻译插件" class="headerlink" title="IDEA的翻译插件"></a>IDEA的翻译插件</h5><p>第一步安装插件：<br><img src="/images/Translation%E6%8F%92%E4%BB%B6%E4%B8%8B%E8%BD%BD.jpg" alt="Translation 插件下载"><br>第二步完毕后显示位置<br><img src="/images/Translation%E6%8F%92%E4%BB%B6%E6%98%BE%E7%A4%BA%E4%BD%8D%E7%BD%AE.jpg" alt="Translation 插件显示位置"><br>第三步设置插件选项<br>正则描述: <code>(@[a-z]+|/|\*|\{|\}|\#|(&lt;[/a-z]+&gt;))</code><br><img src="/images/Translation%E6%8F%92%E4%BB%B6%E8%AE%BE%E7%BD%AE.jpg" alt="Translation 插件设置"></p>
<h5 id="IDEA-高效将远程分支变成本地分支"><a href="#IDEA-高效将远程分支变成本地分支" class="headerlink" title="IDEA 高效将远程分支变成本地分支"></a>IDEA 高效将远程分支变成本地分支</h5><blockquote>
<p>将分支名称一致的多个项目远程分支变成对应项目本地分支操作<br><img src="/images/%E5%B0%86%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E5%8F%98%E6%88%90%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF.png" alt="将远程分支变成本地分支"></p>
</blockquote>
]]></content>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>人人都该懂点产品思维（一）</title>
    <url>/2020/04/25/%E8%AF%BB%E4%B9%A6/%E4%BA%BA%E4%BA%BA%E9%83%BD%E8%AF%A5%E6%87%82%E7%82%B9%E4%BA%A7%E5%93%81%E6%80%9D%E7%BB%B4%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="推荐语"><a href="#推荐语" class="headerlink" title="推荐语"></a>推荐语</h3><p>&emsp;&emsp;本书以生动的笔触，以场景代入的方法，从是什么、为什么、怎么样介绍了一名产品经理的必备素质以及专业技能，对竞品分析、A/B测试、数据分析、PRD撰写、埋点、搜索、推送等做了深入阐述，每一部分都既有理论说明，又有实例分析，深入浅出，面面俱到。此外，还指出了在做好产品经理这一角色时必须具备的职业能力以及技巧，如关注APP榜单、高效会议、跟进进度，甚至专业邮件撰写方法。总结出来的方法论，如六步法：用、问、数、比、溯、试，非常精炼又极其其实用，对实际工作很有指导作用。</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="17页"><a href="#17页" class="headerlink" title="17页"></a>17页</h4><p>&emsp;&emsp;转载一段看来的关于价值投资的判断，我觉得同样适用于个人的职业选择：</p>
<ul>
<li>这是不是一家全方位领先竞争者的公司？（现在）</li>
<li>这是不是一个快速增长、有着清晰增长路线图的公司？（未来）</li>
<li>这是不是总体上在你的认知范围内最佳选择？（有效前沿）</li>
</ul>
<h3 id="第一章："><a href="#第一章：" class="headerlink" title="第一章："></a>第一章：</h3><h4 id="005页"><a href="#005页" class="headerlink" title="005页"></a>005页</h4><p>&emsp;&emsp;对于没有丰富经验的产品小白而言，由于没有负责过大项目，做的很多事情都偏向于执行，所以面试中并不会过多纠结过往的项目（行业认知），更多考查的是解决问题的思路、遇到挑战时的应对和分析。对于问题的回答并不要求面面俱到，而是希望在有限时间里，应试者能够展现出自己是如何拆解问题、做重要优先级划分的，并争取做到逻辑自洽。</p>
<h4 id="008页"><a href="#008页" class="headerlink" title="008页"></a>008页</h4><p>&emsp;&emsp;这款App核心卖点在于实时美颜，调研相机的同时，就在进行美白和瘦脸的操作，用户就不需要拍照后在P图了。<strong>把两步变成一步，路径的缩短就带来了产品价值</strong>。</p>
<p>&emsp;&emsp;作为产品经理，需要对市场保持足够的敏感。有哪些新的、热的应用，就算不是我们的竞品领域，同样也需要关注。<strong>他山之石可以攻玉，它们或许能够给我们带来不一样的想法</strong></p>
<h4 id="059页"><a href="#059页" class="headerlink" title="059页"></a>059页</h4><p>&emsp;&emsp;对于一个新手产品经理来说，先做人，再做事；请先做一个称职的职场新人，再来着手产品经理的工作。<br>&emsp;&emsp;能力固能是需要培养，互信更是需哟啊培养的。对于职场新人来说，只有真正赢得直属领导和团队的信任，才能得到更多项目历练的机会，进而有培养能力一展拳脚的可能性。那如何建立互信呢？不是喝酒吃饭套交情，这里是职场，请用自己的产出说话。</p>
<blockquote>
<p>自己理解：职场中信任是特别重要。刚才公司那会听到同事在大会上说感谢公司领导信任。当时没懂为什么要着重说明这件事情，后来渐渐明白我自己所做的每一件事情都是领导对自己信任和对自己能力认可。如果没有这些的话，可能自己只会停留在原地。</p>
</blockquote>
<h4 id="060页"><a href="#060页" class="headerlink" title="060页"></a>060页</h4><p>&emsp;&emsp;一种情况是在任务碰到困难，请及时向领导和资深同时求助，不要做闷葫芦自己钻研。及时请求帮助没什么不好意思的，作为新人，不懂不会是正常的，不懂装懂才是可怕的。如果因为自己的羞恼使得产出延迟，进而拖累了整个团队进度，那才是该不好意思的。我们常会碰到这样的新人，在项目的最后期限快到时询问他，才反馈说因为碰到了问题解决不了而延期，这样的情况才让领导和团队疯狂。    </p>
]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac常见问题和技巧</title>
    <url>/2020/05/17/%E5%B0%8F%E6%8A%80%E5%B7%A7/Mac%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%92%8C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h5 id="常见技巧"><a href="#常见技巧" class="headerlink" title="常见技巧"></a>常见技巧</h5><h5 id="优秀软件"><a href="#优秀软件" class="headerlink" title="优秀软件"></a>优秀软件</h5><h6 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h6><p>新版MacOs Catalina推荐默认使用命令脚本zsh，而不是bash。<br>对于遇到 no matches的提示解决方案</p>
<blockquote>
<p>参考来源:<a href="https://www.bartbusschots.ie/s/2019/06/12/bash-to-zsh-file-globbing-and-no-matches-found-errors/" target="_blank" rel="noopener">Bash to Zsh: File Globbing and ‘no matches found’ Errors</a></p>
</blockquote>
<p>在 ~/.zshrc 文件上添加：<br><code># only throw errors when no globs match anything</code><br><code>setopt CSH_NULL_GLOB</code></p>
<hr>
<p>新版MacOs Catalina增加一个硬盘上两个卷(Macintosh HD、 Macintosh HD Data)，并且有个卷是只读的(Macintosh HD)。System Integrity Protection 系统保护根路径变成只读卷（命令: csrutil）。</p>
<blockquote>
<p><a href="https://sspai.com/post/57052" target="_blank" rel="noopener">当 Mac 升级到 Catalina 时，苹果在硬盘里施了点魔法</a></p>
</blockquote>
<p>在只读卷新建文件/文件夹、在根目录创建data文件解决方案</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_42619248/article/details/102503825" target="_blank" rel="noopener">可以通过在根路径下建立软连接连接到其他可读写的卷上，解决/data的问题</a></p>
</blockquote>
<ol>
<li>关闭System Integrity Protection的只读卷保护</li>
</ol>
<ul>
<li>重启苹果电脑</li>
<li>重启过程中，长按住Command-R键重启进入恢复模式</li>
<li>进入恢复模式，在Utilities菜单项中选择Terminal</li>
<li>在Terminal控制台里面输入 <code>csrutil disable</code> 关闭系统保护</li>
<li>输入<code>csrutil status</code>，查看系统保护状态</li>
</ul>
<ol start="2">
<li>在恢复模式下，重启电脑<blockquote>
<p>有时执行下面步骤，仍然出现read only system的提醒是可以<code>sudo mount -uw /</code> 强制重新挂载硬盘来解决</p>
</blockquote>
</li>
</ol>
<ul>
<li>重启电脑成功后，就可以直接操作根目录路径文件、文件夹</li>
<li>【建议】在<code>Macintosh HD Data</code>建立好文件夹、文件，然后在<code>Macintosh HD</code>创建软连接/硬链接到文件夹、文件</li>
</ul>
<ol start="3">
<li>恢复System Integrity Protection的只读卷保护</li>
</ol>
<ul>
<li>重启苹果电脑</li>
<li>重启过程中，长按住Command-R键重启进入恢复模式</li>
<li>进入恢复模式，在Utilities菜单项中选择Terminal</li>
<li>在Terminal控制台里面输入 <code>csrutil enable</code> 开启系统保护</li>
<li>输入<code>csrutil status</code>，查看系统保护状态</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>人人都该懂点产品思维（二）</title>
    <url>/2020/06/26/%E8%AF%BB%E4%B9%A6/%E4%BA%BA%E4%BA%BA%E9%83%BD%E8%AF%A5%E6%87%82%E7%82%B9%E4%BA%A7%E5%93%81%E6%80%9D%E7%BB%B4%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="第二章-初学乍练-改进已有功能点"><a href="#第二章-初学乍练-改进已有功能点" class="headerlink" title="第二章 初学乍练: 改进已有功能点"></a>第二章 初学乍练: 改进已有功能点</h3><h4 id="74页"><a href="#74页" class="headerlink" title="74页"></a>74页</h4><p>&emsp;&emsp;有价值的用户是指最终能够给公司带来收入的用户，我们追求这部分人群的长期留存就是为了保证这份收入的稳定性和可持续性。<br>&emsp;&emsp;在价值的定义上，根据具体付费方不同，可以大致分为C端收费、B端收费两类。在不同的产品中，其盈利方式和有价值用户的定义有所不同。</p>
<ul>
<li>信息流产品为例，有价值的用户可能是那些点击信息流广告的用户;</li>
<li>以游戏产品为例，有价值的用户可能是付费的氪金玩家;</li>
<li>以职场社交产品为例，有机质的用可能是活跃在这一产品上的、可被招聘和挖掘的职业用户。<br>&emsp;&emsp;无论收益途径如何，用户价值都会被归结到特定渠道的生命周期价值LTV(Life Time Value)上，无论是用户产品还是商业产品，都应该聚焦提升用户的生命周期价值上。</li>
</ul>
<blockquote>
<p>渗透率=现有需求量/潜在需求量</p>
</blockquote>
<h4 id="80页"><a href="#80页" class="headerlink" title="80页"></a>80页</h4><p>&emsp;&emsp;现在早就不是产品经理拍脑袋决定上线时代了，我们需要更为完善的A/B测试来验证我们的判断</p>
<h4 id="83页"><a href="#83页" class="headerlink" title="83页"></a>83页</h4><p>&emsp;&emsp;我们在实验中常用的几个基础用户特征维度有：新老用户（功能的深度用户和浅度用户，一般升级频率比较高、活跃度比较高的用户可能更容易尝鲜，也更容易推高部分数据）、系统类型（如Android和Ios平台之分，Ios内部又有不同手机厂商之分，特定平台和手机厂商的用户可能表现出更好的留存或付费意愿等）用户、男女用户等。</p>
]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>非暴力沟通</title>
    <url>/2020/07/19/%E8%AF%BB%E4%B9%A6/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="区分观察与评论"><a href="#区分观察与评论" class="headerlink" title="区分观察与评论"></a>区分观察与评论</h3><h4 id="027页"><a href="#027页" class="headerlink" title="027页"></a>027页</h4><p>以下这首歌反映了观察与评论的区别。<br>我未见过懒惰的人;<br>我见过<br>有个人有时在下午睡觉，<br>在雨天不出门，<br>但他不是个懒惰的人。<br>请在说我胡言乱语之前，<br>想一想，他是个懒惰的人，还是<br>他的行为被我们称为“懒惰”？<br>我从未见过愚蠢的孩子；<br>我见过有个孩子有时做的事<br>我不理解<br>或不接受我的吩咐做事情；<br>但他不是愚蠢的孩子。<br>请在你说他愚蠢之前，<br>想一想，他是个愚蠢的孩子，还是<br>他懂的事情与你不一样？    </p>
<p>我使劲看了又看<br>但从未看到厨师；<br>我看到有个人把食物<br>调配在一起，<br>打起了火，<br>。。。。。。。。</p>
]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title>字符集、字符编码、字符排序方式</title>
    <url>/2020/08/15/%E5%AD%97%E7%AC%A6%E9%9B%86%E3%80%81%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h3><h3 id="基本学习（可以跳过）"><a href="#基本学习（可以跳过）" class="headerlink" title="基本学习（可以跳过）"></a>基本学习（可以跳过）</h3><h4 id="Java-十进制-二进制-八进制-十六进制表示"><a href="#Java-十进制-二进制-八进制-十六进制表示" class="headerlink" title="Java 十进制 二进制  八进制 十六进制表示"></a>Java 十进制 二进制  八进制 十六进制表示</h4><p>二进制表示: <code>0b00101000</code>;  <code>0b</code>代表二进制。<br>八进制表示: <code>01234567</code>;     <code>0</code>代表八进制。<br>十六进制表示:<code>0x1a</code>;        <code>0x</code>代表十六进制。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int decimalInteger = 17;          // 十进制</span><br><span class="line">int binaryInteger = 0b10001;      // 二进制的17</span><br><span class="line">int octalInteger = 021;           // 八进制的17</span><br><span class="line">int hexadecimalInteger = 0x11;    // 十六进制的17</span><br></pre></td></tr></table></figure>

<h4 id="Java-进制转换"><a href="#Java-进制转换" class="headerlink" title="Java 进制转换"></a>Java 进制转换</h4><hr>
<p><strong>十进制变成二进制</strong><br>Integer.toBinaryString(19);<br>Long.toBinaryString(19);<br><strong>十进制变成八进制</strong><br>Integer.toOctalString(19);<br>Long.toOctalString(19);<br><strong>十进制变成十六进制</strong><br>Integer.toHexString(19);<br>Long.toHexString(19);  </p>
<hr>
<p><strong>数值型字符进制转换</strong>  </p>
<blockquote>
<p>Integer类、Long类</p>
</blockquote>
<p>Integer.parseInt(“1a”, 16);<br>Integer.parseInt(“13”, 8);<br>Integer.parseInt(“10”, 2);<br>Integer.valueOf(“1a”, 16);<br>Integer.valueOf(“13”, 8);<br>Integer.valueOf(“10”, 2);    </p>
<a id="more"></a>

<h3 id="正文前餐"><a href="#正文前餐" class="headerlink" title="正文前餐"></a>正文前餐</h3><p>在开始之前，作者想说明一个知识点。</p>
<ol>
<li>开发时使用charset。</li>
</ol>
<ul>
<li>无论是前端、客户端、后端开发，都接触到charset。</li>
<li>很多应用程序也需要去设置字符集，例如<code>mysql charset</code>， <code>http charset</code>，<code>tomcat charset</code><br>&emsp;&emsp;开发时使用charset，通常包含了字符集合(如:中简体文字符集合、英文字符集合)和字符编码二进制存储。<br>&emsp;&emsp;字符集规定了某类字符对应的二进制数值存放方式（编码），通过一个二进制数值 在某种字符集中寻找出对应代表的字符就是解码的过程。—– 引用<a href="http://kelvinleong.github.io/encoding/2015/09/15/Encoding-and-CharSets.html" target="_blank" rel="noopener">细说字符集(CharSet)和字符编码(Encoding)</a><br>&emsp;&emsp;按照惯例，字符集和字符编码是一样的，因为按照<code>一套的标准</code>来定义<code>要去收集哪些字符</code>和<code>将这些字符正确编码到一系列的代码单元（通常一个字符一个单元）</code>。由于历史叫法习惯，我们把将一组字符编码成一系列八位字节数据的编码系统会使用<code>字符集</code>这个术语来表示。 —–引用<a href="https://zh.wikipedia.org/wiki/Category:字符集" target="_blank" rel="noopener">wiki 字符集</a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JSP 设置charset</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">HTTP response ContentType设置charset</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="字符集-字符编码"><a href="#字符集-字符编码" class="headerlink" title="字符集|字符编码"></a>字符集|字符编码</h3><h4 id="基础概念介绍"><a href="#基础概念介绍" class="headerlink" title="基础概念介绍"></a>基础概念介绍</h4><p>&emsp;&emsp;<strong>字符</strong> 是一个信息单位，在计算机里面，一个中文汉字是一个字符，一个英文字母是一个字符，一个阿拉伯数字是一个字符，一个标点符号也是一个字符。   &emsp;&emsp;<strong>字符集</strong> 是字符组成的集合，通常以二维表的形式存在，二维表的内容和大小是由使用者的语言而定，是英语，是汉语，还是阿拉伯。     &emsp;&emsp;<strong>字符编码</strong> 是把字符集中的字符编码为特定的二进制数，以便在计算机中存储。编码方式一般就是对二维表的横纵坐标进行变换的算法。一般都比较简单，直接把横纵坐标拼一起就完事了，如<a href="https://zh.wikipedia.org/wiki/ASCII" target="_blank" rel="noopener">ASCII</a>。后来随着字符集的不断扩大，为了节省存储空间，才出现了各种各样的算法, utf-8，utf-16。&emsp;&emsp;<strong>字符集和字符编码</strong> 一般都是成对出现的，如ASCII、IOS-8859-1、GB2312、GBK，都是即表示了字符集又表示了对应的字符编码，<code>后续统称为编码(encode,常用于应用程序编码设置)或者 字符集(charset,常用于常用于开发)。</code> —- 引用摘要: <a href="https://www.jianshu.com/p/bd7a6c508c33" target="_blank" rel="noopener">字符，字符集，字符编码</a></p>
<h4 id="字符集、字符编码历史发展"><a href="#字符集、字符编码历史发展" class="headerlink" title="字符集、字符编码历史发展"></a>字符集、字符编码历史发展</h4><p>&emsp;&emsp;早期字符集发展较为独立，各个地区语言文字不一样，存在一定差异， 形成都有各类字符集。各类地区语言文字有时为了应对不同局势和计算机环境，也在不断改变原先字符集同时也改变了当前字符编码规则。后续计算机行业发展迅猛，开始统一全球字符集。</p>
<ul>
<li><p>耳熟能详，最早字符集<a href="https://zh.wikipedia.org/wiki/ASCII" target="_blank" rel="noopener">ASCII</a>(American Standard Code for Information Interchange, 美国信息交换标标准代码)。但是ASCII涵盖了现在基础概念“字符集”、“字符集编码”。ASCII中字符集指是拉丁字母、阿拉伯数字、英文字符及计算机不可显控制字符等，共计128个字符,使用一个字节存储(0x00 ~ 0x7f)。<br><img src="/images/ASCII%E5%AD%97%E7%AC%A6%E9%9B%86%E7%BC%96%E7%A0%81%E8%A1%A8.jpg" alt="ASCII字符集编码表.jpg"></p>
</li>
<li><p>后续发展诞生<a href="https://baike.baidu.com/item/ISO%2FIEC%208859/916777" target="_blank" rel="noopener">ISO/IEC 8859</a>标准各类字符集，但是这些字符集ASCII上进行差异性扩展的。其中也包含我们经常使用<code>latin1</code>(ASCII上增加西欧字符)。<br><img src="/images/latin-1%E5%AD%97%E7%AC%A6%E9%9B%86%E7%BC%96%E7%A0%81%E8%A1%A8.png" alt="latin-1字符集"></p>
</li>
<li><p>东亚地区地区由于字符数量较多，无法使用单字节编码字符集，开始使用双字节编码字符集、甚至是四个字节编码字符集。中文字符集编码表发展： ASCII -&gt; GB2312 -&gt; GBK -&gt; GB18030, 依次向前兼容，应用时代发展，拓展计算机上可以展示更多中文字符。 详见：<a href="https://zhuanlan.zhihu.com/p/46216008" target="_blank" rel="noopener">程序员必备：彻底弄懂常见的7种中文字符编码</a><br><img src="/images/%E5%87%A0%E7%A7%8D%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7.jpg" alt="几种中文编码的兼容性.jpg"></p>
</li>
<li><p>再进一步发展，出现IOS组织领衔<a href="https://zh.wikipedia.org/wiki/通用字符集" target="_blank" rel="noopener">UCS</a>和Unicode联盟领衔<a href="https://zh.wikipedia.org/wiki/Unicode" target="_blank" rel="noopener">Unicode</a>来统一全球多语言所有字符。后续两个组织合并成果，共同发展，不断统一Unicode字符集。目前每一个字符，都有一个Unicode值·码位值(码位|码点|<code>code point</code>)，表示是Unicode值的十六进制数的前面加上“U+”，例如“U+0041”代表字符“A”。</p>
</li>
</ul>
<h4 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h4><blockquote>
<p>抽象字符表、编码字符集、字符编码表、字符编码方案<br><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" target="_blank" rel="noopener">wiki 字符编码</a></p>
</blockquote>
<p>&emsp;&emsp;ASCII、GBK、GB18030、LATIN1等字符集将编码字符集和字符编码表是一样的，换句话将字符集编码表的值，不加额外换算，直接转化为二进制存储，编码字符集合字符编码表一样。如ASCII中A，十进制65，十六进制41，二进制01000001，直接将A的二进制存储。</p>
<p>&emsp;&emsp;Unicode字符集，该字符集使用4个字节（32位二进制）来表示，属于字符编码里面的编码字符集层次。Unicode的编码空间从U+0000到+10FFFF，共有1,112,064个码位（code point）可用来映射字符，其中从U+D800到U+DFFF之间的码位区段是永久保留不映射到Unicode字符。</p>
<h5 id="Unicode的具体编码方式-字符编码方案-·UTF-8"><a href="#Unicode的具体编码方式-字符编码方案-·UTF-8" class="headerlink" title="Unicode的具体编码方式(字符编码方案)·UTF-8"></a>Unicode的具体编码方式(字符编码方案)·UTF-8</h5><p>&emsp;&emsp;如果按照Unicode的码点(code point)的二进制直接存储的话，那么对于使用英文国家会造成大量存储空间浪费。因此为了避免这种情况出现，采用不同于码点(code point)的二进制的编码方案存储字符。基于这种情况应用而生有utf-8、utf-16、utf-32。但是目前广泛使用utf-8。<br>&emsp;&emsp;UTF-8(8-bit Unicode Transformation Format)是一种针对Unicode的可变长度字符编码（定长码），使用一至四个字节为每个字符编码。</p>
<table>
<thead>
<tr>
<th>Unicode范围</th>
<th>Unicode十六进制</th>
<th>UTF-8二进制编码格式</th>
<th>示例<br> <code>字符-&gt;unicode-&gt;unicode十六进制-&gt;unicode二进制-&gt;utf-8二进制-&gt; utf-8十六进制</code></th>
</tr>
</thead>
<tbody><tr>
<td>U+00 ~ U+7F</td>
<td>0x00 ~ 0x7F</td>
<td>0xxxxxxx</td>
<td>A -&gt; U+65 -&gt; 0x65 -&gt; 01000001 -&gt; 01000001 -&gt; 0x65</td>
</tr>
<tr>
<td>U+80 ~ U+07FF</td>
<td>0x80 ~ 0x07FF</td>
<td>110xxxxx 10xxxxxx</td>
<td>å -&gt; U+E5 -&gt; 0xE5 -&gt; 11100101 -&gt; 11000011 10100101 -&gt; 0xC3A5</td>
</tr>
<tr>
<td>U+0800 ~ U+FFFF</td>
<td>0x0800 ~ 0xFFFF</td>
<td>1110xxxx 10xxxxxx 10xxxxxx</td>
<td>严 -&gt; U+4E25 -&gt; 0x4E25 -&gt; 01001110 00100101 -&gt; 11100100 10111000 10100101 -&gt; 0xE4B8A5</td>
</tr>
<tr>
<td>U+100000 ~ U+10FFFF</td>
<td>0x100000 ~ 0x10FFFF</td>
<td>11110xxx 10xxxxxx 10xxxxxx10xxxxxx</td>
<td>😀 -&gt; U+1F600 -&gt; 0x1F40 -&gt; 00000001 11110110 00000000 -&gt; 11110000 10011111 10011000 10001010 -&gt; 0xF09F988A</td>
</tr>
</tbody></table>
<blockquote>
<p>UTF-8 的编码规则很简单，只有二条：<br>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的 Unicode 码。因此对于英语字母，UTF-8 编码和 ASCII 码是相同的。<br>2）对于n字节的符号（n &gt; 1），第一个字节的前n位都设为1，第n + 1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的 Unicode 码。<br>—摘要至<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" target="_blank" rel="noopener">字符编码笔记：ASCII，Unicode 和 UTF-8</a></p>
</blockquote>
<p>拓展: Java存储的</p>
<h5 id="Unicode的具体编码方式-字符编码方案-·UTF-16"><a href="#Unicode的具体编码方式-字符编码方案-·UTF-16" class="headerlink" title="Unicode的具体编码方式(字符编码方案)·UTF-16"></a>Unicode的具体编码方式(字符编码方案)·UTF-16</h5><blockquote>
<p><a href="https://juejin.im/entry/6844903480197382151" target="_blank" rel="noopener">今日 Unicode 字符集及其编码方式</a></p>
</blockquote>
<p>&emsp;&emsp;UTF-16是最早的Unicode字符集编码方式。<br>&emsp;&emsp;UTF-16是使用两个定长字节来表示Unicode的字符。但是两个字节只能表达65,536字符，无法完全表达所有Unicode的字符，后续使用四个字节直接来表达不在基本平面Unicode的字符。<br>&emsp;&emsp;在基本平面中，U+D800 ~ U+DBFF（1024个码点）这一码值范围被称为高代理码点，U+DC00 ~ U+DFFF（1024个码点）这一码值范围被称为低代理码点。这两个高代理码点后面紧接低代理码点便构成了一个代理对，它们代表了不在基本平面之中的1,048,576（1024 × 1024）个码点。</p>
<h4 id="JAVA开发应用"><a href="#JAVA开发应用" class="headerlink" title="JAVA开发应用"></a>JAVA开发应用</h4><h5 id="Java-编码的基础知识"><a href="#Java-编码的基础知识" class="headerlink" title="Java 编码的基础知识"></a>Java 编码的基础知识</h5><blockquote>
<p><a href="https://www.jianshu.com/p/3154a3424731" target="_blank" rel="noopener">Java 的 char 是两个字节, 如何存 UTF-8 的字符的</a>   </p>
</blockquote>
<p>Java的char是两个字节，使用UTF-16来表达Unicode的所有字符。对于Unicode的编码空间在U+0000 ~ U+FFFF的可以直接使用char来表示，但是对于Unicode的编码空间U+1FFFF ~ U+10FFFF使用UTF-16的高代理码点和低代理码点的两个char来标识。详见<a href="https://juejin.im/entry/6844903480197382151" target="_blank" rel="noopener">今日 Unicode 字符集及其编码方式</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        System.out.println(&quot;控制台输出字符编码方式:&quot; + Charset.defaultCharset().name());</span><br><span class="line">        System.out.println(&quot;16位Unicode字符严---------------&quot;);</span><br><span class="line">        char 严 = &apos;\u4e25&apos;;</span><br><span class="line">        System.out.println(&quot;严字符:&quot; + 严);</span><br><span class="line">        System.out.println(&quot;严字符Code Point:&quot; + Integer.toHexString((严 + &quot;&quot;).codePointAt(0)));</span><br><span class="line">        System.out.println(&quot;严的UTF-16表达:&quot; + Integer.toHexString(严));</span><br><span class="line">        System.out.println(&quot;严的UTF-16二进制表达:&quot; + Integer.toBinaryString(严));</span><br><span class="line">        System.out.println(&quot;严的UTF-16二进制的十六进制表示:&quot; + Integer.toHexString(Integer.parseInt(Integer.toBinaryString(严), 2)));</span><br><span class="line">        System.out.println(&quot;32位Unicode字符😀---------------&quot;);</span><br><span class="line">        final String smile = &quot;😀&quot;;// &quot;\uD83D\uDE00&quot;</span><br><span class="line">        final int smileUnicode = Integer.parseInt(&quot;1f600&quot;, 16);</span><br><span class="line">        System.out.println(&quot;😀的char字符数:&quot; + smile.length());</span><br><span class="line">        System.out.println(&quot;😀Unicode的char字符数:&quot; + Character.charCount(smileUnicode));</span><br><span class="line">        System.out.println(&quot;😀的高代理映射值:&quot; + Integer.toHexString(Character.highSurrogate(smileUnicode)));</span><br><span class="line">        System.out.println(&quot;😀的低代理映射值:&quot; + Integer.toHexString(Character.lowSurrogate(smileUnicode)));</span><br><span class="line">        System.out.println(&quot;😀的第一个Code point(即Unicode):&quot; + Integer.toHexString(smile.codePointAt(0)));</span><br><span class="line">        System.out.println(&quot;😀的第二个Code point:&quot; + Integer.toHexString(smile.codePointAt(1)));</span><br><span class="line">        System.out.println(&quot;😀的第一个字符存储值:&quot; + Integer.toHexString(smile.charAt(0)));</span><br><span class="line">        System.out.println(&quot;😀的第二个字符存储值:&quot; + Integer.toHexString(smile.charAt(1)));</span><br><span class="line">        System.out.println(&quot;---------------&quot;);</span><br><span class="line"></span><br><span class="line">//////////////////</span><br><span class="line">控制台输出字符编码方式:UTF-8</span><br><span class="line">16位Unicode字符严---------------</span><br><span class="line">严字符:严</span><br><span class="line">严字符Code Point:4e25</span><br><span class="line">严的UTF-16表达:4e25</span><br><span class="line">严的UTF-16二进制表达:100111000100101</span><br><span class="line">严的UTF-16二进制的十六进制表示:4e25</span><br><span class="line">32位Unicode字符😀---------------</span><br><span class="line">😀的char字符数:2</span><br><span class="line">😀Unicode的char字符数:2</span><br><span class="line">😀的高代理映射值:d83d</span><br><span class="line">😀的低代理映射值:de00</span><br><span class="line">😀的第一个Code point(即Unicode):1f600</span><br><span class="line">😀的第二个Code point:de00</span><br><span class="line">😀的第一个字符存储值:d83d</span><br><span class="line">😀的第二个字符存储值:de00</span><br><span class="line">---------------</span><br></pre></td></tr></table></figure>

<h5 id="Java不同场景编码转换"><a href="#Java不同场景编码转换" class="headerlink" title="Java不同场景编码转换"></a>Java不同场景编码转换</h5><blockquote>
<p><a href="https://developer.ibm.com/zh/technologies/java/articles/java-random-code-from-the-perspective-of-compilation/" target="_blank" rel="noopener">从外部编码的角度再议 Java 乱码问题</a><br><a href="https://yieldnull.com/blog/474f73c7ef9084989124ae6d8df3d8d173e867c8/#2-class" target="_blank" rel="noopener">Java字符串编码方式</a></p>
</blockquote>
<p>&emsp;&emsp;有些难度理解，输入和输出都是需要字符编码选择，JVM内部使用UTF-16编码存储在内存上，对于class文件的字符是Modified UTF-8进行编码存储的。JVM使用Modified UTF-8编码把class文件读取, 使用UTF-16编码格式进入内存。使用Unicode作为编码方式的转换。<br>J&emsp;&emsp;VM和OS之间输入输出需要进行编码转换。</p>
<ul>
<li><code>-Dfile.encoding=UTF-8</code>控制着 <code>Charset.defaultCharset()</code>的输出值<br>配置的是jvm输入流、输出流默认使用的编码/解码方式。</li>
<li><code>-Dsun.stdout.encoding=GBK</code> 配置的控制台标准输出流的编码方式。</li>
</ul>
<h4 id="字符排序"><a href="#字符排序" class="headerlink" title="字符排序"></a>字符排序</h4><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/147207165" target="_blank" rel="noopener">梳理 MySQL 字符集的相关概念</a><br><a href="https://segmentfault.com/a/1190000020339810" target="_blank" rel="noopener">MySQL字符集和排序规则</a><br><a href="https://dev.mysql.com/doc/refman/8.0/en/charset-mysql.html" target="_blank" rel="noopener">Character Sets and Collations in MySQL</a>     </p>
</blockquote>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>简单来说：Unicode、GBK和Big5码等就是编码的值（也就是术语“字符集”），而UTF-8、UTF-16、UTF32之类就是这个值的表现形式（即术语“编码格式”）。<br><strong>目前编码(encode,常用于应用程序编码设置)或者 字符集(charset,常用于常用于开发)。</strong></p>
<h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>&emsp;&emsp;Unicode的码点分高代理码点、低代理码点、非字符码点、保留码点、私有码点。Unicode的编码空间可以划分为17个平面（plane），每个平面包含216（65,536）个码位。17个平面的码位可表示为从U+xx0000到U+xxFFFF,其中xx表示十六进制值从00到10，共计17个平面。Unicode各个平面描述:</p>
<table>
<thead>
<tr>
<th>平面</th>
<th>平面位置</th>
<th>始末字符值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>基本平面，BMP</td>
<td>0</td>
<td>U+0000 - U+FFFF</td>
<td>绝大部分常用现代文字，如英文、中文、日语、法语等</td>
</tr>
<tr>
<td>补充平面，SMP</td>
<td>1</td>
<td>U+10000 - U+1FFFF</td>
<td>古代字体、音符、扑克牌、麻将、`表情emoji符号</td>
</tr>
<tr>
<td>表意补充，SIP</td>
<td>2</td>
<td>U+20000 - U+2FFFF</td>
<td>CJKV(中、日、韩、越)的增补文字，如《康熙字典》中非现代字</td>
</tr>
<tr>
<td>表意文字，TIP</td>
<td>3</td>
<td>U+30000 - U+3FFFF</td>
<td></td>
</tr>
<tr>
<td>未使用</td>
<td>4-13</td>
<td>U+40000 - U+DFFFF</td>
<td></td>
</tr>
<tr>
<td>特别用途补充平面，SSP</td>
<td>14</td>
<td>U+E0000 - U+EFFFF</td>
<td>特殊控制字符，比如字符变换选器</td>
</tr>
<tr>
<td>15号平面</td>
<td>15</td>
<td>U+F0000 - U+FFFFF</td>
<td>保留作为私人使用区（A区）    Private Use Area-A，简称PUA-A</td>
</tr>
<tr>
<td>16号平面</td>
<td>16</td>
<td>U+100000 - U+10FFFF</td>
<td>保留作为私人使用区（B区）Private Use Area-B，简称PUA-B</td>
</tr>
</tbody></table>
<p>Unicode 规范定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做”零宽度非换行空格”（zero width no-break space），用FEFF表示。这正好是两个字节，而且FF比FE大1。</p>
<table>
<thead>
<tr>
<th>对比</th>
<th>UTF-8</th>
<th>UTF-16</th>
<th>UTF-32</th>
<th>UCS-2</th>
<th>UCS-4</th>
</tr>
</thead>
<tbody><tr>
<td>编码空间</td>
<td>0-10FFFF</td>
<td>0-10FFFF</td>
<td>0-10FFFF</td>
<td>0-FFFF</td>
<td>0-7FFFFFFF</td>
</tr>
<tr>
<td>最少编码字节数(<code>码元·code unit</code>)</td>
<td>1</td>
<td>2</td>
<td>4</td>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td>最多编码字节数</td>
<td>4</td>
<td>4</td>
<td>4</td>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td>是否依赖字节序<br>(<code>Little endian·第二个字节在前/Big endian·第一字节在前</code>)</td>
<td>否</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
</tbody></table>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><code>优秀</code><br><a href="https://zhuanlan.zhihu.com/p/46216008" target="_blank" rel="noopener">程序员必备：彻底弄懂常见的7种中文字符编码</a><br><a href="http://cenalulu.github.io/linux/character-encoding/" target="_blank" rel="noopener">十分钟搞清字符集和字符编码</a><br><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" target="_blank" rel="noopener">字符编码笔记：ASCII，Unicode 和 UTF-8</a><br><a href="https://zhuanlan.zhihu.com/p/41203455" target="_blank" rel="noopener">从Unicode到emoji</a><br><a href="https://developer.ibm.com/zh/technologies/java/articles/java-random-code-from-the-perspective-of-compilation/" target="_blank" rel="noopener">从外部编码的角度再议 Java 乱码问题</a></p>
<hr>
<p><code>基础知识</code><br><a href="https://www.jianshu.com/p/c21282df7efb" target="_blank" rel="noopener">JAVA中进制相互转换</a><br><a href="http://www.chi2ko.com/tool/CJK.htm" target="_blank" rel="noopener">字体编辑中日韩汉字Unicode编码表</a><br><a href="https://www.unicode.org/emoji/charts/full-emoji-list.html" target="_blank" rel="noopener">Unicode 表情包</a><br><a href="http://www.unicode.org/charts/" target="_blank" rel="noopener">unicode 表</a><br><a href="https://github.com/zxh0/classpy" target="_blank" rel="noopener">Java class 文件查看器</a></p>
<hr>
<p><code>早期</code><br><a href="https://segmentfault.com/a/1190000022193508" target="_blank" rel="noopener">字符集：ASCII，GB2312，Unicode，UTF-8，ANSI</a><br><a href="https://www.jianshu.com/p/57c27d67a8a8" target="_blank" rel="noopener">特殊字符(包括emoji)梳理和UTF8编码解码原理</a><br><a href="https://www.jianshu.com/p/668356dd8089" target="_blank" rel="noopener">char 码点和代码单元</a>    </p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>字符</tag>
      </tags>
  </entry>
  <entry>
    <title>图像基础知识、图像基础属性、图像哪些你不知道的小知识点 (一)</title>
    <url>/2020/02/22/%E5%9B%BE%E7%89%87/%E5%9B%BE%E5%83%8F%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><blockquote>
<p><a href="https://www.w3.org/Graphics/" target="_blank" rel="noopener">W3C图像详细定义</a></p>
</blockquote>
<h4 id="图形格式"><a href="#图形格式" class="headerlink" title="图形格式"></a>图形格式</h4><p>图像格式分为位图图形格式和矢量图形格式。</p>
<h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><p>位图（bitmap）图形格式是以像素点阵来描绘图像。<br>矢量图片格式是通过组成图形的一些基本元素，如点、线、面，边框，填充色等信息通过计算的方式来显示图形的。</p>
<blockquote>
<p>引用:<a href="https://zhuanlan.zhihu.com/p/22496580" target="_blank" rel="noopener">图片格式中的小较真</a><br>&emsp;&emsp; <strong>矢量图</strong> 是通过组成图形的一些基本元素，如点、线、面，边框，填充色等信息通过计算的方式来显示图形的。就好比我们在几何学里面描述一个圆可以通过它的圆心位置和半径来描述，当然还可以通过边框的粗细、颜色以及填充的颜色等数据去描述它的样式。而电脑在显示的时候则通过这些数据去绘制出我们定义的图像。<br>&emsp;&emsp; <strong>矢量图</strong> 的优点在于文件相对较小，并且放大缩小不会失真。缺点则是以完美的几何图形表现出来的图片很难表现自然度高的写实图像。<br>&emsp;&emsp; <strong>位图</strong> 又叫像素图或栅格图，它是通过记录图像中每一个点的颜色、深度、透明度等信息来存储和显示图像。一张位图就好比一幅大的拼图，只不过每个拼块都是一个纯色的像素点，当我们把这些不同颜色的像素点按照一定规律排列在一起的时候，就形成了我们所看到的图像。所以当我们放大一幅像素图到一定程度时，能看到拼片一样的像素点。<br>&emsp;&emsp; <strong>位图</strong> 的优点是利于显示色彩层次丰富的写实图像。缺点则是文件较大，放大和缩小图像会失真。尽管我们在web页面中所使用的JPG、PNG、GIF格式的图像都是位图，即他们都是通过记录像素点的数据来保存和显示图像，但这些不同格式的图像在记录这些数据时的方式却不一样，这就是涉及到有损压缩和无损压缩的区别——是否失真。</p>
</blockquote>
<a id="more"></a>

<h5 id="图形格式实现"><a href="#图形格式实现" class="headerlink" title="图形格式实现"></a>图形格式实现</h5><blockquote>
<p>参考：<a href="https://zh.wikipedia.org/wiki/图形文件格式比较#位图" target="_blank" rel="noopener">图形格式具体格式</a></p>
</blockquote>
<p>位图：JPEG/JPG、PNG、WEBP、GIF等<br>矢量图： SVG等</p>
<h5 id="图形存储"><a href="#图形存储" class="headerlink" title="图形存储"></a>图形存储</h5><p>位图存储即像素点的存储。将五颜六色像素点使用计算机二进制(0/1)来进行描述。进而引出图像模式。<br>图像模式分为：位图模式、RGB模式、索引颜色模式<br><strong>位图模式</strong> 是1位深度的图像。它只是黑和白两种颜色。<br><strong>RGB模式</strong> 是三原色模式，一个像素点用8位3通道即24位(3个字节)来进行描述，表示的颜色范围有1677万种颜色，我们也称之谓“真彩色”。<br><strong>索引颜色模式</strong> 生成最多256种颜色的8位图像文件。当转换为索引颜色时，Photoshop 将构建一个颜色查找表 (CLUT)，用以存放并索引图像中的颜色。如果原图像中的某种颜色没有出现在该表中，则程序将选取最接近的一种，或使用仿色以现有颜色来模拟该颜色。</p>
<p><strong>矢量</strong> 又称为「向量」，矢量图形中的图形元素（点和线段）称为对象，每个对象都是一个单独的个体，它具有大小、方向、轮廓、颜色和屏幕位置等属性。例如SVG（可缩放矢量图形）是一种基于 XML 语法的图像格式,是对图像的形状描述。</p>
<blockquote>
<p>参考：<br><a href="https://baike.baidu.com/item/图像模式/3063020" target="_blank" rel="noopener">图像模式</a><br><a href="https://helpx.adobe.com/cn/photoshop/using/color-modes.html" target="_blank" rel="noopener">AdobePhotoshop用户指南-图像和颜色基础知识-颜色模式</a><br><a href="http://jartto.wang/2018/12/09/bitmap/" target="_blank" rel="noopener">什么是位图和矢量图</a></p>
</blockquote>
<h4 id="通道"><a href="#通道" class="headerlink" title="通道"></a>通道</h4><p>&emsp;&emsp;作者认为通道出现更多是技术层面方式实现颜色变化表示所产生的。<br>&emsp;&emsp;通道作为图像的组成部分，是与图像的格式密不可分的，图像颜色，格式的不同决定了通道的数量和模式，在ps通道面板中可以直观的看到。<br>&emsp;&emsp;位图模式和索引模式的图片是单通道图片，而RGB模式的图片是三通道图片，通过为R通道、G通道、B通道，RGBA模式图片是四通道图片，是在RGB三个通道上额外增加的一个Alpha通道。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安卓支持的颜色模式：</span><br><span class="line">颜色模式	  备注</span><br><span class="line">ARGB8888	 四通道高精度(32位)</span><br><span class="line">ARGB4444	 四通道低精度(16位)</span><br><span class="line">RGB565	   屏幕默认模式(16位)</span><br><span class="line">Alpha8	   仅有透明通道(8位)</span><br></pre></td></tr></table></figure>

<h4 id="颜色深度-色彩深度"><a href="#颜色深度-色彩深度" class="headerlink" title="颜色深度(色彩深度)"></a>颜色深度(色彩深度)</h4><p>&emsp;&emsp;色彩深度简称色深，在计算机图形学领域表示在位图或者视频帧缓冲区中储存每一像素的颜色所用的位数，常用单位为位/像素（bpp）。色彩深度越高，可用的颜色就越多。<br>eg: JPEG颜色深度：24位 png-8颜色深度：8位</p>
<blockquote>
<p>参考：<a href="https://zh.wikipedia.org/wiki/%E8%89%B2%E5%BD%A9%E6%B7%B1%E5%BA%A6" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E8%89%B2%E5%BD%A9%E6%B7%B1%E5%BA%A6</a></p>
</blockquote>
<h4 id="Alpha透明和索引透明"><a href="#Alpha透明和索引透明" class="headerlink" title="Alpha透明和索引透明"></a>Alpha透明和索引透明</h4><p>讲述索引透明，需要先说明下<a href="https://www.hisour.com/zh/indexed-color-24729/" target="_blank" rel="noopener">索引颜色(Indexed Color)</a>。</p>
<blockquote>
<p>&emsp;&emsp;在计算中，<strong>索引颜色（Indexed color）</strong> 是一种以有限的方式管理数字图像颜色的技术，以节省计算机内存和文件存储空间，同时加速显示刷新和文件传输。它是矢量量化压缩的一种形式。<br>&emsp;&emsp;当以这种方式对图像进行编码时，颜色信息不直接由图像像素数据携带，而是存储在称为调色板的单独数据片段中：颜色元素阵列。数组中的每个元素表示一种颜色，由它在数组中的位置进行索引。单个条目有时被称为颜色寄存器。图像像素不包含其颜色的完整规范，但仅包含其在调色板中的索引。这种技术有时被称为伪彩色或间接彩色，因为颜色是间接处理的。</p>
</blockquote>
<p>索引透明是基于索引颜色上增加一位来标识透明。</p>
<blockquote>
<p>&emsp;&emsp;通常使用索引颜色的情况下，图像深度的值即为 8，因而调色板里存放的颜色就只有 256 种颜色，长度为 256 * 3 个字节。再加上 1 位布尔值表示透明像素，这就是我们常说的 png8 图片了。<br>摘抄至：<a href="http://www.alloyteam.com/2017/03/the-story-of-png-get-images-and-pixel-content/" target="_blank" rel="noopener">png 的故事：获取图片信息和像素内容</a>    </p>
</blockquote>
<p>Alpha透明即阿尔法透明，通常我们会使用一个通道来单独表示Alpha透明。因此对于8位的Alpha通道可以表示256种不同程度半透明色。</p>
<h4 id="图像逐行扫描算法和隔行扫描算法"><a href="#图像逐行扫描算法和隔行扫描算法" class="headerlink" title="图像逐行扫描算法和隔行扫描算法"></a>图像逐行扫描算法和隔行扫描算法</h4><p>字面上意思逐行扫描算法是像素点一行一行行的扫描显示的，隔行扫描算法是每次扫描会跳过一些像素点进行多次扫描显示。<br>从图片展示效果：逐行扫描算法上看到图像是一行一行的展示出来，隔行扫描算法是整体模糊展示逐步清晰显示出来。<br>photoshop上设置这两种编码算法是基准(逐行扫描算法)和连续(隔行扫描算法)。<br>在网速相对较慢情况下，图片即刻展示。</p>
<h4 id="有损压缩和无损压缩"><a href="#有损压缩和无损压缩" class="headerlink" title="有损压缩和无损压缩"></a>有损压缩和无损压缩</h4><p>&emsp;&emsp;有损压缩是对图像数据进行处理，去掉那些我们人眼分辨不出来的颜色，然后周边颜色通过渐变或者其他形式补充进来。这样既然降低图片质量大小，又不会影响图片的还原效果。(eg:JPEG)<br>&emsp;&emsp;无损压缩是先判断图像上哪些区域颜色是相同的，哪些是不同的，然后把这些相同数据信息进行压缩记录，而把不同数据另外保存。（eg:PNG）<br>参考：<a href="https://www.cnblogs.com/pqjzxq/p/5749304.html#%E6%9C%89%E6%8D%9F%E5%8E%8B%E7%BC%A9%E5%92%8C%E6%97%A0%E6%8D%9F%E5%8E%8B%E7%BC%A9" target="_blank" rel="noopener">有损压缩和无损压缩</a></p>
<h4 id="从编码图片工具性能角度"><a href="#从编码图片工具性能角度" class="headerlink" title="从编码图片工具性能角度"></a>从编码图片工具性能角度</h4><p>这篇文章分析很到位<a href="https://blog.ibireme.com/2015/11/02/mobile_image_benchmark/" target="_blank" rel="noopener">移动端图片格式调研</a></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>各类主要图像格式突现时间线：<strong>GIF-1987</strong>，<strong>JPEG-1992</strong>，<strong>PNG-1996</strong>，<strong>APNG-2004</strong>，<strong>WebP-2010</strong></p>
<h4 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h4><p><a href="http://www.alloyteam.com/2017/03/the-story-of-png-get-images-and-pixel-content/" target="_blank" rel="noopener">png 的故事：获取图片信息和像素内容</a><br><a href="https://www.hisour.com/zh/indexed-color-24729/" target="_blank" rel="noopener">索引颜色(Indexed Color)</a><br><a href="https://zh.wikipedia.org/wiki/图形文件格式比较#位图" target="_blank" rel="noopener">图形文件格式比较</a><br><a href="https://baike.baidu.com/item/图像模式/3063020" target="_blank" rel="noopener">图像模式</a><br><a href="https://helpx.adobe.com/cn/photoshop/using/color-modes.html" target="_blank" rel="noopener">AdobePhotoshop用户指南-图像和颜色基础知识-颜色模式</a><br><a href="http://jartto.wang/2018/12/09/bitmap/" target="_blank" rel="noopener">什么是位图和矢量图</a><br><a href="https://zhuanlan.zhihu.com/p/22496580" target="_blank" rel="noopener">图片格式中的小较真</a><br><a href="https://zh.wikipedia.org/wiki/图形文件格式比较#位图" target="_blank" rel="noopener">图形文件格式比较</a></p>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>前端</tag>
        <tag>图像</tag>
      </tags>
  </entry>
  <entry>
    <title>深入密码学习</title>
    <url>/2020/09/15/%E6%9C%AA%E5%AE%8C%E6%88%90/%E6%B7%B1%E5%85%A5%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a href="https://github.com/drgonroot/drgonroot.github.io/issues/new" target="_blank" rel="noopener">吐槽、建议、解惑入口网址</a></p>
<h3 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h3><blockquote>
<p>作者研读《图解密码技术-第三版》的学习总结</p>
</blockquote>
<p>图表面对不同场景应运而生技术</p>
<table>
<thead>
<tr>
<th>信息安全所面对威胁</th>
<th>受威胁的特性</th>
<th>用来应对技术</th>
</tr>
</thead>
<tbody><tr>
<td>窃听(秘密泄露)</td>
<td>机密性</td>
<td>对称密码、公钥密码即非对称密码</td>
</tr>
<tr>
<td>篡改(信息被修改)</td>
<td>完整性</td>
<td>单项散列函数、消息认证码、数字签名</td>
</tr>
<tr>
<td>伪装(伪装成真正的发送者)</td>
<td>认证</td>
<td>消息认证码、数字签名</td>
</tr>
<tr>
<td>否认(事后称自己没有做)</td>
<td>不可否认性</td>
<td>数字签名</td>
</tr>
</tbody></table>
<h4 id="对称密码-共享密钥密码"><a href="#对称密码-共享密钥密码" class="headerlink" title="对称密码/共享密钥密码"></a>对称密码/共享密钥密码</h4><blockquote>
<p>算法涵盖：比特异或运算，XOR<br><strong>用相同的密钥进行加密和解密</strong><br><strong>对称密码是通过将明文转换为复杂的形式来保证其机密性。</strong>   </p>
</blockquote>
<p><strong>分组密码</strong><br>&emsp;&emsp;分组密码是每次只能处理特定长度的一块明文数据的一类密码算法，这里的“一块”就是<code>分组(block)</code>。此外一个分组的比特数称为<code>分组长度（block length）</code>。</p>
<h5 id="DES-2000年前被破译，可以废弃"><a href="#DES-2000年前被破译，可以废弃" class="headerlink" title="DES [2000年前被破译，可以废弃]"></a>DES [2000年前被破译，可以废弃]</h5><p>&emsp;&emsp;DES（Data Encryption Standard）是1977年美国联邦信息处理标准（FIPS）中采用的一种对称密码，也是分组密码，分组长度为64比特，密码算法一次只能加密64比特的明文，并生成64比特的密文。如果要加密的明文比较长，则需要使用DES加密算法反复迭代加密明文。DES的密钥长度是64比特，但由于每隔7比特会设置一个用于错误检查的比特，因此实质上其密钥长度为56比特。</p>
<p>&emsp;&emsp;后续DES破译后，出现了三重DES(triple-DES，DES-EDE3, 3DES)。三重DES是为了增加DES的强度，将DES重复3次所得到一种密码算法。</p>
<a id="more"></a>
<h5 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h5><p>&emsp;&emsp;AES（Advanced Encryption Standard, Rijdael）是分组密码，分组长度为128比特，密码算法一次可加密128比特的明文，并生成128比特的密文。如果要加密的明文比较长，则需要使用AES加密算法反复迭代加密明文。AES的规格中密钥长度有128、192和256比特三种。</p>
<h5 id="分组密码的模式"><a href="#分组密码的模式" class="headerlink" title="分组密码的模式"></a>分组密码的模式</h5><p><strong>模式</strong><br>&emsp;&emsp;分组密码算法只能加密固定长度的分组，但是我们需要加密的明文长度可能会超过分组密码的分组长度，这是就需要对分组密码算法进行迭代，以便将一段明文全部加密完成。而迭代的方法就称为分组密码的<code>模式</code>。</p>
<p>攻击模式：</p>
<ul>
<li>直接操作密文从而直接影响到明文，导致解密后明文和加密前明文意思完全不一样。</li>
<li>通信过程某些比特缺失，导致密文无法解密。</li>
<li>填充提示攻击是一种利用分组密码中的填充部分来进行攻击的方法。</li>
<li>重放攻击是用使用历史上某次中几段分组密文替换本次密文中某些分组密文。这个方式让接收解密明文的人无法判断解密明文中错误是通信错误还是人为攻击。</li>
</ul>
<p>常用分组密码的模式比较表：</p>
<blockquote>
<p>CRYPTREC (Cryptography Research and Evaluation Committees) 密码学研究和评估委员会</p>
</blockquote>
<table>
<thead>
<tr>
<th>模式</th>
<th>名称</th>
<th>优点</th>
<th>缺点</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>ECB模式</td>
<td>Electronic CodeBook 电子密码本模式</td>
<td><li>简单</li> <li>快速</li><li>支持并行计算（加密、解密）</li></td>
<td><li>明文中重复排列反映在密文中</li><li>通过删除、替换密文分组可以对明文进行操作</li><li>对包含某些比特错误的密文进行解密时，对应的分组会出错</li><li>不能抵御重放攻击</li></td>
<td>不应使用</td>
</tr>
<tr>
<td>CBC模式</td>
<td>Cipher Block Chainning 密文分组链接模式</td>
<td><li>明文的重复排列不会反映在密文中</li><li>支持并行计算</li><li>能够解密任意密文分组</li></td>
<td><li>对包含某些错误比特的密文进行解密时，第一个分组的全部比特以及后一个分组的相应比特会出错</li><li>加密不支持并行计算</li></td>
<td>CRYPTREC 推荐；《实用密码学》推荐</td>
</tr>
<tr>
<td>CFB模式</td>
<td>Cipher FeedBack 密文反馈模式</td>
<td><li>不需要填充（padding）</li><li>支持并行计算（仅解密）</li><li>能够解密任意密文分组</li></td>
<td><li>加密不支持并行计算</li><li>对包含某些错误比特的密文进行解密时，第一个分组的相应比特以及后一个分组的全部比特会出错</li><li>不能抵御重放攻击</li></td>
<td>CRYPTREC 推荐</td>
</tr>
<tr>
<td>OFB模式</td>
<td>Output-FeedBack 输出反馈模式</td>
<td><li>不需要填充（padding）</li><li>可事先进行加密、解密的准备</li><li>加密、解密使用相同的结构</li><li>对包含某些错误比特的密文进行解密时，只有明文中相对应的比特会出错</li></td>
<td><li>不支持并行运算</li><li>主动攻击者反转密文分组中的某些比特是，明文中对应的比特也会被反转</li></td>
<td>CRYPTREC 推荐</td>
</tr>
<tr>
<td>CTR模式</td>
<td>CounTeR 计数器模式</td>
<td><li>不需要填充（padding）</li><li>可事先进行加密、解密准备</li><li>加密、解密使用相同结构</li><li>对包含某些错误比特的密文进行解密是，只有明文中相对应的比特会出错</li><li>支持并行计算（加密、解密）</li></td>
<td>主动攻击者反转密文分组中某些比特时，明文分组中相对应的比特也会被反转</td>
<td>CRYPTREC 推荐；《实用密码学》推荐</td>
</tr>
</tbody></table>
<h4 id="公钥密码（非对称加密"><a href="#公钥密码（非对称加密" class="headerlink" title="公钥密码（非对称加密)"></a>公钥密码（非对称加密)</h4><blockquote>
<p>公钥密码（public-key Cryptography）中，密钥分为加密密钥和解密密钥两种。发送者用加密密钥对消息进行加密，接收者用解密密钥对密文机型解密。<br><strong>公钥密码是基于数学上的困难的问题来保证机密性。</strong></p>
</blockquote>
<p>&emsp;&emsp;公钥密码中，加密密钥一般是公开的。由于加密密钥可以任意公开，因此该密钥被称为<code>公钥（public key）</code>。解密密钥是绝对不能公开的，这个密钥只能有自己保管，因此称为<code>私钥(private key)</code>。公钥和私钥是一一对应的，一对公钥和私钥统称为<code>密钥对（key pair）</code>。由公钥进行加密的密文，必须使用由该公钥配对的私钥才能解密。</p>
<h5 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h5><blockquote>
<p>RSA 开发者首字母大写（Ron Rivest、Adi Shamir、Leonard Adleman）<br>RSA的机密性：</p>
</blockquote>
<ol>
<li>依赖目前发展，还没有发现求离散对数的高效算法</li>
<li>依赖目前发展，对大整数进行质因数分解的高效算法</li>
</ol>
<p>RSA加密：密文 = 明文^E mod N<br>E和N的组合就是公钥  </p>
<p>RSA解密：明文 = 密文^D mod N<br>D和N的组合就是私钥</p>
<p>攻击模式：</p>
<ol>
<li>中间人攻击（man-in-the-middle Attack）</li>
<li>选择密文攻击（Chosen Cipher Attack ）<br>对应解决方案是在RSA的明文中加入认证的信息，解密进行识别是否是认证人明文信息。即RSA-OAEP(Optimal Asymmetric Encryption Padding，最优非对称加密填充)</li>
</ol>
<p>在RSA Chanllenge，有公开记录的被成功分解的最长的RSA数为RSA-768(232位)。但是长度为2048比特的整数目前是安全的即RSA-2048(617位)。因此默认RSA的密钥长度是2048比特。</p>
<p>公钥密码的运行速度远远低于对称密。</p>
<h4 id="混合密码系统了解"><a href="#混合密码系统了解" class="headerlink" title="混合密码系统了解"></a>混合密码系统了解</h4><blockquote>
<p>用对称密码提高速度，用公钥密码保护会话密钥<br>应用：SSL/TLS</p>
</blockquote>
<p>混合密码系统（hybrid cryptosystem）是将对称密码和公钥密码的优势相结合的方法。<br>组成机制：</p>
<blockquote>
<p>会话密钥是指本次通信而生成的临时密钥，它一般是通过伪随机数生成器产生的。会话密钥是对称密码的密钥，同时也是公钥密码的明文。</p>
</blockquote>
<ul>
<li>用对称密码加密消息</li>
<li>通过伪随机数生成器生成对称密码作为会话密钥，加密时使用</li>
<li>用公钥密码加密会话密钥</li>
<li>从混合密码系统外部赋予公钥密码加密时使用的密钥</li>
</ul>
<p>数字签名，是由单向散列函数和公钥密码组合而成的<br>证书，是由公钥和数字签名组合而成的<br>消息认证码，是由单向散列函数和密钥组合而成的，也可以通过对称密码来生成  </p>
<h4 id="单向散列函数"><a href="#单向散列函数" class="headerlink" title="单向散列函数"></a>单向散列函数</h4><blockquote>
<p>获取消息的“指纹”，单向散列函数也称为消息摘要函数（message digest function）、哈希函数。<br>输入单向散列函数的消息也称为原像。<br>单向散列函数输出的散列值也称为消息摘要（message digest）或者指纹（fingerprint）。完整性也称为一致性。</p>
</blockquote>
<p>&emsp;&emsp;<code>单向散列函数</code>(one-way hash function) 有一个输入和一个输出，其中输入消息称为消息（message）,输出称为散列值（hash value）。单向散列函数可以根据消息内容计算出散列值，而散列值就可以被用来检查消息的完整性。<br>&emsp;&emsp;单向散列函数根据任意长度的消息计算出固定长度的散列值，能够快速计算出散列值。单向散列函数一般要具备弱抗碰撞性（要找到和该消息具有相同的散列值的另外一条消息是非常困难的）和强抗碰撞性（要找到散列值相同的两条不同消息是非常困难的）。</p>
<h5 id="MD4和MD5"><a href="#MD4和MD5" class="headerlink" title="MD4和MD5"></a>MD4和MD5</h5><p>&emsp;&emsp;MD4 是1990年Rivest设计出的单向散列函数，可以产生出128比特的散列值。后续MD4已经被Dobbertin找到MD4散列碰撞方法，现在已经不安全了。<br>&emsp;&emsp;MD5 是1991年Rivest设计的单向散列函数，能够产生生128比特的散列值。后续MD5的强抗碰撞性被攻破，因此它也不安全了。</p>
<h5 id="SHA-1和SHA-2"><a href="#SHA-1和SHA-2" class="headerlink" title="SHA-1和SHA-2"></a>SHA-1和SHA-2</h5><blockquote>
<p>SHA-1和SHA-2是基于相同MD（message digest）结构的单向散列函数。</p>
</blockquote>
<p>&emsp;&emsp;SHA-1是一种能够产生160比特的散列值的单向散列函数，但是针对于SHA-1的碰撞攻击算法在2005年已经实现了，所以SHA-1是不安全的。   </p>
<p>&emsp;&emsp;SHA-2一共包含6种版本。但其实这6种版本SHA-2实质上都是由SHA-256和SHA-512这个两个版本衍生出来的，其他版本都是通过将上述两种版本所生成的结果截取得到的。SHA-2现在还没有攻破是安全的。</p>
<p>6种版本的SHA-2   </p>
<table>
<thead>
<tr>
<th>名称</th>
<th>输出长度</th>
<th>内部状态</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>SHA-224</td>
<td>224</td>
<td>32*8</td>
<td>将SHA-256的结果截掉32比特</td>
</tr>
<tr>
<td>SHA-256</td>
<td>256</td>
<td>32*8</td>
<td></td>
</tr>
<tr>
<td>SHA-512/224</td>
<td>224</td>
<td>64*8</td>
<td>将SHA-512的结果截掉288比特</td>
</tr>
<tr>
<td>SHA-512/256</td>
<td>256</td>
<td>64*8</td>
<td>将SHA-512的结果截掉256比特</td>
</tr>
<tr>
<td>SHA-385</td>
<td>384</td>
<td>64*8</td>
<td>将SHA-512的结果截掉128比特</td>
</tr>
<tr>
<td>SHA-512</td>
<td>512</td>
<td>64*8</td>
<td></td>
</tr>
</tbody></table>
<h5 id="SHA-3-Keccak"><a href="#SHA-3-Keccak" class="headerlink" title="SHA-3 (Keccak)"></a>SHA-3 (Keccak)</h5><blockquote>
<p>SHA-3(Secure Hash algorithm-3)是一种作为新标准发布的单向散列函数算法，用来替代在理论上已被找出攻击方法的SHA-1算法。全世界的企业和密码学家提交了很多SHA-3的标准方案，经过长达5年的选拔，最终于在2012年正式确定将Keccak算法作为SHA-3标准。</p>
</blockquote>
<p>SHA-3(Keccak)可以生成任意长度的散列值，但为了配合SHA-2的散列值长度，SHA-3标准中共规定了SHA3-224,SHA3-256,SHA3-384,SHA3-512这4种版本。SHA-3是安全的。</p>
<h4 id="消息认证码"><a href="#消息认证码" class="headerlink" title="消息认证码"></a>消息认证码</h4><blockquote>
<p>目的解决消能够息被正确传送了,中间没有发生篡改且能否，确认消息是对方发送的</p>
</blockquote>
<p>&emsp;&emsp;消息认证码的输入包括任意长度的消息和<code>一个发送者与接收者之间共享的密钥</code>，它可以输出固定长度的数据，这个数据称为<code>MAC值</code>。</p>
<p>消息认证码的实现方法：使用单向散列函数实现（eg: HMAC）,使用分组密码实现（eg:AES-CMAC）等等<br>我们是可以对消息认证码进行重放攻击的，一般针对这种情况，我们可以是以下方法进行防御：</p>
<ul>
<li>约定每次都对发送的消息赋予一个递增的编号（序号），并且在计算MAC的值时将序号也包含在消息中。这种方法虽然有效，但是对于每个通信都需要记录最后一个消息的序号。（微信支付中微信代扣requestId）</li>
<li>约定在发送消息时包含当前的时间啊，如果收到以前的消息，即便MAC值正确也将其当做错误消息来处理，这就能防御重放攻击。这种方法虽然有效，但是发送者和接收者的时钟必须一致，而且考虑到通信延迟，必须在时间的判断上留下缓冲，于是多多少少还是存在可以进行重放攻击的空间。</li>
<li>在通信之前，接收者先向发送者发送一个一次性的随机数，这个随机数一般称为nonce。发送者咋消息中包含这个nonce并计算MAC值。由于每次同时nonce的值发生变化，因此无法进行重放攻击。这种方法虽然有效，但是通信的数据会有所增加。（广泛运用在微信支付、支付宝支付上）</li>
</ul>
<p>&emsp;&emsp;消息认证码对于防止否认和第三方证明上无法解决的。</p>
<h5 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h5><p>&emsp;&emsp;因为使用单向散列函数构造消息认证码，所以可以使用SHA-1,SHA-224,SHA-256,SHA-384,SHA-512构造消息认证码。这些方式构造消息认证码叫HMAC-SHA1,HMAC-SHA-224,HMAC-SHA-384,HMAC-SHA-512。</p>
<h4 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h4><blockquote>
<p>目的是解决消息是谁写的问题</p>
</blockquote>
<p>&emsp;&emsp;数字签名（digital signnature）是将消息认证码中对称密码换成公钥密码，这样发送者和接收者都使用者不同的密码。 发送者使用公钥密码的私钥对消息进行签名处理，接收者是用公钥密码的公钥验证消息的签名。<br>&emsp;&emsp;数字签名对签名密钥和验证密钥进行了区分，使用验证密钥是无法生成签名的。签名密钥只能由签名的人持有，而验证签名则是任何需要验证签名的人都可以持有。换句话说数字签名就是通过将公钥密码“反过来用”而实现的。</p>
<p>公钥密码与数字签名的密钥使用方式</p>
<table>
<thead>
<tr>
<th></th>
<th>私钥</th>
<th>公钥</th>
</tr>
</thead>
<tbody><tr>
<td>公钥密码</td>
<td>接收者解密时使用</td>
<td>发送者加密时使用</td>
</tr>
<tr>
<td>数字签名</td>
<td>签名者生成签名时使用</td>
<td>验证者验证签名时使用</td>
</tr>
<tr>
<td>谁持有密钥？</td>
<td>个人持有</td>
<td>只要需要，任何人都可以持有</td>
</tr>
</tbody></table>
<p>对消息散列值签名的使用流程：</p>
<ol>
<li>发送方使用单向散列函数将消息生成一个散列值</li>
<li>发送方使用数字签名的私钥对散列值进行签名</li>
<li>然后将消息和签名一起发送给接收方</li>
<li>接收方使用数字签名的公钥解密签名</li>
<li>接收方使用单向散列函数将接收消息生成一个散列值，和解密后签名进行对照</li>
</ol>
<p>&emsp;&emsp;数字签名不会保证消息的机密性，数字签名的作用是防止否认的及第三方也可以认证。但是数字签名容易受到“中间人攻击”，同时我们也无法高效验证自己手中公钥是否是有效的。<br>&emsp;&emsp;对称密码的密钥是机密性的精华，单向散列函数的散列值是完整性的精华。</p>
<h4 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h4><blockquote>
<p>为公钥加上数字签名</p>
</blockquote>
<p>&emsp;&emsp;公钥证书（Public Key Certificat, PKC）其实和驾照很相似，里面记有姓名、组织、邮箱地址等个人信息，以及属于此人的公钥，并由认证机构（Certification Authority、Certifying Authority，CA）施加数字签名。只要看到公钥证书，我们就可以知道认证机构认定该公钥的确属于此人。公钥证书也简称为证书（certificate）。</p>
<p>&emsp;&emsp;公钥基础设施（Public Key Infrastructure）,简称PKI.公钥基础设施是为了能够更有效地运用公钥而制定的一系列规范和规格的总称。</p>
<p>####随机数</p>
<blockquote>
<p>不可预测性源泉  </p>
</blockquote>
<ul>
<li>随机性 不存在统计学偏差，是完全杂乱的数列</li>
<li>不可预测性 不能从过去的数列推测出下一个出现的数</li>
<li>不可重现性 除非将数列本身部分保存下来，否则不能重现相同的数列</li>
</ul>
<p><strong>伪随机数生成器</strong><br>&emsp;&emsp;通过硬件生成的随机数列，是根据传感器收集的热量、声音的变化等事实上无法预测和重现的自然现象信息来生成的。像这样的硬件设备就称为随机数生成器（Random Number Generator， RNG）。<br>&emsp;&emsp;而可以生成随机数的软件则称为伪随机数生成器（Pseudo Random Number Generator，PRNG）。因为仅靠软件无法生成真随机数。<br>&emsp;&emsp;为了生成伪随机数，伪随机数生成器需要被称为种子（seed）的信息。伪随机数的种子是用来对伪随机数生成器的内部状态进行初始化的。伪随机数的种子是一串随机的比特序列，根据种子就可以生成出专属于自己的伪随机数列。<br>单向单列函数的单向性是支撑伪随机数生成器不可预测性的基础。<br>密码的机密性是支持伪随机生成器不可预测的基础。</p>
<p><strong>随机数应用：</strong></p>
<ul>
<li>生成密钥<br>用于对称密码和消息认证码</li>
<li>生成密钥对<br>用于公钥密码和数字签名     </li>
<li>生成初始化向量（IV）<br>用分组密码的CBC、CFB和OFB模式    </li>
<li>生成nonce<br>用于防御重放攻击以及分组密码的CTR模式等   </li>
<li>生成盐<br>用于基于口令的密码（PBE）等</li>
</ul>
<p><strong>备注</strong><br>Java中有个用于生成随机数数列的类，名叫java.util.Random,然而这个类也不能用于安全相关用途。如果要用于安全相关用途，可以使用另一个名叫java.security.SecureRandom的类。</p>
<h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><h5 id="openssl-加密工具"><a href="#openssl-加密工具" class="headerlink" title="openssl 加密工具"></a>openssl 加密工具</h5><blockquote>
<p>摘抄至 <a href="https://www.openssl.org/docs/man1.0.2/man1/enc.html" target="_blank" rel="noopener">OpenSSL</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">base64             Base 64</span><br><span class="line"></span><br><span class="line"> bf-cbc             Blowfish in CBC mode</span><br><span class="line"> bf                 Alias for bf-cbc</span><br><span class="line"> bf-cfb             Blowfish in CFB mode</span><br><span class="line"> bf-ecb             Blowfish in ECB mode</span><br><span class="line"> bf-ofb             Blowfish in OFB mode</span><br><span class="line"></span><br><span class="line"> cast-cbc           CAST in CBC mode</span><br><span class="line"> cast               Alias for cast-cbc</span><br><span class="line"> cast5-cbc          CAST5 in CBC mode</span><br><span class="line"> cast5-cfb          CAST5 in CFB mode</span><br><span class="line"> cast5-ecb          CAST5 in ECB mode</span><br><span class="line"> cast5-ofb          CAST5 in OFB mode</span><br><span class="line"></span><br><span class="line"> des-cbc            DES in CBC mode</span><br><span class="line"> des                Alias for des-cbc</span><br><span class="line"> des-cfb            DES in CBC mode</span><br><span class="line"> des-ofb            DES in OFB mode</span><br><span class="line"> des-ecb            DES in ECB mode</span><br><span class="line"></span><br><span class="line"> des-ede-cbc        Two key triple DES EDE in CBC mode</span><br><span class="line"> des-ede            Two key triple DES EDE in ECB mode</span><br><span class="line"> des-ede-cfb        Two key triple DES EDE in CFB mode</span><br><span class="line"> des-ede-ofb        Two key triple DES EDE in OFB mode</span><br><span class="line"></span><br><span class="line"> des-ede3-cbc       Three key triple DES EDE in CBC mode</span><br><span class="line"> des-ede3           Three key triple DES EDE in ECB mode</span><br><span class="line"> des3               Alias for des-ede3-cbc</span><br><span class="line"> des-ede3-cfb       Three key triple DES EDE CFB mode</span><br><span class="line"> des-ede3-ofb       Three key triple DES EDE in OFB mode</span><br><span class="line"></span><br><span class="line"> desx               DESX algorithm.</span><br><span class="line"></span><br><span class="line"> gost89             GOST 28147-89 in CFB mode (provided by ccgost engine)</span><br><span class="line"> gost89-cnt        `GOST 28147-89 in CNT mode (provided by ccgost engine)</span><br><span class="line"></span><br><span class="line"> idea-cbc           IDEA algorithm in CBC mode</span><br><span class="line"> idea               same as idea-cbc</span><br><span class="line"> idea-cfb           IDEA in CFB mode</span><br><span class="line"> idea-ecb           IDEA in ECB mode</span><br><span class="line"> idea-ofb           IDEA in OFB mode</span><br><span class="line"></span><br><span class="line"> rc2-cbc            128 bit RC2 in CBC mode</span><br><span class="line"> rc2                Alias for rc2-cbc</span><br><span class="line"> rc2-cfb            128 bit RC2 in CFB mode</span><br><span class="line"> rc2-ecb            128 bit RC2 in ECB mode</span><br><span class="line"> rc2-ofb            128 bit RC2 in OFB mode</span><br><span class="line"> rc2-64-cbc         64 bit RC2 in CBC mode</span><br><span class="line"> rc2-40-cbc         40 bit RC2 in CBC mode</span><br><span class="line"></span><br><span class="line"> rc4                128 bit RC4</span><br><span class="line"> rc4-64             64 bit RC4</span><br><span class="line"> rc4-40             40 bit RC4</span><br><span class="line"></span><br><span class="line"> rc5-cbc            RC5 cipher in CBC mode</span><br><span class="line"> rc5                Alias for rc5-cbc</span><br><span class="line"> rc5-cfb            RC5 cipher in CFB mode</span><br><span class="line"> rc5-ecb            RC5 cipher in ECB mode</span><br><span class="line"> rc5-ofb            RC5 cipher in OFB mode</span><br><span class="line"></span><br><span class="line"> aes-[128|192|256]-cbc  128/192/256 bit AES in CBC mode</span><br><span class="line"> aes-[128|192|256]      Alias for aes-[128|192|256]-cbc</span><br><span class="line"> aes-[128|192|256]-cfb  128/192/256 bit AES in 128 bit CFB mode</span><br><span class="line"> aes-[128|192|256]-cfb1 128/192/256 bit AES in 1 bit CFB mode</span><br><span class="line"> aes-[128|192|256]-cfb8 128/192/256 bit AES in 8 bit CFB mode</span><br><span class="line"> aes-[128|192|256]-ecb  128/192/256 bit AES in ECB mode</span><br><span class="line"> aes-[128|192|256]-ofb  128/192/256 bit AES in OFB mode</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
